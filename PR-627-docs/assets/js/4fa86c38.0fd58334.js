"use strict";(self.webpackChunk_spectrum_charts_docs=self.webpackChunk_spectrum_charts_docs||[]).push([[54],{1184:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>a});var n=r(4041);const i={},s=n.createContext(i);function d(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(s.Provider,{value:t},e.children)}},9944:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api/analysis/MetricRange","title":"MetricRange","description":"The MetricRange component is used to add a custom area mark onto visualizations. MetricRange is only supported for Line components. When creating a MetricRange you define a metricStart and metricEnd for the range that controls the area of the chart it will cover. You can also provide a Metric to create an additional line within the MetricRange. This metric line is not a Trendline and will only display with the data you provide to the Chart.","source":"@site/docs/api/analysis/MetricRange.md","sourceDirName":"api/analysis","slug":"/api/analysis/MetricRange","permalink":"/react-spectrum-charts/PR-627-docs/docs/api/analysis/MetricRange","draft":false,"unlisted":false,"editUrl":"https://github.com/adobe/react-spectrum-charts/tree/main/packages/docs/docs/api/analysis/MetricRange.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Scatter","permalink":"/react-spectrum-charts/PR-627-docs/docs/api/visualizations/Scatter"},"next":{"title":"Trendline","permalink":"/react-spectrum-charts/PR-627-docs/docs/api/analysis/Trendline"}}');var i=r(1085),s=r(1184);const d={},a=void 0,c={},l=[{value:"Examples",id:"examples",level:2},{value:"Average line on a bar chart",id:"average-line-on-a-bar-chart",level:3},{value:"Props",id:"props",level:2}];function o(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"MetricRange"})," component is used to add a custom area mark onto visualizations. ",(0,i.jsx)(t.code,{children:"MetricRange"})," is only supported for ",(0,i.jsx)(t.code,{children:"Line"})," components. When creating a ",(0,i.jsx)(t.code,{children:"MetricRange"})," you define a ",(0,i.jsx)(t.code,{children:"metricStart"})," and ",(0,i.jsx)(t.code,{children:"metricEnd"})," for the range that controls the area of the chart it will cover. You can also provide a ",(0,i.jsx)(t.code,{children:"Metric"})," to create an additional line within the ",(0,i.jsx)(t.code,{children:"MetricRange"}),". This metric line is not a ",(0,i.jsx)(t.code,{children:"Trendline"})," and will only display with the data you provide to the ",(0,i.jsx)(t.code,{children:"Chart"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"MetricRanges"}),"s do not get added to the legend. Only the parent marks get added to the legend."]}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.h3,{id:"average-line-on-a-bar-chart",children:"Average line on a bar chart"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'<Chart data={data}>\n  <Bar>\n    <MetricRange metricStart="minDataKey" metricEnd="maxDataKey" color="gray-500" />\n  </Bar>\n</Chart>\n'})}),"\n",(0,i.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"name"}),(0,i.jsx)("th",{children:"type"}),(0,i.jsx)("th",{children:"default"}),(0,i.jsx)("th",{children:"description"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"children"}),(0,i.jsx)("td",{children:"ChartTooltip"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"Tooltip to be display when hovering over the metric range."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"color"}),(0,i.jsx)("td",{children:"SpectrumColor | CssColor"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"The line color of the metric range. If undefined, will default to the color of the series that it represents."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"displayOnHover"}),(0,i.jsx)("td",{children:"boolean"}),(0,i.jsx)("td",{children:"false"}),(0,i.jsx)("td",{children:"Whether the metric range should only be visible when hovering over the parent line."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"lineType"}),(0,i.jsx)("td",{children:"'solid' | 'dashed' | 'dotted' | 'dotDash' | 'shortDash' | 'longDash' | 'twoDash' | number[]"}),(0,i.jsx)("td",{children:"'dashed'"}),(0,i.jsx)("td",{children:"If a metric is provided, defines the line type of the metric line."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"lineWidth"}),(0,i.jsx)("td",{children:"'XS' | 'S' | 'M' | 'L' | 'XL' | number"}),(0,i.jsx)("td",{children:"'S'"}),(0,i.jsx)("td",{children:"If a metric is provided, defines the width of the metric line."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"metric"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"'value'"}),(0,i.jsx)("td",{children:"The key for the metric value in the data."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"metricEnd"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"-"}),(0,i.jsx)("td",{children:"The key for the upper range in the data."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"metricStart"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"-"}),(0,i.jsx)("td",{children:"The key for the lower range in the data."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"rangeOpacity"}),(0,i.jsx)("td",{children:"number"}),(0,i.jsx)("td",{children:"0.8"}),(0,i.jsx)("td",{children:"The opacity of the metric range"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"scaleAxisToFit"}),(0,i.jsx)("td",{children:"boolean"}),(0,i.jsx)("td",{children:"false"}),(0,i.jsx)("td",{children:"Whether or not the y-axis should expand to include the entire metric range (if necessary)."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);