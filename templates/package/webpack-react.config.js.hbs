/* eslint-disable @typescript-eslint/no-var-requires */
const path = require('path');
const webpack = require('webpack');
const nodeExternals = require('webpack-node-externals');
const { name, version } = require('./package.json');
const banner = `${name}@v${version}`;

module.exports = {
  entry: './index.ts',
  mode: 'production',

  output: {
    filename: 'index.js',
    path: path.resolve(__dirname, 'dist'),
    library: 'spectrumCharts{{properCase name}}',
    libraryTarget: 'umd',
    globalObject: 'this',
    clean: true,
  },

  module: {
    rules: [
      {
        test: /\.(ts|tsx)$/,
        exclude: /node_modules/,
        use: 'ts-loader',
      },
    ],
  },

  externals: [
    nodeExternals(),{{#if includeInternalDeps}}
    {
      '@spectrum-charts/constants': '@spectrum-charts/constants',
      '@spectrum-charts/utils': '@spectrum-charts/utils',
      '@spectrum-charts/themes': '@spectrum-charts/themes',
      '@spectrum-charts/locales': '@spectrum-charts/locales',
      '@spectrum-charts/vega-spec-builder': '@spectrum-charts/vega-spec-builder',
      'react': 'react',
      'react-dom': 'react-dom',
    },{{else}}
    {
      'react': 'react',
      'react-dom': 'react-dom',
    },{{/if}}
  ],

  optimization: {
    minimize: process.env.NODE_ENV === 'development' ? false : true,
  },

  plugins: [new webpack.BannerPlugin(banner)],

  resolve: {
    extensions: ['.tsx', '.ts', '.js', '.jsx', '.json'],
  },

  devtool: 'source-map',
};
