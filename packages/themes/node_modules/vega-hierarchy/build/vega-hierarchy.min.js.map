{"version":3,"file":"vega-hierarchy.min.js","sources":["../src/lookup.js","../../../node_modules/d3-hierarchy/src/cluster.js","../../../node_modules/d3-hierarchy/src/hierarchy/count.js","../../../node_modules/d3-hierarchy/src/hierarchy/index.js","../../../node_modules/d3-hierarchy/src/accessors.js","../../../node_modules/d3-hierarchy/src/constant.js","../../../node_modules/d3-hierarchy/src/hierarchy/each.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../node_modules/d3-hierarchy/src/hierarchy/find.js","../../../node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../node_modules/d3-hierarchy/src/hierarchy/path.js","../../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../node_modules/d3-hierarchy/src/hierarchy/links.js","../../../node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../../node_modules/d3-hierarchy/src/lcg.js","../../../node_modules/d3-hierarchy/src/pack/enclose.js","../../../node_modules/d3-hierarchy/src/pack/siblings.js","../../../node_modules/d3-hierarchy/src/array.js","../../../node_modules/d3-hierarchy/src/pack/index.js","../../../node_modules/d3-hierarchy/src/treemap/round.js","../../../node_modules/d3-hierarchy/src/treemap/dice.js","../../../node_modules/d3-hierarchy/src/stratify.js","../../../node_modules/d3-hierarchy/src/tree.js","../../../node_modules/d3-hierarchy/src/treemap/slice.js","../../../node_modules/d3-hierarchy/src/treemap/squarify.js","../../../node_modules/d3-hierarchy/src/treemap/resquarify.js","../src/Nest.js","../src/HierarchyLayout.js","../src/Pack.js","../src/Partition.js","../src/Stratify.js","../../../node_modules/d3-hierarchy/src/partition.js","../src/Tree.js","../src/TreeLinks.js","../src/Treemap.js","../../../node_modules/d3-hierarchy/src/treemap/binary.js","../../../node_modules/d3-hierarchy/src/treemap/sliceDice.js","../../../node_modules/d3-hierarchy/src/treemap/index.js"],"sourcesContent":["// Build lookup table mapping tuple keys to tree node instances\nexport default function(tree, key, filter) {\n  const map = {};\n  tree.each(node => {\n    const t = node.data;\n    if (filter(t)) map[key(t)] = node;\n  });\n  tree.lookup = map;\n  return tree;\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {optional} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {},\n    imputed = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId,\n      path;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        currentId = id,\n        currentParentId = parentId,\n        n,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add(\"\");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n\n  stratify.path = function(x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === \"/\" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// \"/foo/bar\" ⇥ \"/foo\", \"/foo\" ⇥ \"/\", \"/\" ↦ \"\". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return \"\";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === \"/\") {\n    let k = 0;\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import lookup from './lookup';\nimport {Transform, ingest, isTuple, tupleid} from 'vega-dataflow';\nimport {array, error, inherits} from 'vega-util';\nimport {hierarchy} from 'd3-hierarchy';\n\n /**\n  * Nest tuples into a tree structure, grouped by key values.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.\n  * @param {boolean} [params.generate=false] - A boolean flag indicating if\n  *   non-leaf nodes generated by this transform should be included in the\n  *   output. The default (false) includes only the input data (leaf nodes)\n  *   in the data stream.\n  */\nexport default function Nest(params) {\n  Transform.call(this, null, params);\n}\n\nNest.Definition = {\n  'type': 'Nest',\n  'metadata': {'treesource': true, 'changes': true},\n  'params': [\n    { 'name': 'keys', 'type': 'field', 'array': true },\n    { 'name': 'generate', 'type': 'boolean' }\n  ]\n};\n\nconst children = n => n.values;\n\ninherits(Nest, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Nest transform requires an upstream data source.');\n    }\n\n    var gen = _.generate,\n        mod = _.modified(),\n        out = pulse.clone(),\n        tree = this.value;\n\n    if (!tree || mod || pulse.changed()) {\n      // collect nodes to remove\n      if (tree) {\n        tree.each(node => {\n          if (node.children && isTuple(node.data)) {\n            out.rem.push(node.data);\n          }\n        });\n      }\n\n      // generate new tree structure\n      this.value = tree = hierarchy({\n        values: array(_.keys)\n          .reduce((n, k) => { n.key(k); return n; }, nest())\n          .entries(out.source)\n      }, children);\n\n      // collect nodes to add\n      if (gen) {\n        tree.each(node => {\n          if (node.children) {\n            node = ingest(node.data);\n            out.add.push(node);\n            out.source.push(node);\n          }\n        });\n      }\n\n      // build lookup table\n      lookup(tree, tupleid, tupleid);\n    }\n\n    out.source.root = tree;\n    return out;\n  }\n});\n\nfunction nest() {\n  const keys = [],\n        nest = {\n          entries: array => entries(apply(array, 0), 0),\n          key: d => (keys.push(d), nest)\n        };\n\n  function apply(array, depth) {\n    if (depth >= keys.length) {\n      return array;\n    }\n\n    const n = array.length,\n          key = keys[depth++],\n          valuesByKey = {},\n          result = {};\n\n    let i = -1, keyValue, value, values;\n\n    while (++i < n) {\n      keyValue = key(value = array[i]) + '';\n      if (values = valuesByKey[keyValue]) {\n        values.push(value);\n      } else {\n        valuesByKey[keyValue] = [value];\n      }\n    }\n\n    for (keyValue in valuesByKey) {\n      result[keyValue] = apply(valuesByKey[keyValue], depth);\n    }\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    const array = [];\n    for (const key in map) {\n      array.push({\n        key,\n        values: entries(map[key], depth)\n      });\n    }\n    return array;\n  }\n\n  return nest;\n}\n","import {Transform, stableCompare} from 'vega-dataflow';\nimport {error, inherits, one} from 'vega-util';\n\n/**\n * Abstract class for tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function HierarchyLayout(params) {\n  Transform.call(this, null, params);\n}\n\nconst defaultSeparation = (a, b) => a.parent === b.parent ? 1 : 2;\n\ninherits(HierarchyLayout, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source || !pulse.source.root) {\n      error(this.constructor.name\n        + ' transform requires a backing tree data source.');\n    }\n\n    const layout = this.layout(_.method),\n          fields = this.fields,\n          root = pulse.source.root,\n          as = _.as || fields;\n\n    if (_.field) root.sum(_.field); else root.count();\n    if (_.sort) root.sort(stableCompare(_.sort, d => d.data));\n\n    setParams(layout, this.params, _);\n    if (layout.separation) {\n      layout.separation(_.separation !== false ? defaultSeparation : one);\n    }\n\n    try {\n      this.value = layout(root);\n    } catch (err) {\n      error(err);\n    }\n    root.each(node => setFields(node, fields, as));\n\n    return pulse.reflow(_.modified()).modifies(as).modifies('leaf');\n  }\n});\n\nfunction setParams(layout, params, _) {\n  for (let p, i=0, n=params.length; i<n; ++i) {\n    p = params[i];\n    if (p in _) layout[p](_[p]);\n  }\n}\n\nfunction setFields(node, fields, as) {\n  const t = node.data,\n        n = fields.length - 1;\n  for (let i=0; i<n; ++i) {\n    t[as[i]] = node[fields[i]];\n  }\n  t[as[n]] = node.children ? node.children.length : 0;\n}\n","import HierarchyLayout from './HierarchyLayout';\nimport {inherits} from 'vega-util';\nimport {pack} from 'd3-hierarchy';\n\nconst Output = ['x', 'y', 'r', 'depth', 'children'];\n\n/**\n * Packed circle tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Pack(params) {\n  HierarchyLayout.call(this, params);\n}\n\nPack.Definition = {\n  'type': 'Pack',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'radius', 'type': 'field', 'default': null },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Pack, HierarchyLayout, {\n  layout: pack,\n  params: ['radius', 'size', 'padding'],\n  fields: Output\n});\n","import HierarchyLayout from './HierarchyLayout';\nimport {inherits} from 'vega-util';\nimport {partition} from 'd3-hierarchy';\n\nconst Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n\n/**\n * Partition tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Partition(params) {\n  HierarchyLayout.call(this, params);\n}\n\nPartition.Definition = {\n  'type': 'Partition',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'round', 'type': 'boolean', 'default': false },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Partition, HierarchyLayout, {\n  layout: partition,\n  params: ['size', 'round', 'padding'],\n  fields: Output\n});\n","import lookup from './lookup';\nimport {Transform} from 'vega-dataflow';\nimport {error, inherits, truthy} from 'vega-util';\nimport {stratify} from 'd3-hierarchy';\n\n /**\n  * Stratify a collection of tuples into a tree structure based on\n  * id and parent id fields.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  * @param {function(object): *} params.key - Unique key field for each tuple.\n  * @param {function(object): *} params.parentKey - Field with key for parent tuple.\n  */\nexport default function Stratify(params) {\n  Transform.call(this, null, params);\n}\n\nStratify.Definition = {\n  'type': 'Stratify',\n  'metadata': {'treesource': true},\n  'params': [\n    { 'name': 'key', 'type': 'field', 'required': true },\n    { 'name': 'parentKey', 'type': 'field', 'required': true  }\n  ]\n};\n\ninherits(Stratify, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Stratify transform requires an upstream data source.');\n    }\n\n    let tree = this.value;\n\n    const mod = _.modified(),\n          out = pulse.fork(pulse.ALL).materialize(pulse.SOURCE),\n          run = !tree\n            || mod\n            || pulse.changed(pulse.ADD_REM)\n            || pulse.modified(_.key.fields)\n            || pulse.modified(_.parentKey.fields);\n\n    // prevent upstream source pollution\n    out.source = out.source.slice();\n\n    if (run) {\n      tree = out.source.length\n        ? lookup(\n            stratify().id(_.key).parentId(_.parentKey)(out.source),\n            _.key,\n            truthy\n          )\n        : lookup(stratify()([{}]), _.key, _.key);\n    }\n\n    out.source.root = this.value = tree;\n    return out;\n  }\n});\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import HierarchyLayout from './HierarchyLayout';\nimport {error, hasOwnProperty, inherits} from 'vega-util';\nimport {cluster, tree} from 'd3-hierarchy';\n\nconst Layouts = {\n  tidy: tree,\n  cluster: cluster\n};\n\nconst Output = ['x', 'y', 'depth', 'children'];\n\n/**\n * Tree layout. Depending on the method parameter, performs either\n * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function Tree(params) {\n  HierarchyLayout.call(this, params);\n}\n\nTree.Definition = {\n  'type': 'Tree',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'method', 'type': 'enum', 'default': 'tidy', 'values': ['tidy', 'cluster'] },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'nodeSize', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'separation', 'type': 'boolean', 'default': true },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Tree, HierarchyLayout, {\n  /**\n   * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.\n   */\n  layout(method) {\n    const m = method || 'tidy';\n    if (hasOwnProperty(Layouts, m)) return Layouts[m]();\n    else error('Unrecognized Tree layout method: ' + m);\n  },\n  params: ['size', 'nodeSize'],\n  fields: Output\n});\n","import {Transform, ingest, tupleid} from 'vega-dataflow';\nimport {error, inherits} from 'vega-util';\n\n /**\n  * Generate tuples representing links between tree nodes.\n  * The resulting tuples will contain 'source' and 'target' fields,\n  * which point to parent and child node tuples, respectively.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  */\nexport default function TreeLinks(params) {\n  Transform.call(this, [], params);\n}\n\nTreeLinks.Definition = {\n  'type': 'TreeLinks',\n  'metadata': {'tree': true, 'generates': true, 'changes': true},\n  'params': []\n};\n\ninherits(TreeLinks, Transform, {\n  transform(_, pulse) {\n    const links = this.value,\n          tree = pulse.source && pulse.source.root,\n          out = pulse.fork(pulse.NO_SOURCE),\n          lut = {};\n\n    if (!tree) error('TreeLinks transform requires a tree data source.');\n\n    if (pulse.changed(pulse.ADD_REM)) {\n      // remove previous links\n      out.rem = links;\n\n      // build lookup table of valid tuples\n      pulse.visit(pulse.SOURCE, t => lut[tupleid(t)] = 1);\n\n      // generate links for all edges incident on valid tuples\n      tree.each(node => {\n        const t = node.data,\n              p = node.parent && node.parent.data;\n        if (p && lut[tupleid(t)] && lut[tupleid(p)]) {\n          out.add.push(ingest({source: p, target: t}));\n        }\n      });\n      this.value = out.add;\n    }\n\n    else if (pulse.changed(pulse.MOD)) {\n      // build lookup table of modified tuples\n      pulse.visit(pulse.MOD, t => lut[tupleid(t)] = 1);\n\n      // gather links incident on modified tuples\n      links.forEach(link => {\n        if (lut[tupleid(link.source)] || lut[tupleid(link.target)]) {\n          out.mod.push(link);\n        }\n      });\n    }\n\n    return out;\n  }\n});\n","import HierarchyLayout from './HierarchyLayout';\nimport {error, hasOwnProperty, inherits} from 'vega-util';\nimport {\n  treemap,\n  treemapBinary,\n  treemapDice,\n  treemapResquarify,\n  treemapSlice,\n  treemapSliceDice,\n  treemapSquarify\n} from 'd3-hierarchy';\n\nconst Tiles = {\n  binary: treemapBinary,\n  dice: treemapDice,\n  slice: treemapSlice,\n  slicedice: treemapSliceDice,\n  squarify: treemapSquarify,\n  resquarify: treemapResquarify\n};\n\nconst Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n\n/**\n * Treemap layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\nexport default function Treemap(params) {\n  HierarchyLayout.call(this, params);\n}\n\nTreemap.Definition = {\n  'type': 'Treemap',\n  'metadata': {'tree': true, 'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'method', 'type': 'enum', 'default': 'squarify',\n      'values': ['squarify', 'resquarify', 'binary', 'dice', 'slice', 'slicedice'] },\n    { 'name': 'padding', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingInner', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingOuter', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingTop', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingRight', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingBottom', 'type': 'number', 'default': 0 },\n    { 'name': 'paddingLeft', 'type': 'number', 'default': 0 },\n    { 'name': 'ratio', 'type': 'number', 'default': 1.618033988749895 },\n    { 'name': 'round', 'type': 'boolean', 'default': false },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': Output.length, 'default': Output }\n  ]\n};\n\ninherits(Treemap, HierarchyLayout, {\n  /**\n   * Treemap layout generator. Adds 'method' and 'ratio' parameters\n   * to configure the underlying tile method.\n   */\n  layout() {\n    const x = treemap();\n\n    x.ratio = _ => {\n      const t = x.tile();\n      if (t.ratio) x.tile(t.ratio(_));\n    };\n\n    x.method = _ => {\n      if (hasOwnProperty(Tiles, _)) x.tile(Tiles[_]);\n      else error('Unrecognized Treemap layout method: ' + _);\n    };\n\n    return x;\n  },\n\n  params: [\n    'method', 'ratio', 'size', 'round',\n    'padding', 'paddingInner', 'paddingOuter',\n    'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'\n  ],\n\n  fields: Output\n});\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n"],"names":["lookup","tree","key","filter","map","each","node","t","data","defaultSeparation","a","b","parent","meanXReduce","x","c","maxYReduce","y","Math","max","count","sum","children","i","length","value","hierarchy","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","push","depth","eachBefore","computeHeight","d","isArray","copyData","height","this","optional","f","required","Error","constantZero","constant","prototype","constructor","eachAfter","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","m","extendBasis","B","p","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r","dx","dy","enclosesWeak","encloseBasis","encloseBasis1","x1","y1","r1","x2","y2","r2","x21","y21","r21","l","sqrt","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","A","C","abs","place","intersects","score","_","circle","previous","packSiblingsRandom","circles","random","aa","ca","sj","sk","pack","e","array","shuffle","packEncloseRandom","defaultRadius","radiusLeaf","radius","packChildrenRandom","padding","translateChild","roundNode","x0","round","y0","treemapDice","preroot","ambiguous","imputed","defaultId","id","defaultParentId","parentId","stratify","nodeId","nodeKey","currentId","currentParentId","nodeByKey","I","slash","slice","normalize","P","parentof","S","Set","add","has","set","get","arguments","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","s","z","nextAncestor","vim","TreeNode","treemapSlice","Object","create","phi","squarifyRatio","ratio","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","rows","i0","i1","dice","treemapSquarify","custom","squarify","treemapResquarify","resquarify","_squarify","Nest","params","Transform","Definition","type","metadata","treesource","changes","name","values","nest","keys","entries","apply","valuesByKey","result","keyValue","HierarchyLayout","inherits","transform","pulse","error","gen","generate","mod","modified","out","clone","changed","isTuple","rem","reduce","ingest","tupleid","layout","method","fields","as","field","stableCompare","setParams","separation","one","err","setFields","reflow","modifies","Output","Pack","default","lcg","min","size","Partition","Stratify","partition","positionNode","fork","ALL","materialize","SOURCE","run","ADD_REM","parentKey","truthy","Layouts","tidy","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","left","right","bottom","tx","kx","ky","siblings","w","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","meanX","maxY","leafLeft","leafRight","Tree","TreeLinks","hasOwnProperty","generates","NO_SOURCE","lut","visit","MOD","forEach","link","Tiles","binary","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","slicedice","Treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,35,39,40,41]}