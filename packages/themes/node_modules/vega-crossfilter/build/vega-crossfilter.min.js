!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vega-dataflow"),require("vega-util")):"function"==typeof define&&define.amd?define(["exports","vega-dataflow","vega-util"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).vega=e.vega||{},e.vega.transforms={}),e.vega,e.vega)}(this,(function(e,t,n){"use strict";const r=e=>new Uint8Array(e),i=e=>new Uint16Array(e),s=e=>new Uint32Array(e);function o(e,t,n){const o=(t<257?r:t<65537?i:s)(e);return n&&o.set(n),o}function l(e,t,n){const r=1<<t;return{one:r,zero:~r,range:n.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd(e,t){const n=this,i=n.bisect(n.range,e.value),s=e.index,o=i[0],l=i[1],f=s.length;let a;for(a=0;a<o;++a)t[s[a]]|=r;for(a=l;a<f;++a)t[s[a]]|=r;return n}}}function f(e,t){return null==e||null==t?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function a(e,t){return null==e||null==t?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function u(e){let t,n,r;function i(e,r){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length;if(i<s){if(0!==t(r,r))return s;do{const t=i+s>>>1;n(e[t],r)<0?i=t+1:s=t}while(i<s)}return i}return 2!==e.length?(t=f,n=(t,n)=>f(e(t),n),r=(t,n)=>e(t)-n):(t=e===f||e===a?e:d,n=e,r=e),{left:i,center:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=i(e,t,n,(arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length)-1);return s>n&&r(e[s-1],t)>-r(e[s],t)?s-1:s},right:function(e,r){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length;if(i<s){if(0!==t(r,r))return s;do{const t=i+s>>>1;n(e[t],r)<=0?i=t+1:s=t}while(i<s)}return i}}}function d(){return 0}const h=u(f),c=h.right,m=h.left;function g(){let e=s(0),t=[],n=0;return{insert:function(r,i,o){if(!i.length)return[];const l=n,f=i.length,a=s(f);let u,d,h,c=Array(f);for(h=0;h<f;++h)c[h]=r(i[h]),a[h]=h;if(c=function(e,t){return e.sort.call(t,((t,n)=>{const r=e[t],i=e[n];return r<i?-1:r>i?1:0})),function(e,t){return Array.from(t,(t=>e[t]))}(e,t)}(c,a),l)u=t,d=e,t=Array(l+f),e=s(l+f),function(e,t,n,r,i,s,o,l,f){let a,u=0,d=0;for(a=0;u<r&&d<o;++a)t[u]<i[d]?(l[a]=t[u],f[a]=n[u++]):(l[a]=i[d],f[a]=s[d++]+e);for(;u<r;++u,++a)l[a]=t[u],f[a]=n[u];for(;d<o;++d,++a)l[a]=i[d],f[a]=s[d]+e}(o,u,d,l,c,a,f,t,e);else{if(o>0)for(h=0;h<f;++h)a[h]+=o;t=c,e=a}return n=l+f,{index:a,value:c}},remove:function(r,i){const s=n;let o,l,f;for(l=0;!i[e[l]]&&l<s;++l);for(f=l;l<s;++l)i[o=e[l]]||(e[f]=o,t[f]=t[l],++f);n=s-r},bisect:function(e,r){let i;return r?i=r.length:(r=t,i=n),[m(r,e[0],0,i),c(r,e[1],0,i)]},reindex:function(t){for(let r=0,i=n;r<i;++r)e[r]=t[e[r]]},index:()=>e,size:()=>n}}function p(e){t.Transform.call(this,function(){let e=8,t=[],n=s(0),r=o(0,e),i=o(0,e);return{data:()=>t,seen:()=>n=function(e,t,n){return e.length>=t?e:((n=n||new e.constructor(t)).set(e),n)}(n,t.length),add(e){for(let n,r=0,i=t.length,s=e.length;r<s;++r)n=e[r],n._index=i++,t.push(n)},remove(e,n){const s=t.length,o=Array(s-e),l=t;let f,a,u;for(a=0;!n[a]&&a<s;++a)o[a]=t[a],l[a]=a;for(u=a;a<s;++a)f=t[a],n[a]?l[a]=-1:(l[a]=u,r[u]=r[a],i[u]=i[a],o[u]=f,f._index=u++),r[a]=0;return t=o,l},size:()=>t.length,curr:()=>r,prev:()=>i,reset:e=>i[e]=r[e],all:()=>e<257?255:e<65537?65535:4294967295,set(e,t){r[e]|=t},clear(e,t){r[e]&=~t},resize(t,n){(t>r.length||n>e)&&(e=Math.max(n,e),r=o(t,e,r),i=o(t,e))}}}(),e),this._indices=null,this._dims=null}function v(e){t.Transform.call(this,null,e)}u((function(e){return null===e?NaN:+e})).center,p.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]},n.inherits(p,t.Transform,{transform(e,t){return this._dims?e.modified("fields")||e.fields.some((e=>t.modified(e.fields)))?this.reinit(e,t):this.eval(e,t):this.init(e,t)},init(e,t){const n=e.fields,r=e.query,i=this._indices={},s=this._dims=[],o=r.length;let f,a,u=0;for(;u<o;++u)f=n[u].fname,a=i[f]||(i[f]=g()),s.push(l(a,u,r[u]));return this.eval(e,t)},reinit(e,t){const n=t.materialize().fork(),r=e.fields,i=e.query,s=this._indices,o=this._dims,f=this.value,a=f.curr(),u=f.prev(),d=f.all(),h=n.rem=n.add,c=n.mod,m=i.length,p={};let v,y,x,_,A,b,q,M,z;if(u.set(a),t.rem.length&&(A=this.remove(e,t,n)),t.add.length&&f.add(t.add),t.mod.length)for(b={},_=t.mod,q=0,M=_.length;q<M;++q)b[_[q]._index]=1;for(q=0;q<m;++q)z=r[q],(!o[q]||e.modified("fields",q)||t.modified(z.fields))&&(x=z.fname,(v=p[x])||(s[x]=y=g(),p[x]=v=y.insert(z,t.source,0)),o[q]=l(y,q,i[q]).onAdd(v,a));for(q=0,M=f.data().length;q<M;++q)A[q]||(u[q]!==a[q]?h.push(q):b[q]&&a[q]!==d&&c.push(q));return f.mask=(1<<m)-1,n},eval(e,t){const n=t.materialize().fork(),r=this._dims.length;let i=0;return t.rem.length&&(this.remove(e,t,n),i|=(1<<r)-1),e.modified("query")&&!e.modified("fields")&&(i|=this.update(e,t,n)),t.add.length&&(this.insert(e,t,n),i|=(1<<r)-1),t.mod.length&&(this.modify(t,n),i|=(1<<r)-1),this.value.mask=i,n},insert(e,t,n){const r=t.add,i=this.value,s=this._dims,o=this._indices,l=e.fields,f={},a=n.add,u=i.size()+r.length,d=s.length;let h,c,m,g=i.size();i.resize(u,d),i.add(r);const p=i.curr(),v=i.prev(),y=i.all();for(h=0;h<d;++h)c=l[h].fname,m=f[c]||(f[c]=o[c].insert(l[h],r,g)),s[h].onAdd(m,p);for(;g<u;++g)v[g]=y,p[g]!==y&&a.push(g)},modify(e,t){const n=t.mod,r=this.value,i=r.curr(),s=r.all(),o=e.mod;let l,f,a;for(l=0,f=o.length;l<f;++l)a=o[l]._index,i[a]!==s&&n.push(a)},remove(e,t,n){const r=this._indices,i=this.value,s=i.curr(),o=i.prev(),l=i.all(),f={},a=n.rem,u=t.rem;let d,h,c,m;for(d=0,h=u.length;d<h;++d)c=u[d]._index,f[c]=1,o[c]=m=s[c],s[c]=l,m!==l&&a.push(c);for(c in r)r[c].remove(h,f);return this.reindex(t,h,f),f},reindex(e,t,n){const r=this._indices,i=this.value;e.runAfter((()=>{const e=i.remove(t,n);for(const t in r)r[t].reindex(e)}))},update(e,t,n){const r=this._dims,i=e.query,s=t.stamp,o=r.length;let l,f,a=0;for(n.filters=0,f=0;f<o;++f)e.modified("query",f)&&(l=f,++a);if(1===a)a=r[l].one,this.incrementOne(r[l],i[l],n.add,n.rem);else for(f=0,a=0;f<o;++f)e.modified("query",f)&&(a|=r[f].one,this.incrementAll(r[f],i[f],s,n.add),n.rem=n.add);return a},incrementAll(e,t,n,r){const i=this.value,s=i.seen(),o=i.curr(),l=i.prev(),f=e.index(),a=e.bisect(e.range),u=e.bisect(t),d=u[0],h=u[1],c=a[0],m=a[1],g=e.one;let p,v,y;if(d<c)for(p=d,v=Math.min(c,h);p<v;++p)y=f[p],s[y]!==n&&(l[y]=o[y],s[y]=n,r.push(y)),o[y]^=g;else if(d>c)for(p=c,v=Math.min(d,m);p<v;++p)y=f[p],s[y]!==n&&(l[y]=o[y],s[y]=n,r.push(y)),o[y]^=g;if(h>m)for(p=Math.max(d,m),v=h;p<v;++p)y=f[p],s[y]!==n&&(l[y]=o[y],s[y]=n,r.push(y)),o[y]^=g;else if(h<m)for(p=Math.max(c,h),v=m;p<v;++p)y=f[p],s[y]!==n&&(l[y]=o[y],s[y]=n,r.push(y)),o[y]^=g;e.range=t.slice()},incrementOne(e,t,n,r){const i=this.value.curr(),s=e.index(),o=e.bisect(e.range),l=e.bisect(t),f=l[0],a=l[1],u=o[0],d=o[1],h=e.one;let c,m,g;if(f<u)for(c=f,m=Math.min(u,a);c<m;++c)g=s[c],i[g]^=h,n.push(g);else if(f>u)for(c=u,m=Math.min(f,d);c<m;++c)g=s[c],i[g]^=h,r.push(g);if(a>d)for(c=Math.max(f,d),m=a;c<m;++c)g=s[c],i[g]^=h,n.push(g);else if(a<d)for(c=Math.max(u,a),m=d;c<m;++c)g=s[c],i[g]^=h,r.push(g);e.range=t.slice()}}),v.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]},n.inherits(v,t.Transform,{transform(e,t){const n=~(e.ignore||0),r=e.filter,i=r.mask;if(0==(i&n))return t.StopPropagation;const s=t.fork(t.ALL),o=r.data(),l=r.curr(),f=r.prev(),a=e=>l[e]&n?null:o[e];return s.filter(s.MOD,a),i&i-1?(s.filter(s.ADD,(e=>{const t=l[e]&n;return!t&&t^f[e]&n?o[e]:null})),s.filter(s.REM,(e=>{const t=l[e]&n;return t&&!(t^t^f[e]&n)?o[e]:null}))):(s.filter(s.ADD,a),s.filter(s.REM,(e=>(l[e]&n)===i?o[e]:null))),s.filter(s.SOURCE,(e=>a(e._index)))}}),e.crossfilter=p,e.resolvefilter=v}));
//# sourceMappingURL=vega-crossfilter.min.js.map
