{"version":3,"file":"vega-event-selector.js","sources":["../src/event-selector.js"],"sourcesContent":["const VIEW    = 'view',\n      LBRACK  = '[',\n      RBRACK  = ']',\n      LBRACE  = '{',\n      RBRACE  = '}',\n      COLON   = ':',\n      COMMA   = ',',\n      NAME    = '@',\n      GT      = '>',\n      ILLEGAL = /[[\\]{}]/,\n      DEFAULT_MARKS = {\n        '*': 1,\n        arc: 1,\n        area: 1,\n        group: 1,\n        image: 1,\n        line: 1,\n        path: 1,\n        rect: 1,\n        rule: 1,\n        shape: 1,\n        symbol: 1,\n        text: 1,\n        trail: 1\n      };\n\nlet DEFAULT_SOURCE,\n    MARKS;\n\n/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\nexport default function(selector, source, marks) {\n  DEFAULT_SOURCE = source || VIEW;\n  MARKS = marks || DEFAULT_MARKS;\n  return parseMerge(selector.trim()).map(parseSelector);\n}\n\nfunction isMarkType(type) {\n  return MARKS[type];\n}\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  const n = s.length;\n  let count = 0, c;\n\n  for (; i < n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;\n    else if (popChar && popChar.includes(c)) --count;\n    else if (pushChar && pushChar.includes(c)) ++count;\n  }\n  return i;\n}\n\nfunction parseMerge(s) {\n  const output = [],\n        n = s.length;\n  let start = 0, i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '['\n    ? parseBetween(s)\n    : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  const n = s.length;\n  let i = 1, b;\n\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(1, i));\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n\n  const stream = parseSelector(s.slice(1).trim());\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  const stream = {source: DEFAULT_SOURCE},\n        source = [];\n\n  let throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0, j,\n      filter;\n\n  // extract throttle from end\n  if (s[n-1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i+1, n-1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n    i = 0;\n  }\n\n  if (!n) throw s;\n\n  // set name flag based on first char\n  if (s[0] === NAME) markname = ++i;\n\n  // extract first part of multi-part stream selector\n  j = find(s, i, COLON);\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  }\n\n  // extract remaining part of stream selector\n  i = find(s, i, LBRACK);\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  }\n\n  // extract filters\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  }\n\n  // marshall event stream specification\n  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1);\n  }\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  const a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(_ => {\n    const x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}\n"],"names":["VIEW","LBRACK","RBRACK","LBRACE","RBRACE","COLON","COMMA","NAME","GT","ILLEGAL","DEFAULT_MARKS","arc","area","group","image","line","path","rect","rule","shape","symbol","text","trail","DEFAULT_SOURCE","MARKS","selector","source","marks","parseMerge","trim","map","parseSelector","isMarkType","type","find","s","i","endChar","pushChar","popChar","n","length","count","c","includes","output","start","push","substring","parseBetween","parseStream","b","slice","stream","between","throttle","markname","j","filter","lastIndexOf","parseThrottle","e","test","marktype","consume","debounce","a","split","_","x"],"mappings":"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"}