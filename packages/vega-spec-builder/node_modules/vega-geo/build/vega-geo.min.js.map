{"version":3,"file":"vega-geo.min.js","sources":["../../../node_modules/d3-array/src/ticks.js","../../../node_modules/d3-array/src/max.js","../../../node_modules/d3-array/src/range.js","../src/util/contours.js","../src/util/quantize.js","../src/Isocontour.js","../src/util/density2D.js","../../../node_modules/d3-array/src/sum.js","../src/KDE2D.js","../src/Contour.js","../src/constants.js","../src/GeoJSON.js","../src/GeoPath.js","../src/GeoPoint.js","../src/GeoShape.js","../../../node_modules/d3-geo/src/math.js","../../../node_modules/d3-geo/src/graticule.js","../src/Graticule.js","../../../node_modules/d3-color/src/define.js","../../../node_modules/d3-color/src/color.js","../src/Heatmap.js","../src/Projection.js"],"sourcesContent":["const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {error} from 'vega-util';\n\nfunction noop() {}\n\nconst cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\n// Implementation adapted from d3/d3-contour. Thanks!\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n\n  function contours(values, tz) {\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, ring => {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(hole => {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: 'MultiPolygon',\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = [],\n        fragmentByEnd = [],\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(point => {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\nfunction area(ring) {\n  var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","import {range, tickStep} from 'd3-array';\nimport {extent} from 'vega-util';\n\nexport default function(k, nice, zero) {\n  return function(values) {\n    var ex = extent(values),\n        start = zero ? Math.min(ex[0], 0) : ex[0],\n        stop = ex[1],\n        span = stop - start,\n        step = nice ? tickStep(start, stop, k) : (span / (k + 1));\n    return range(start + step, stop, step);\n  };\n}\n","import {max} from 'd3-array';\nimport {Transform, ingest, rederive} from 'vega-dataflow';\nimport {identity, inherits, isArray, isFunction, isNumber} from 'vega-util';\nimport contours from './util/contours';\nimport quantize from './util/quantize';\n\n/**\n * Generate isocontours (level sets) based on input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   specified, the levels, nice, resolve, and zero parameters are ignored.\n * @param {number} [params.levels] - The desired number of contour levels.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified levels.\n * @param {string} [params.resolve] - The method for resolving thresholds\n *   across multiple input grids. If 'independent' (the default), threshold\n *   calculation will be performed separately for each grid. If 'shared', a\n *   single set of threshold values will be used for all input grids.\n * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n *   threshold values should include zero.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n * @param {boolean} [params.scale] - Optional numerical value by which to\n *   scale the output isocontour coordinates. This parameter can be useful\n *   to scale the contours to match a desired output resolution.\n * @param {string} [params.as='contour'] - The output field in which to store\n *   the generated isocontour data (default 'contour').\n */\nexport default function Isocontour(params) {\n  Transform.call(this, null, params);\n}\n\nIsocontour.Definition = {\n  'type': 'Isocontour',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'thresholds', 'type': 'number', 'array': true },\n    { 'name': 'levels', 'type': 'number' },\n    { 'name': 'nice', 'type': 'boolean', 'default': false },\n    { 'name': 'resolve', 'type': 'enum', 'values': ['shared', 'independent'], 'default': 'independent' },\n    { 'name': 'zero', 'type': 'boolean', 'default': true },\n    { 'name': 'smooth', 'type': 'boolean', 'default': true },\n    { 'name': 'scale', 'type': 'number', 'expr': true },\n    { 'name': 'translate', 'type': 'number', 'array': true, 'expr': true },\n    { 'name': 'as', 'type': 'string', 'null': true, 'default': 'contour' }\n  ]\n};\n\ninherits(Isocontour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        field = _.field || identity,\n        contour = contours().smooth(_.smooth !== false),\n        tz = _.thresholds || levels(source, field, _),\n        as = _.as === null ? null : _.as || 'contour',\n        values = [];\n\n    source.forEach(t => {\n      const grid = field(t);\n\n      // generate contour paths in GeoJSON format\n      const paths = contour.size([grid.width, grid.height])(\n        grid.values, isArray(tz) ? tz : tz(grid.values)\n      );\n\n      // adjust contour path coordinates as needed\n      transformPaths(paths, grid, t, _);\n\n      // ingest; copy source data properties to output\n      paths.forEach(p => {\n        values.push(rederive(t, ingest(as != null ? {[as]: p} : p)));\n      });\n    });\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n\n    return out;\n  }\n});\n\nfunction levels(values, f, _) {\n  const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n  return _.resolve !== 'shared'\n    ? q\n    : q(values.map(t => max(f(t).values)));\n}\n\nfunction transformPaths(paths, grid, datum, _) {\n  let s = _.scale || grid.scale,\n      t = _.translate || grid.translate;\n  if (isFunction(s)) s = s(datum, _);\n  if (isFunction(t)) t = t(datum, _);\n  if ((s === 1 || s == null) && !t) return;\n\n  const sx = (isNumber(s) ? s : s[0]) || 1,\n        sy = (isNumber(s) ? s : s[1]) || 1,\n        tx = t && t[0] || 0,\n        ty = t && t[1] || 0;\n\n  paths.forEach(transform(grid, sx, sy, tx, ty));\n}\n\nexport function transform(grid, sx, sy, tx, ty) {\n  const x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        flip = sx * sy < 0;\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    if (flip) coordinates.reverse(); // maintain winding order\n    coordinates.forEach(transformPoint);\n  }\n\n  function transformPoint(coordinates) {\n    coordinates[0] = (coordinates[0] - x1) * sx + tx;\n    coordinates[1] = (coordinates[1] - y1) * sy + ty;\n  }\n\n  return function(geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  };\n}\n","import {bandwidthNRD} from 'vega-statistics';\nimport {array, constant, error, isFunction, one} from 'vega-util';\nimport {sum} from 'd3-array';\n\nfunction radius(bw, data, f) {\n  const v = bw >= 0 ? bw : bandwidthNRD(data, f);\n  return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n}\n\nfunction number(_) {\n  return isFunction(_) ? _ : constant(+_);\n}\n\n// Implementation adapted from d3/d3-contour. Thanks!\nexport default function() {\n  var x = d => d[0],\n      y = d => d[1],\n      weight = one,\n      bandwidth = [-1, -1],\n      dx = 960,\n      dy = 500,\n      k = 2; // log2(cellSize)\n\n  function density(data, counts) {\n    const rx = radius(bandwidth[0], data, x) >> k, // blur x-radius\n          ry = radius(bandwidth[1], data, y) >> k, // blur y-radius\n          ox = rx ? rx + 2 : 0, // x-offset padding for blur\n          oy = ry ? ry + 2 : 0, // y-offset padding for blur\n          n = 2 * ox + (dx >> k), // grid width\n          m = 2 * oy + (dy >> k), // grid height\n          values0 = new Float32Array(n * m),\n          values1 = new Float32Array(n * m);\n\n    let values = values0;\n\n    data.forEach(d => {\n      const xi = ox + (+x(d) >> k),\n            yi = oy + (+y(d) >> k);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += +weight(d);\n      }\n    });\n\n    if (rx > 0 && ry > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n    } else if (rx > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurX(n, m, values1, values0, rx);\n      blurX(n, m, values0, values1, rx);\n      values = values1;\n    } else if (ry > 0) {\n      blurY(n, m, values0, values1, ry);\n      blurY(n, m, values1, values0, ry);\n      blurY(n, m, values0, values1, ry);\n      values = values1;\n    }\n\n    // scale density estimates\n    // density in points per square pixel or probability density\n    const s = counts ? Math.pow(2, -2 * k) : 1 / sum(values);\n    for (let i=0, sz=n*m; i<sz; ++i) values[i] *= s;\n\n    return {\n      values: values,\n      scale: 1 << k,\n      width: n,\n      height: m,\n      x1: ox,\n      y1: oy,\n      x2: ox + (dx >> k),\n      y2: oy + (dy >> k)\n    };\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = number(_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = number(_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = number(_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, density;\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) error('invalid cell size');\n    k = Math.floor(Math.log(_) / Math.LN2);\n    return density;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return bandwidth;\n    _ = array(_);\n    if (_.length === 1) _ = [+_[0], +_[0]];\n    if (_.length !== 2) error('invalid bandwidth');\n    return bandwidth = _, density;\n  };\n\n  return density;\n}\n\nfunction blurX(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n  for (let j = 0; j < m; ++j) {\n    for (let i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source[i - w + j * n];\n        }\n        target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\nfunction blurY(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n  for (let i = 0; i < n; ++i) {\n    for (let j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source[i + (j - w) * n];\n        }\n        target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import density2D from './util/density2D';\nimport {Transform, ingest} from 'vega-dataflow';\nimport {accessorName, inherits} from 'vega-util';\n\n/**\n * Perform 2D kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The [width, height] extent (in\n *   units of input pixels) over which to perform density estimation.\n * @param {function(object): number} params.x - The x-coordinate accessor.\n * @param {function(object): number} params.y - The y-coordinate accessor.\n * @param {function(object): number} [params.weight] - The weight accessor.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *   to groupby.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n *   This parameter determines the level of spatial approximation. For example,\n *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n *   A value of 1 will result in an output raster grid whose dimensions exactly\n *   matches the size parameter.\n * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n *   in pixels. The input can be a two-element array specifying separate\n *   x and y bandwidths, or a single-element array specifying both. If the\n *   bandwidth is unspecified or less than zero, the bandwidth will be\n *   automatically determined.\n * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n *   output values should be probability estimates (false, default) or\n *   smoothed counts (true).\n * @param {string} [params.as='grid'] - The output field in which to store\n *   the generated raster grid (default 'grid').\n */\nexport default function KDE2D(params) {\n  Transform.call(this, null, params);\n}\n\nKDE2D.Definition = {\n  'type': 'KDE2D',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2, 'required': true },\n    { 'name': 'x', 'type': 'field', 'required': true },\n    { 'name': 'y', 'type': 'field', 'required': true },\n    { 'name': 'weight', 'type': 'field' },\n    { 'name': 'groupby', 'type': 'field', 'array': true },\n    { 'name': 'cellSize', 'type': 'number' },\n    { 'name': 'bandwidth', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'counts', 'type': 'boolean', 'default': false },\n    { 'name': 'as', 'type': 'string', 'default': 'grid'}\n  ]\n};\n\nconst PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\n\nexport function params(obj, _) {\n  PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n  return obj;\n}\n\ninherits(KDE2D, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified())\n      return pulse.StopPropagation;\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        groups = partition(source, _.groupby),\n        names = (_.groupby || []).map(accessorName),\n        kde = params(density2D(), _),\n        as = _.as || 'grid',\n        values = [];\n\n    function set(t, vals) {\n      for (let i=0; i<names.length; ++i) t[names[i]] = vals[i];\n      return t;\n    }\n\n    // generate density raster grids\n    values = groups.map(g => ingest(\n      set({[as]: kde(g, _.counts)}, g.dims)\n    ));\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n\n    return out;\n  }\n});\n\nexport function partition(data, groupby) {\n  var groups = [],\n      get = f => f(t),\n      map, i, n, t, k, g;\n\n  // partition data points into groups\n  if (groupby == null) {\n    groups.push(data);\n  } else {\n    for (map={}, i=0, n=data.length; i<n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n      if (!g) {\n        map[k] = (g = []);\n        g.dims = k;\n        groups.push(g);\n      }\n      g.push(t);\n    }\n  }\n\n  return groups;\n}\n","import {Transform, ingest} from 'vega-dataflow';\nimport {inherits, isArray} from 'vega-util';\nimport {transform} from './Isocontour';\nimport {params} from './KDE2D';\nimport contours from './util/contours';\nimport density2D from './util/density2D';\nimport quantize from './util/quantize';\n\n/**\n * Generate contours based on kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n *  If the values parameter is provided, this must be the dimensions of the input data.\n *  If density estimation is performed, this is the output view dimensions in pixels.\n * @param {Array<number>} [params.values] - An array of numeric values representing an\n *  width x height grid of values over which to compute contours. If unspecified, this\n *  transform will instead attempt to compute contours for the kernel density estimate\n *  using values drawn from data tuples in the input pulse.\n * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   this parameter is set, the count and nice parameters will be ignored.\n * @param {number} [params.count] - The desired number of contours.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified count.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n */\nexport default function Contour(params) {\n  Transform.call(this, null, params);\n}\n\nContour.Definition = {\n  'type': 'Contour',\n  'metadata': {'generates': true},\n  'params': [\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2, 'required': true },\n    { 'name': 'values', 'type': 'number', 'array': true },\n    { 'name': 'x', 'type': 'field' },\n    { 'name': 'y', 'type': 'field' },\n    { 'name': 'weight', 'type': 'field' },\n    { 'name': 'cellSize', 'type': 'number' },\n    { 'name': 'bandwidth', 'type': 'number' },\n    { 'name': 'count', 'type': 'number' },\n    { 'name': 'nice', 'type': 'boolean', 'default': false },\n    { 'name': 'thresholds', 'type': 'number', 'array': true },\n    { 'name': 'smooth', 'type': 'boolean', 'default': true }\n  ]\n};\n\ninherits(Contour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        contour = contours().smooth(_.smooth !== false),\n        values = _.values,\n        thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n        size = _.size, grid, post;\n\n    if (!values) {\n      values = pulse.materialize(pulse.SOURCE).source;\n      grid = params(density2D(), _)(values, true);\n      post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n      size = [grid.width, grid.height];\n      values = grid.values;\n    }\n\n    thresh = isArray(thresh) ? thresh : thresh(values);\n    values = contour.size(size)(values, thresh);\n    if (post) values.forEach(post);\n\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = (values || []).map(ingest);\n\n    return out;\n  }\n});\n","export const Feature = 'Feature';\nexport const FeatureCollection = 'FeatureCollection';\nexport const MultiPoint = 'MultiPoint';\n","import {Feature, FeatureCollection, MultiPoint} from './constants';\nimport {Transform} from 'vega-dataflow';\nimport {accessorFields, identity, inherits} from 'vega-util';\n\n/**\n * Consolidate an array of [longitude, latitude] points or GeoJSON features\n * into a combined GeoJSON object. This transform is particularly useful for\n * combining geo data for a Projection's fit argument. The resulting GeoJSON\n * data is available as this transform's value. Input pulses are unchanged.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.fields] - A two-element array\n *   of field accessors for the longitude and latitude values.\n * @param {function(object): *} params.geojson - A field accessor for\n *   retrieving GeoJSON feature data.\n */\nexport default function GeoJSON(params) {\n  Transform.call(this, null, params);\n}\n\nGeoJSON.Definition = {\n  'type': 'GeoJSON',\n  'metadata': {},\n  'params': [\n    { 'name': 'fields', 'type': 'field', 'array': true, 'length': 2 },\n    { 'name': 'geojson', 'type': 'field' }\n  ]\n};\n\ninherits(GeoJSON, Transform, {\n  transform(_, pulse) {\n    var features = this._features,\n        points = this._points,\n        fields = _.fields,\n        lon = fields && fields[0],\n        lat = fields && fields[1],\n        geojson = _.geojson || (!fields && identity),\n        flag = pulse.ADD,\n        mod;\n\n    mod = _.modified()\n      || pulse.changed(pulse.REM)\n      || pulse.modified(accessorFields(geojson))\n      || (lon && (pulse.modified(accessorFields(lon))))\n      || (lat && (pulse.modified(accessorFields(lat))));\n\n    if (!this.value || mod) {\n      flag = pulse.SOURCE;\n      this._features = (features = []);\n      this._points = (points = []);\n    }\n\n    if (geojson) {\n      pulse.visit(flag, t => features.push(geojson(t)));\n    }\n\n    if (lon && lat) {\n      pulse.visit(flag, t => {\n        var x = lon(t),\n            y = lat(t);\n        if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n          points.push([x, y]);\n        }\n      });\n      features = features.concat({\n        type: Feature,\n        geometry: {\n          type: MultiPoint,\n          coordinates: points\n        }\n      });\n    }\n\n    this.value = {\n      type: FeatureCollection,\n      features: features\n    };\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {getProjectionPath} from 'vega-projection';\nimport {identity, inherits} from 'vega-util';\n\n/**\n * Map GeoJSON data to an SVG path string.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='path'] - The output field in which to store\n *   the generated path data (default 'path').\n */\nexport default function GeoPath(params) {\n  Transform.call(this, null, params);\n}\n\nGeoPath.Definition = {\n  'type': 'GeoPath',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection' },\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'pointRadius', 'type': 'number', 'expr': true },\n    { 'name': 'as', 'type': 'string', 'default': 'path' }\n  ]\n};\n\ninherits(GeoPath, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        path = this.value,\n        field = _.field || identity,\n        as = _.as || 'path',\n        flag = out.SOURCE;\n\n    if (!path || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = path = getProjectionPath(_.projection);\n      out.materialize().reflow();\n    } else {\n      flag = field === identity || pulse.modified(field.fields)\n        ? out.ADD_MOD\n        : out.ADD;\n    }\n\n    const prev = initPath(path, _.pointRadius);\n    out.visit(flag, t => t[as] = path(field(t)));\n    path.pointRadius(prev);\n\n    return out.modifies(as);\n  }\n});\n\nfunction initPath(path, pointRadius) {\n  const prev = path.pointRadius();\n  path.context(null);\n  if (pointRadius != null) {\n    path.pointRadius(pointRadius);\n  }\n  return prev;\n}\n","import {Transform} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\n\n/**\n * Geo-code a longitude/latitude point to an x/y coordinate.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {Array<function(object): *>} params.fields - A two-element array of\n *   field accessors for the longitude and latitude values.\n * @param {Array<string>} [params.as] - A two-element array of field names\n *   under which to store the result. Defaults to ['x','y'].\n */\nexport default function GeoPoint(params) {\n  Transform.call(this, null, params);\n}\n\nGeoPoint.Definition = {\n  'type': 'GeoPoint',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection', 'required': true },\n    { 'name': 'fields', 'type': 'field', 'array': true, 'required': true, 'length': 2 },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': ['x', 'y'] }\n  ]\n};\n\ninherits(GeoPoint, Transform, {\n  transform(_, pulse) {\n    var proj = _.projection,\n        lon = _.fields[0],\n        lat = _.fields[1],\n        as = _.as || ['x', 'y'],\n        x = as[0],\n        y = as[1],\n        mod;\n\n    function set(t) {\n      const xy = proj([lon(t), lat(t)]);\n      if (xy) {\n        t[x] = xy[0];\n        t[y] = xy[1];\n      } else {\n        t[x] = undefined;\n        t[y] = undefined;\n      }\n    }\n\n    if (_.modified()) {\n      // parameters updated, reflow\n      pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n    } else {\n      mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n      pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n    }\n\n    return pulse.modifies(as);\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {getProjectionPath} from 'vega-projection';\nimport {field, inherits} from 'vega-util';\n\n/**\n * Annotate items with a geopath shape generator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='shape'] - The output field in which to store\n *   the generated path data (default 'shape').\n */\nexport default function GeoShape(params) {\n  Transform.call(this, null, params);\n}\n\nGeoShape.Definition = {\n  'type': 'GeoShape',\n  'metadata': {'modifies': true, 'nomod': true},\n  'params': [\n    { 'name': 'projection', 'type': 'projection' },\n    { 'name': 'field', 'type': 'field', 'default': 'datum' },\n    { 'name': 'pointRadius', 'type': 'number', 'expr': true },\n    { 'name': 'as', 'type': 'string', 'default': 'shape' }\n  ]\n};\n\ninherits(GeoShape, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        shape = this.value,\n        as = _.as || 'shape',\n        flag = out.ADD;\n\n    if (!shape || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = shape = shapeGenerator(\n        getProjectionPath(_.projection),\n        _.field || field('datum'),\n        _.pointRadius\n      );\n      out.materialize().reflow();\n      flag = out.SOURCE;\n    }\n\n    out.visit(flag, t => t[as] = shape);\n\n    return out.modifies(as);\n  }\n});\n\nfunction shapeGenerator(path, field, pointRadius) {\n  const shape = pointRadius == null\n    ? _ => path(field(_))\n    : _ => {\n      var prev = path.pointRadius(),\n          value = path.pointRadius(pointRadius)(field(_));\n      path.pointRadius(prev);\n      return value;\n    };\n  shape.context = _ => {\n    path.context(_);\n    return shape;\n  };\n\n  return shape;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {Transform, ingest, replace} from 'vega-dataflow';\nimport {inherits, isFunction} from 'vega-util';\nimport {geoGraticule} from 'd3-geo';\n\n/**\n * GeoJSON feature generator for creating graticules.\n * @constructor\n */\nexport default function Graticule(params) {\n  Transform.call(this, [], params);\n  this.generator = geoGraticule();\n}\n\nGraticule.Definition = {\n  'type': 'Graticule',\n  'metadata': {'changes': true, 'generates': true},\n  'params': [\n    { 'name': 'extent', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'extentMajor', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'extentMinor', 'type': 'array', 'array': true, 'length': 2,\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'step', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'stepMajor', 'type': 'number', 'array': true, 'length': 2, 'default': [90, 360] },\n    { 'name': 'stepMinor', 'type': 'number', 'array': true, 'length': 2, 'default': [10, 10] },\n    { 'name': 'precision', 'type': 'number', 'default': 2.5 }\n  ]\n};\n\ninherits(Graticule, Transform, {\n  transform(_, pulse) {\n    var src = this.value,\n        gen = this.generator, t;\n\n    if (!src.length || _.modified()) {\n      for (const prop in _) {\n        if (isFunction(gen[prop])) {\n          gen[prop](_[prop]);\n        }\n      }\n    }\n\n    t = gen();\n    if (src.length) {\n      pulse.mod.push(replace(src[0], t));\n    } else {\n      pulse.add.push(ingest(t));\n    }\n    src[0] = t;\n\n    return pulse;\n  }\n});\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","import {max} from 'd3-array';\nimport {rgb} from 'd3-color';\nimport {canvas} from 'vega-canvas';\nimport {Transform} from 'vega-dataflow';\nimport {\n  accessorFields, constant, extend, identity,\n  inherits, isFunction, toSet, zero\n} from 'vega-util';\n\n/**\n * Render a heatmap image for input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {string} [params.color] - A constant color value or function for\n *   individual pixel color. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {number} [params.opacity] - A constant opacity value or function for\n *   individual pixel opacity. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {string} [params.resolve] - The method for resolving maximum values\n *   across multiple input grids. If 'independent' (the default), maximum\n *   calculation will be performed separately for each grid. If 'shared',\n *   a single global maximum will be used for all input grids.\n * @param {string} [params.as='image'] - The output field in which to store\n *   the generated bitmap canvas images (default 'image').\n */\nexport default function Heatmap(params) {\n  Transform.call(this, null, params);\n}\n\nHeatmap.Definition = {\n  'type': 'heatmap',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'color', 'type': 'string', 'expr': true},\n    { 'name': 'opacity', 'type': 'number', 'expr': true},\n    { 'name': 'resolve', 'type': 'enum', 'values': ['shared', 'independent'], 'default': 'independent' },\n    { 'name': 'as', 'type': 'string', 'default': 'image' }\n  ]\n};\n\ninherits(Heatmap, Transform, {\n  transform(_, pulse) {\n    if (!pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var source = pulse.materialize(pulse.SOURCE).source,\n        shared = _.resolve === 'shared',\n        field = _.field || identity,\n        opacity = opacity_(_.opacity, _),\n        color = color_(_.color, _),\n        as = _.as || 'image',\n        obj = {\n          $x: 0, $y: 0, $value: 0,\n          $max: shared ? max(source.map(t => max(field(t).values))) : 0\n        };\n\n    source.forEach(t => {\n      const v = field(t);\n\n      // build proxy data object\n      const o = extend({}, t, obj);\n      // set maximum value if not globally shared\n      if (!shared) o.$max = max(v.values || []);\n\n      // generate canvas image\n      // optimize color/opacity if not pixel-dependent\n      t[as] = toCanvas(v, o,\n        color.dep ? color : constant(color(o)),\n        opacity.dep ? opacity : constant(opacity(o))\n      );\n    });\n\n    return pulse.reflow(true).modifies(as);\n  }\n});\n\n// get image color function\nfunction color_(color, _) {\n  let f;\n  if (isFunction(color)) {\n    f = obj => rgb(color(obj, _));\n    f.dep = dependency(color);\n  } else {\n    // default to mid-grey\n    f = constant(rgb(color || '#888'));\n  }\n  return f;\n}\n\n// get image opacity function\nfunction opacity_(opacity, _) {\n  let f;\n  if (isFunction(opacity)) {\n    f = obj => opacity(obj, _);\n    f.dep = dependency(opacity);\n  } else if (opacity) {\n    f = constant(opacity);\n  } else {\n    // default to [0, max] opacity gradient\n    f = obj => (obj.$value / obj.$max) || 0;\n    f.dep = true;\n  }\n  return f;\n}\n\n// check if function depends on individual pixel data\nfunction dependency(f) {\n  if (!isFunction(f)) return false;\n  const set = toSet(accessorFields(f));\n  return set.$x || set.$y || set.$value || set.$max;\n}\n\n// render raster grid to canvas\nfunction toCanvas(grid, obj, color, opacity) {\n  const n = grid.width,\n        m = grid.height,\n        x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        x2 = grid.x2 || n,\n        y2 = grid.y2 || m,\n        val = grid.values,\n        value = val ? i => val[i] : zero,\n        can = canvas(x2 - x1, y2 - y1),\n        ctx = can.getContext('2d'),\n        img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n        pix = img.data;\n\n  for (let j=y1, k=0; j<y2; ++j) {\n    obj.$y = j - y1;\n    for (let i=x1, r=j*n; i<x2; ++i, k+=4) {\n      obj.$x = i - x1;\n      obj.$value = value(i + r);\n\n      const v = color(obj);\n      pix[k+0] = v.r;\n      pix[k+1] = v.g;\n      pix[k+2] = v.b;\n      pix[k+3] = ~~(255 * opacity(obj));\n    }\n  }\n\n  ctx.putImageData(img, 0, 0);\n  return can;\n}\n","import {Feature, FeatureCollection} from './constants';\nimport {Transform} from 'vega-dataflow';\nimport {projection, projectionProperties} from 'vega-projection';\nimport {array, error, inherits, isFunction} from 'vega-util';\n\n/**\n * Maintains a cartographic projection.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function Projection(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\n\ninherits(Projection, Transform, {\n  transform(_, pulse) {\n    let proj = this.value;\n\n    if (!proj || _.modified('type')) {\n      this.value = (proj = create(_.type));\n      projectionProperties.forEach(prop => {\n        if (_[prop] != null) set(proj, prop, _[prop]);\n      });\n    } else {\n      projectionProperties.forEach(prop => {\n        if (_.modified(prop)) set(proj, prop, _[prop]);\n      });\n    }\n\n    if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n    if (_.fit) fit(proj, _);\n\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  }\n});\n\nfunction fit(proj, _) {\n  const data = collectGeoJSON(_.fit);\n  _.extent ? proj.fitExtent(_.extent, data)\n    : _.size ? proj.fitSize(_.size, data) : 0;\n}\n\nfunction create(type) {\n  const constructor = projection((type || 'mercator').toLowerCase());\n  if (!constructor) error('Unrecognized projection type: ' + type);\n  return constructor();\n}\n\nfunction set(proj, key, value) {\n   if (isFunction(proj[key])) proj[key](value);\n}\n\nexport function collectGeoJSON(data) {\n  data = array(data);\n  return data.length === 1 ? data[0]\n    : {\n        type: FeatureCollection,\n        features: data.reduce((a, f) => a.concat(featurize(f)), [])\n      };\n}\n\nfunction featurize(f) {\n  return f.type === FeatureCollection\n    ? f.features\n    : array(f).filter(d => d != null).map(\n        d => d.type === Feature ? d : {type: Feature, geometry: d}\n      );\n}\n"],"names":["e10","Math","sqrt","e5","e2","tickSpec","start","stop","count","step","max","power","floor","log10","error","pow","factor","i1","i2","inc","round","tickIncrement","values","valueof","value","undefined","range","n","arguments","length","i","ceil","Array","noop","cases","contours","dx","dy","smooth","smoothLinear","tz","map","contour","polygons","holes","callback","x","y","t0","t1","t2","t3","fragmentByStart","fragmentByEnd","forEach","stitch","line","f","g","end","startIndex","index","endIndex","ring","push","concat","unshift","isorings","area","hole","polygon","contains","type","coordinates","point","v0","xt","yt","v1","size","_","_0","_1","c","ringContains","j","pi","xi","yi","pj","xj","yj","segmentContains","a","b","p","q","r","collinear","quantize","k","nice","zero","ex","extent","min","span","reverse","tickStep","Isocontour","params","Transform","call","this","transform","grid","sx","sy","tx","ty","x1","y1","flip","transformPolygon","transformRing","transformPoint","geometry","radius","bw","data","v","bandwidthNRD","number","isFunction","constant","density2D","d","weight","one","bandwidth","density","counts","rx","ry","ox","oy","m","values0","Float32Array","values1","blurX","blurY","s","sum","sz","scale","width","height","x2","y2","cellSize","log","LN2","array","source","target","w","sr","KDE2D","Definition","metadata","generates","name","default","expr","null","inherits","pulse","changed","modified","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","materialize","SOURCE","field","identity","thresholds","levels","resolve","t","as","paths","isArray","datum","translate","isNumber","transformPaths","rederive","ingest","rem","add","required","PARAMS","obj","param","Contour","groups","groupby","get","dims","partition","names","accessorName","kde","vals","set","post","thresh","Feature","FeatureCollection","GeoJSON","GeoPath","GeoPoint","GeoShape","mod","features","_features","points","_points","fields","lon","lat","geojson","flag","ADD","REM","accessorFields","visit","modifies","ALL","path","getProjectionPath","projection","reflow","ADD_MOD","prev","pointRadius","context","initPath","proj","xy","nomod","shape","shapeGenerator","epsilon","abs","graticuleX","y0","graticuleY","x0","Graticule","generator","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","lines","filter","outline","slice","extentMajor","extentMinor","stepMajor","stepMinor","geoGraticule","define","constructor","factory","prototype","extend","parent","definition","Object","create","key","Color","changes","content","src","gen","prop","replace","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","opacity","o","rgb_formatHex","hex","rgb_formatRgb","clampa","clampi","isNaN","toString","h","Hsl","hslConvert","clamph","clampt","hsl2rgb","m1","m2","Heatmap","dependency","toSet","$x","$y","$value","$max","Projection","copy","channels","assign","displayable","formatHex8","formatHsl","clamp","shared","dep","opacity_","color_","val","can","canvas","ctx","getContext","img","getImageData","pix","putImageData","toCanvas","projectionProperties","fit","reduce","featurize","collectGeoJSON","fitExtent","fitSize"],"mappings":"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","x_google_ignoreList":[0,1,2,7,15,16,18,19]}