{"version":3,"file":"vega-encode.js","sources":["../src/AxisTicks.js","../src/DataJoin.js","../src/Encode.js","../src/LegendEntries.js","../src/LinkPath.js","../src/Pie.js","../src/Scale.js","../src/SortItems.js","../src/Stack.js"],"sourcesContent":["import {Transform, ingest} from 'vega-dataflow';\nimport {tickCount, tickFormat, tickValues, validTicks} from 'vega-scale';\nimport {inherits} from 'vega-util';\n\n/**\n * Generates axis ticks for visualizing a spatial scale.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Scale} params.scale - The scale to generate ticks for.\n * @param {*} [params.count=10] - The approximate number of ticks, or\n *   desired tick interval, to use.\n * @param {Array<*>} [params.values] - The exact tick values to use.\n *   These must be legal domain values for the provided scale.\n *   If provided, the count argument is ignored.\n * @param {function(*):string} [params.formatSpecifier] - A format specifier\n *   to use in conjunction with scale.tickFormat. Legal values are\n *   any valid d3 4.0 format specifier.\n * @param {function(*):string} [params.format] - The format function to use.\n *   If provided, the formatSpecifier argument is ignored.\n */\nexport default function AxisTicks(params) {\n  Transform.call(this, null, params);\n}\n\ninherits(AxisTicks, Transform, {\n  transform(_, pulse) {\n    if (this.value && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        ticks = this.value,\n        scale = _.scale,\n        tally = _.count == null ? (_.values ? _.values.length : 10) : _.count,\n        count = tickCount(scale, tally, _.minstep),\n        format = _.format || tickFormat(locale, scale, count, _.formatSpecifier, _.formatType, !!_.values),\n        values = _.values ? validTicks(scale, _.values, count) : tickValues(scale, count);\n\n    if (ticks) out.rem = ticks;\n\n    ticks = values.map((value, i) =>\n      ingest({\n        index: i / (values.length - 1 || 1),\n        value: value,\n        label: format(value)\n      })\n    );\n\n    if (_.extra && ticks.length) {\n      // add an extra tick pegged to the initial domain value\n      // this is used to generate axes with 'binned' domains\n      ticks.push(ingest({\n        index: -1,\n        extra: {value: ticks[0].value},\n        label: ''\n      }));\n    }\n\n    out.source = ticks;\n    out.add = ticks;\n    this.value = ticks;\n\n    return out;\n  }\n});\n","import {Transform, ingest, tupleid} from 'vega-dataflow';\nimport {error, fastmap, inherits, isArray} from 'vega-util';\n\n/**\n * Joins a set of data elements against a set of visual items.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): object} [params.item] - An item generator function.\n * @param {function(object): *} [params.key] - The key field associating data and visual items.\n */\nexport default function DataJoin(params) {\n  Transform.call(this, null, params);\n}\n\nfunction defaultItemCreate() {\n  return ingest({});\n}\n\nfunction newMap(key) {\n  const map = fastmap().test(t => t.exit);\n  map.lookup = t => map.get(key(t));\n  return map;\n}\n\ninherits(DataJoin, Transform, {\n  transform(_, pulse) {\n    var df = pulse.dataflow,\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        item = _.item || defaultItemCreate,\n        key = _.key || tupleid,\n        map = this.value;\n\n    // prevent transient (e.g., hover) requests from\n    // cascading across marks derived from marks\n    if (isArray(out.encode)) {\n      out.encode = null;\n    }\n\n    if (map && (_.modified('key') || pulse.modified(key))) {\n      error('DataJoin does not support modified key function or fields.');\n    }\n\n    if (!map) {\n      pulse = pulse.addAll();\n      this.value = map = newMap(key);\n    }\n\n    pulse.visit(pulse.ADD, t => {\n      const k = key(t);\n      let x = map.get(k);\n\n      if (x) {\n        if (x.exit) {\n          map.empty--;\n          out.add.push(x);\n        } else {\n          out.mod.push(x);\n        }\n      } else {\n        x = item(t);\n        map.set(k, x);\n        out.add.push(x);\n      }\n\n      x.datum = t;\n      x.exit = false;\n    });\n\n    pulse.visit(pulse.MOD, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (x) {\n        x.datum = t;\n        out.mod.push(x);\n      }\n    });\n\n    pulse.visit(pulse.REM, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (t === x.datum && !x.exit) {\n        out.rem.push(x);\n        x.exit = true;\n        ++map.empty;\n      }\n    });\n\n    if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n    if (pulse.clean() || _.clean && map.empty > df.cleanThreshold) {\n      df.runAfter(map.clean);\n    }\n\n    return out;\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {falsy, inherits, isArray} from 'vega-util';\n\n/**\n * Invokes encoding functions for visual items.\n * @constructor\n * @param {object} params - The parameters to the encoding functions. This\n *   parameter object will be passed through to all invoked encoding functions.\n * @param {object} [params.mod=false] - Flag indicating if tuples in the input\n *   mod set that are unmodified by encoders should be included in the output.\n * @param {object} param.encoders - The encoding functions\n * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set\n * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set\n * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set\n */\nexport default function Encode(params) {\n  Transform.call(this, null, params);\n}\n\ninherits(Encode, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ADD_REM),\n        fmod = _.mod || false,\n        encoders = _.encoders,\n        encode = pulse.encode;\n\n    // if an array, the encode directive includes additional sets\n    // that must be defined in order for the primary set to be invoked\n    // e.g., only run the update set if the hover set is defined\n    if (isArray(encode)) {\n      if (out.changed() || encode.every(e => encoders[e])) {\n        encode = encode[0];\n        out.encode = null; // consume targeted encode directive\n      } else {\n        return pulse.StopPropagation;\n      }\n    }\n\n    // marshall encoder functions\n    var reenter = encode === 'enter',\n        update = encoders.update || falsy,\n        enter = encoders.enter || falsy,\n        exit = encoders.exit || falsy,\n        set = (encode && !reenter ? encoders[encode] : update) || falsy;\n\n    if (pulse.changed(pulse.ADD)) {\n      pulse.visit(pulse.ADD, t => { enter(t, _); update(t, _); });\n      out.modifies(enter.output);\n      out.modifies(update.output);\n      if (set !== falsy && set !== update) {\n        pulse.visit(pulse.ADD, t => { set(t, _); });\n        out.modifies(set.output);\n      }\n    }\n\n    if (pulse.changed(pulse.REM) && exit !== falsy) {\n      pulse.visit(pulse.REM, t => { exit(t, _); });\n      out.modifies(exit.output);\n    }\n\n    if (reenter || set !== falsy) {\n      const flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);\n      if (reenter) {\n        pulse.visit(flag, t => {\n          const mod = enter(t, _) || fmod;\n          if (set(t, _) || mod) out.mod.push(t);\n        });\n        if (out.mod.length) out.modifies(enter.output);\n      } else {\n        pulse.visit(flag, t => {\n          if (set(t, _) || fmod) out.mod.push(t);\n        });\n      }\n      if (out.mod.length) out.modifies(set.output);\n    }\n\n    return out.changed() ? out : pulse.StopPropagation;\n  }\n});\n","import {Transform, ingest} from 'vega-dataflow';\nimport {\n  GradientLegend, SymbolLegend,\n  labelFormat, labelFraction, labelValues,\n  scaleFraction, tickCount\n} from 'vega-scale';\nimport {constant, inherits, isFunction, peek} from 'vega-util';\n\n/**\n * Generates legend entries for visualizing a scale.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Scale} params.scale - The scale to generate items for.\n * @param {*} [params.count=5] - The approximate number of items, or\n *   desired tick interval, to use.\n * @param {*} [params.limit] - The maximum number of entries to\n *   include in a symbol legend.\n * @param {Array<*>} [params.values] - The exact tick values to use.\n *   These must be legal domain values for the provided scale.\n *   If provided, the count argument is ignored.\n * @param {string} [params.formatSpecifier] - A format specifier\n *   to use in conjunction with scale.tickFormat. Legal values are\n *   any valid D3 format specifier string.\n * @param {function(*):string} [params.format] - The format function to use.\n *   If provided, the formatSpecifier argument is ignored.\n */\nexport default function LegendEntries(params) {\n  Transform.call(this, [], params);\n}\n\ninherits(LegendEntries, Transform, {\n  transform(_, pulse) {\n    if (this.value != null && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        items = this.value,\n        type  = _.type || SymbolLegend,\n        scale = _.scale,\n        limit = +_.limit,\n        count = tickCount(scale, _.count == null ? 5 : _.count, _.minstep),\n        lskip = !!_.values || type === SymbolLegend,\n        format = _.format || labelFormat(locale, scale, count, type, _.formatSpecifier, _.formatType, lskip),\n        values = _.values || labelValues(scale, count),\n        domain, fraction, size, offset, ellipsis;\n\n    if (items) out.rem = items;\n\n    if (type === SymbolLegend) {\n      if (limit && values.length > limit) {\n        pulse.dataflow.warn('Symbol legend count exceeds limit, filtering items.');\n        items = values.slice(0, limit - 1);\n        ellipsis = true;\n      } else {\n        items = values;\n      }\n\n      if (isFunction(size = _.size)) {\n        // if first value maps to size zero, remove from list (vega#717)\n        if (!_.values && scale(items[0]) === 0) {\n          items = items.slice(1);\n        }\n        // compute size offset for legend entries\n        offset = items.reduce((max, value) => Math.max(max, size(value, _)), 0);\n      } else {\n        size = constant(offset = size || 8);\n      }\n\n      items = items.map((value, index) =>\n        ingest({\n          index:  index,\n          label:  format(value, index, items),\n          value:  value,\n          offset: offset,\n          size:   size(value, _)\n        })\n      );\n\n      if (ellipsis) {\n        ellipsis = values[items.length];\n        items.push(ingest({\n          index:    items.length,\n          label:    `\\u2026${values.length-items.length} entries`,\n          value:    ellipsis,\n          offset:   offset,\n          size:     size(ellipsis, _)\n        }));\n      }\n    }\n\n    else if (type === GradientLegend) {\n      domain = scale.domain(),\n      fraction = scaleFraction(scale, domain[0], peek(domain));\n\n      // if automatic label generation produces 2 or fewer values,\n      // use the domain end points instead (fixes vega/vega#1364)\n      if (values.length < 3 && !_.values && domain[0] !== peek(domain)) {\n        values = [domain[0], peek(domain)];\n      }\n\n      items = values.map((value, index) =>\n        ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  fraction(value)\n        })\n      );\n    }\n\n    else {\n      size = values.length - 1;\n      fraction = labelFraction(scale);\n\n      items = values.map((value, index) =>\n        ingest({\n          index: index,\n          label: format(value, index, values),\n          value: value,\n          perc:  index ? fraction(value) : 0,\n          perc2: index === size ? 1 : fraction(values[index+1])\n        })\n      );\n    }\n\n    out.source = items;\n    out.add = items;\n    this.value = items;\n\n    return out;\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {error, fastmap, inherits} from 'vega-util';\n\nconst sourceX = t => t.source.x;\nconst sourceY = t => t.source.y;\nconst targetX = t => t.target.x;\nconst targetY = t => t.target.y;\n\n /**\n  * Layout paths linking source and target elements.\n  * @constructor\n  * @param {object} params - The parameters for this operator.\n  */\nexport default function LinkPath(params) {\n  Transform.call(this, {}, params);\n}\n\nLinkPath.Definition = {\n  'type': 'LinkPath',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'sourceX', 'type': 'field', 'default': 'source.x' },\n    { 'name': 'sourceY', 'type': 'field', 'default': 'source.y' },\n    { 'name': 'targetX', 'type': 'field', 'default': 'target.x' },\n    { 'name': 'targetY', 'type': 'field', 'default': 'target.y' },\n    { 'name': 'orient', 'type': 'enum', 'default': 'vertical',\n      'values': ['horizontal', 'vertical', 'radial'] },\n    { 'name': 'shape', 'type': 'enum', 'default': 'line',\n      'values': ['line', 'arc', 'curve', 'diagonal', 'orthogonal'] },\n    { 'name': 'require', 'type': 'signal' },\n    { 'name': 'as', 'type': 'string', 'default': 'path' }\n  ]\n};\n\ninherits(LinkPath, Transform, {\n  transform(_, pulse) {\n    var sx = _.sourceX || sourceX,\n        sy = _.sourceY || sourceY,\n        tx = _.targetX || targetX,\n        ty = _.targetY || targetY,\n        as = _.as || 'path',\n        orient = _.orient || 'vertical',\n        shape = _.shape || 'line',\n        path = Paths.get(shape + '-' + orient) || Paths.get(shape);\n\n    if (!path) {\n      error('LinkPath unsupported type: ' + _.shape\n        + (_.orient ? '-' + _.orient : ''));\n    }\n\n    pulse.visit(pulse.SOURCE, t => {\n      t[as] = path(sx(t), sy(t), tx(t), ty(t));\n    });\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n});\n\nconst line = (sx, sy, tx, ty) =>\n  'M' + sx + ',' + sy +\n  'L' + tx + ',' + ty;\n\nconst lineR= (sa, sr, ta, tr) => line(\n  sr * Math.cos(sa), sr * Math.sin(sa),\n  tr * Math.cos(ta), tr * Math.sin(ta)\n);\n\nconst arc = (sx, sy, tx, ty) => {\n  var dx = tx - sx,\n      dy = ty - sy,\n      rr = Math.hypot(dx, dy) / 2,\n      ra = 180 * Math.atan2(dy, dx) / Math.PI;\n  return 'M' + sx + ',' + sy +\n         'A' + rr + ',' + rr +\n         ' ' + ra + ' 0 1' +\n         ' ' + tx + ',' + ty;\n};\n\nconst arcR = (sa, sr, ta, tr) => arc(\n  sr * Math.cos(sa), sr * Math.sin(sa),\n  tr * Math.cos(ta), tr * Math.sin(ta)\n);\n\nconst curve = (sx, sy, tx, ty) => {\n  const dx = tx - sx,\n        dy = ty - sy,\n        ix = 0.2 * (dx + dy),\n        iy = 0.2 * (dy - dx);\n  return 'M' + sx + ',' + sy +\n         'C' + (sx+ix) + ',' + (sy+iy) +\n         ' ' + (tx+iy) + ',' + (ty-ix) +\n         ' ' + tx + ',' + ty;\n};\n\nconst curveR = (sa, sr, ta, tr) => curve(\n  sr * Math.cos(sa), sr * Math.sin(sa),\n  tr * Math.cos(ta), tr * Math.sin(ta)\n);\n\nconst orthoX = (sx, sy, tx, ty) =>\n  'M' + sx + ',' + sy +\n  'V' + ty + 'H' + tx;\n\nconst orthoY = (sx, sy, tx, ty) =>\n  'M' + sx + ',' + sy +\n  'H' + tx + 'V' + ty;\n\nconst orthoR = (sa, sr, ta, tr) => {\n  const sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n         ' ' + (sr*tc) + ',' + (sr*ts) +\n         'L' + (tr*tc) + ',' + (tr*ts);\n};\n\nconst diagonalX = (sx, sy, tx, ty) => {\n  const m = (sx + tx) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + m  + ',' + sy +\n         ' ' + m  + ',' + ty +\n         ' ' + tx + ',' + ty;\n};\n\nconst diagonalY = (sx, sy, tx, ty) => {\n  const m = (sy + ty) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + sx + ',' + m +\n         ' ' + tx + ',' + m +\n         ' ' + tx + ',' + ty;\n};\n\nconst diagonalR = (sa, sr, ta, tr) => {\n  const sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        mr = (sr + tr) / 2;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'C' + (mr*sc) + ',' + (mr*ss) +\n         ' ' + (mr*tc) + ',' + (mr*ts) +\n         ' ' + (tr*tc) + ',' + (tr*ts);\n};\n\nconst Paths = fastmap({\n  'line': line,\n  'line-radial': lineR,\n  'arc': arc,\n  'arc-radial': arcR,\n  'curve': curve,\n  'curve-radial': curveR,\n  'orthogonal-horizontal': orthoX,\n  'orthogonal-vertical': orthoY,\n  'orthogonal-radial': orthoR,\n  'diagonal-horizontal': diagonalX,\n  'diagonal-vertical': diagonalY,\n  'diagonal-radial': diagonalR\n});\n","import {Transform} from 'vega-dataflow';\nimport {inherits, one} from 'vega-util';\nimport {range, sum} from 'd3-array';\n\n/**\n * Pie and donut chart layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size pie segments.\n * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.\n * @param {number} [params.endAngle=2π] - The end angle (in radians) of the layout.\n * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.\n */\nexport default function Pie(params) {\n  Transform.call(this, null, params);\n}\n\nPie.Definition = {\n  'type': 'Pie',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'startAngle', 'type': 'number', 'default': 0 },\n    { 'name': 'endAngle', 'type': 'number', 'default': 6.283185307179586 },\n    { 'name': 'sort', 'type': 'boolean', 'default': false },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': ['startAngle', 'endAngle'] }\n  ]\n};\n\ninherits(Pie, Transform, {\n  transform(_, pulse) {\n    var as = _.as || ['startAngle', 'endAngle'],\n        startAngle = as[0],\n        endAngle = as[1],\n        field = _.field || one,\n        start = _.startAngle || 0,\n        stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,\n        data = pulse.source,\n        values = data.map(field),\n        n = values.length,\n        a = start,\n        k = (stop - start) / sum(values),\n        index = range(n),\n        i, t, v;\n\n    if (_.sort) {\n      index.sort((a, b) => values[a] - values[b]);\n    }\n\n    for (i=0; i<n; ++i) {\n      v = values[index[i]];\n      t = data[index[i]];\n      t[startAngle] = a;\n      t[endAngle] = (a += v * k);\n    }\n\n    this.value = values;\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n});\n","import {Transform} from 'vega-dataflow';\nimport {\n  error, inherits, isArray, isFunction, isString, peek, stringValue,\n  toSet, zoomLinear, zoomLog, zoomPow, zoomSymlog\n} from 'vega-util';\n\nimport {\n  Band,\n  BinOrdinal,\n  Diverging,\n  Linear,\n  Log,\n  Ordinal,\n  Point,\n  Pow,\n  Quantile,\n  Quantize,\n  Sequential,\n  Sqrt,\n  Symlog,\n  Threshold,\n  Time,\n  UTC,\n  bandSpace,\n  interpolate as getInterpolate,\n  scale as getScale,\n  scheme as getScheme,\n  interpolateColors,\n  interpolateRange,\n  isContinuous,\n  isInterpolating,\n  isLogarithmic,\n  quantizeInterpolator,\n  scaleImplicit,\n  tickCount\n} from 'vega-scale';\n\nimport {range as sequence} from 'd3-array';\n\nimport {\n  interpolate,\n  interpolateRound\n} from 'd3-interpolate';\n\nconst DEFAULT_COUNT = 5;\n\nfunction includeZero(scale) {\n  const type = scale.type;\n  return !scale.bins && (\n    type === Linear || type === Pow || type === Sqrt\n  );\n}\n\nfunction includePad(type) {\n  return isContinuous(type) && type !== Sequential;\n}\n\nconst SKIP = toSet([\n  'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',\n  'domain', 'domainMin', 'domainMid', 'domainMax',\n  'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins',\n  'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'\n]);\n\n/**\n * Maintains a scale function mapping data values to visual channels.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\nexport default function Scale(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\n\ninherits(Scale, Transform, {\n  transform(_, pulse) {\n    var df = pulse.dataflow,\n        scale = this.value,\n        key = scaleKey(_);\n\n    if (!scale || key !== scale.type) {\n      this.value = scale = getScale(key)();\n    }\n\n    for (key in _) if (!SKIP[key]) {\n      // padding is a scale property for band/point but not others\n      if (key === 'padding' && includePad(scale.type)) continue;\n      // invoke scale property setter, raise warning if not found\n      isFunction(scale[key])\n        ? scale[key](_[key])\n        : df.warn('Unsupported scale property: ' + key);\n    }\n\n    configureRange(scale, _,\n      configureBins(scale, _, configureDomain(scale, _, df))\n    );\n\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  }\n});\n\nfunction scaleKey(_) {\n  var t = _.type, d = '', n;\n\n  // backwards compatibility pre Vega 5.\n  if (t === Sequential) return Sequential + '-' + Linear;\n\n  if (isContinuousColor(_)) {\n    n = _.rawDomain ? _.rawDomain.length\n      : _.domain ? _.domain.length + +(_.domainMid != null)\n      : 0;\n    d = n === 2 ? Sequential + '-'\n      : n === 3 ? Diverging + '-'\n      : '';\n  }\n\n  return ((d + t) || Linear).toLowerCase();\n}\n\nfunction isContinuousColor(_) {\n  const t = _.type;\n  return isContinuous(t) && t !== Time && t !== UTC && (\n    _.scheme || _.range && _.range.length && _.range.every(isString)\n  );\n}\n\nfunction configureDomain(scale, _, df) {\n  // check raw domain, if provided use that and exit early\n  const raw = rawDomain(scale, _.domainRaw, df);\n  if (raw > -1) return raw;\n\n  var domain = _.domain,\n      type = scale.type,\n      zero = _.zero || (_.zero === undefined && includeZero(scale)),\n      n, mid;\n\n  if (!domain) return 0;\n\n  // adjust domain based on zero, min, max settings\n  if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {\n    n = ((domain = domain.slice()).length - 1) || 1;\n    if (zero) {\n      if (domain[0] > 0) domain[0] = 0;\n      if (domain[n] < 0) domain[n] = 0;\n    }\n    if (_.domainMin != null) domain[0] = _.domainMin;\n    if (_.domainMax != null) domain[n] = _.domainMax;\n\n    if (_.domainMid != null) {\n      mid = _.domainMid;\n      const i = mid > domain[n] ? n + 1 : mid < domain[0] ? 0 : n;\n      if (i !== n) df.warn('Scale domainMid exceeds domain min or max.', mid);\n      domain.splice(i, 0, mid);\n    }\n  }\n\n  // adjust continuous domain for minimum pixel padding\n  if (includePad(type) && _.padding && domain[0] !== peek(domain)) {\n    domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);\n  }\n\n  // set the scale domain\n  scale.domain(domainCheck(type, domain, df));\n\n  // if ordinal scale domain is defined, prevent implicit\n  // domain construction as side-effect of scale lookup\n  if (type === Ordinal) {\n    scale.unknown(_.domainImplicit ? scaleImplicit : undefined);\n  }\n\n  // perform 'nice' adjustment as requested\n  if (_.nice && scale.nice) {\n    scale.nice((_.nice !== true && tickCount(scale, _.nice)) || null);\n  }\n\n  // return the cardinality of the domain\n  return domain.length;\n}\n\nfunction rawDomain(scale, raw, df) {\n  if (raw) {\n    scale.domain(domainCheck(scale.type, raw, df));\n    return raw.length;\n  } else {\n    return -1;\n  }\n}\n\nfunction padDomain(type, domain, range, pad, exponent, constant) {\n  var span = Math.abs(peek(range) - range[0]),\n      frac = span / (span - 2 * pad),\n      d = type === Log    ? zoomLog(domain, null, frac)\n        : type === Sqrt   ? zoomPow(domain, null, frac, 0.5)\n        : type === Pow    ? zoomPow(domain, null, frac, exponent || 1)\n        : type === Symlog ? zoomSymlog(domain, null, frac, constant || 1)\n        : zoomLinear(domain, null, frac);\n\n  domain = domain.slice();\n  domain[0] = d[0];\n  domain[domain.length-1] = d[1];\n  return domain;\n}\n\nfunction domainCheck(type, domain, df) {\n  if (isLogarithmic(type)) {\n    // sum signs of domain values\n    // if all pos or all neg, abs(sum) === domain.length\n    var s = Math.abs(domain.reduce((s, v) => s + (v < 0 ? -1 : v > 0 ? 1 : 0), 0));\n\n    if (s !== domain.length) {\n      df.warn('Log scale domain includes zero: ' + stringValue(domain));\n    }\n  }\n  return domain;\n}\n\nfunction configureBins(scale, _, count) {\n  let bins = _.bins;\n\n  if (bins && !isArray(bins)) {\n    // generate bin boundary array\n    const domain = scale.domain(),\n          lo = domain[0],\n          hi = peek(domain),\n          step = bins.step;\n\n    let start = bins.start == null ? lo : bins.start,\n        stop = bins.stop == null ? hi : bins.stop;\n\n    if (!step) error('Scale bins parameter missing step property.');\n    if (start < lo) start = step * Math.ceil(lo / step);\n    if (stop > hi) stop = step * Math.floor(hi / step);\n    bins = sequence(start, stop + step / 2, step);\n  }\n\n  if (bins) {\n    // assign bin boundaries to scale instance\n    scale.bins = bins;\n  } else if (scale.bins) {\n    // no current bins, remove bins if previously set\n    delete scale.bins;\n  }\n\n  // special handling for bin-ordinal scales\n  if (scale.type === BinOrdinal) {\n    if (!bins) {\n      // the domain specifies the bins\n      scale.bins = scale.domain();\n    } else if (!_.domain && !_.domainRaw) {\n      // the bins specify the domain\n      scale.domain(bins);\n      count = bins.length;\n    }\n  }\n\n  // return domain cardinality\n  return count;\n}\n\nfunction configureRange(scale, _, count) {\n  var type = scale.type,\n      round = _.round || false,\n      range = _.range;\n\n  // if range step specified, calculate full range extent\n  if (_.rangeStep != null) {\n    range = configureRangeStep(type, _, count);\n  }\n\n  // else if a range scheme is defined, use that\n  else if (_.scheme) {\n    range = configureScheme(type, _, count);\n    if (isFunction(range)) {\n      if (scale.interpolator) {\n        return scale.interpolator(range);\n      } else {\n        error(`Scale type ${type} does not support interpolating color schemes.`);\n      }\n    }\n  }\n\n  // given a range array for an interpolating scale, convert to interpolator\n  if (range && isInterpolating(type)) {\n    return scale.interpolator(\n      interpolateColors(flip(range, _.reverse), _.interpolate, _.interpolateGamma)\n    );\n  }\n\n  // configure rounding / interpolation\n  if (range && _.interpolate && scale.interpolate) {\n    scale.interpolate(getInterpolate(_.interpolate, _.interpolateGamma));\n  } else if (isFunction(scale.round)) {\n    scale.round(round);\n  } else if (isFunction(scale.rangeRound)) {\n    scale.interpolate(round ? interpolateRound : interpolate);\n  }\n\n  if (range) scale.range(flip(range, _.reverse));\n}\n\nfunction configureRangeStep(type, _, count) {\n  if (type !== Band && type !== Point) {\n    error('Only band and point scales support rangeStep.');\n  }\n\n  // calculate full range based on requested step size and padding\n  var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,\n      inner = type === Point ? 1\n            : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);\n  return [0, _.rangeStep * bandSpace(count, inner, outer)];\n}\n\nfunction configureScheme(type, _, count) {\n  var extent = _.schemeExtent,\n      name, scheme;\n\n  if (isArray(_.scheme)) {\n    scheme = interpolateColors(_.scheme, _.interpolate, _.interpolateGamma);\n  } else {\n    name = _.scheme.toLowerCase();\n    scheme = getScheme(name);\n    if (!scheme) error(`Unrecognized scheme name: ${_.scheme}`);\n  }\n\n  // determine size for potential discrete range\n  count = (type === Threshold) ? count + 1\n    : (type === BinOrdinal) ? count - 1\n    : (type === Quantile || type === Quantize) ? (+_.schemeCount || DEFAULT_COUNT)\n    : count;\n\n  // adjust and/or quantize scheme as appropriate\n  return isInterpolating(type) ? adjustScheme(scheme, extent, _.reverse)\n    : isFunction(scheme) ? quantizeInterpolator(adjustScheme(scheme, extent), count)\n    : type === Ordinal ? scheme : scheme.slice(0, count);\n}\n\nfunction adjustScheme(scheme, extent, reverse) {\n  return (isFunction(scheme) && (extent || reverse))\n    ? interpolateRange(scheme, flip(extent || [0, 1], reverse))\n    : scheme;\n}\n\nfunction flip(array, reverse) {\n  return reverse ? array.slice().reverse() : array;\n}\n","import {Transform, stableCompare} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\n\n/**\n * Sorts scenegraph items in the pulse source array.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - A comparator\n *   function for sorting tuples.\n */\nexport default function SortItems(params) {\n  Transform.call(this, null, params);\n}\n\ninherits(SortItems, Transform, {\n  transform(_, pulse) {\n    const mod = _.modified('sort')\n          || pulse.changed(pulse.ADD)\n          || pulse.modified(_.sort.fields)\n          || pulse.modified('datum');\n\n    if (mod) pulse.source.sort(stableCompare(_.sort));\n\n    this.modified(mod);\n    return pulse;\n  }\n});\n","import {Transform, stableCompare} from 'vega-dataflow';\nimport {inherits, one} from 'vega-util';\n\nconst Zero = 'zero',\n      Center = 'center',\n      Normalize = 'normalize',\n      DefOutput = ['y0', 'y1'];\n\n/**\n * Stack layout for visualization elements.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to stack.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.\n * @param {string} [offset='zero'] - Stack baseline offset. One of 'zero', 'center', 'normalize'.\n */\nexport default function Stack(params) {\n  Transform.call(this, null, params);\n}\n\nStack.Definition = {\n  'type': 'Stack',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'field', 'type': 'field' },\n    { 'name': 'groupby', 'type': 'field', 'array': true },\n    { 'name': 'sort', 'type': 'compare' },\n    { 'name': 'offset', 'type': 'enum', 'default': Zero, 'values': [Zero, Center, Normalize] },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': 2, 'default': DefOutput }\n  ]\n};\n\ninherits(Stack, Transform, {\n  transform(_, pulse) {\n    var as = _.as || DefOutput,\n        y0 = as[0],\n        y1 = as[1],\n        sort = stableCompare(_.sort),\n        field = _.field || one,\n        stack = _.offset === Center ? stackCenter\n              : _.offset === Normalize ? stackNormalize\n              : stackZero,\n        groups, i, n, max;\n\n    // partition, sum, and sort the stack groups\n    groups = partition(pulse.source, _.groupby, sort, field);\n\n    // compute stack layouts per group\n    for (i=0, n=groups.length, max=groups.max; i<n; ++i) {\n      stack(groups[i], max, field, y0, y1);\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n});\n\nfunction stackCenter(group, max, field, y0, y1) {\n  var last = (max - group.sum) / 2,\n      m = group.length,\n      j = 0, t;\n\n  for (; j<m; ++j) {\n    t = group[j];\n    t[y0] = last;\n    t[y1] = (last += Math.abs(field(t)));\n  }\n}\n\nfunction stackNormalize(group, max, field, y0, y1) {\n  var scale = 1 / group.sum,\n      last = 0,\n      m = group.length,\n      j = 0, v = 0, t;\n\n  for (; j<m; ++j) {\n    t = group[j];\n    t[y0] = last;\n    t[y1] = last = scale * (v += Math.abs(field(t)));\n  }\n}\n\nfunction stackZero(group, max, field, y0, y1) {\n  var lastPos = 0,\n      lastNeg = 0,\n      m = group.length,\n      j = 0, v, t;\n\n  for (; j<m; ++j) {\n    t = group[j];\n    v = +field(t);\n    if (v < 0) {\n      t[y0] = lastNeg;\n      t[y1] = (lastNeg += v);\n    } else {\n      t[y0] = lastPos;\n      t[y1] = (lastPos += v);\n    }\n  }\n}\n\nfunction partition(data, groupby, sort, field) {\n  var groups = [],\n      get = f => f(t),\n      map, i, n, m, t, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0, n=data.length; i<n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n      if (!g) {\n        map[k] = (g = []);\n        groups.push(g);\n      }\n      g.push(t);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0, m=groups.length; k<m; ++k) {\n    g = groups[k];\n    for (i=0, s=0, n=g.length; i<n; ++i) {\n      s += Math.abs(field(g[i]));\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sort) g.sort(sort);\n  }\n  groups.max = max;\n\n  return groups;\n}\n"],"names":["AxisTicks","params","Transform","call","inherits","transform","_","pulse","value","modified","StopPropagation","locale","dataflow","out","fork","NO_SOURCE","NO_FIELDS","ticks","scale","tally","count","values","length","tickCount","minstep","format","tickFormat","formatSpecifier","formatType","validTicks","tickValues","rem","map","i","ingest","index","label","extra","push","source","add","DataJoin","defaultItemCreate","newMap","key","fastmap","test","t","exit","lookup","get","df","item","tupleid","isArray","encode","error","addAll","visit","ADD","k","x","empty","mod","set","datum","MOD","REM","changed","ADD_MOD","modifies","clean","cleanThreshold","runAfter","Encode","ADD_REM","fmod","encoders","every","e","reenter","update","falsy","enter","output","flag","REFLOW","LegendEntries","items","type","SymbolLegend","limit","lskip","labelFormat","labelValues","domain","fraction","size","offset","ellipsis","warn","slice","isFunction","reduce","max","Math","constant","GradientLegend","scaleFraction","peek","perc","labelFraction","perc2","sourceX","sourceY","y","targetX","target","targetY","LinkPath","Definition","sx","sy","tx","ty","as","orient","shape","path","Paths","SOURCE","reflow","line","lineR","sa","sr","ta","tr","cos","sin","arc","dx","dy","rr","hypot","ra","atan2","PI","arcR","curve","ix","iy","curveR","orthoX","orthoY","orthoR","sc","ss","tc","ts","sf","abs","diagonalX","m","diagonalY","diagonalR","mr","Pie","startAngle","endAngle","field","one","start","stop","data","n","a","sum","range","v","sort","b","DEFAULT_COUNT","includeZero","bins","Linear","Pow","Sqrt","includePad","isContinuous","Sequential","SKIP","toSet","Scale","scaleKey","getScale","configureRange","configureBins","configureDomain","d","isContinuousColor","rawDomain","domainMid","Diverging","toLowerCase","Time","UTC","scheme","isString","raw","domainRaw","zero","undefined","mid","domainMin","domainMax","splice","padding","padDomain","exponent","domainCheck","Ordinal","unknown","domainImplicit","scaleImplicit","nice","pad","span","frac","Log","zoomLog","zoomPow","Symlog","zoomSymlog","zoomLinear","isLogarithmic","s","stringValue","lo","hi","step","ceil","floor","sequence","BinOrdinal","round","rangeStep","configureRangeStep","configureScheme","interpolator","isInterpolating","interpolateColors","flip","reverse","interpolate","interpolateGamma","getInterpolate","rangeRound","interpolateRound","Band","Point","outer","paddingOuter","inner","paddingInner","bandSpace","extent","schemeExtent","name","getScheme","Threshold","Quantile","Quantize","schemeCount","adjustScheme","quantizeInterpolator","interpolateRange","array","SortItems","fields","stableCompare","Zero","Center","Normalize","DefOutput","Stack","y0","y1","stack","stackCenter","stackNormalize","stackZero","groups","partition","groupby","group","last","j","lastPos","lastNeg","f","g"],"mappings":"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"}