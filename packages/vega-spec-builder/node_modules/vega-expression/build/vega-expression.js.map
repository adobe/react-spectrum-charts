{"version":3,"file":"vega-expression.js","sources":["../src/ast.js","../src/parser.js","../src/constants.js","../src/functions.js","../src/codegen.js"],"sourcesContent":["export const RawCode = 'RawCode';\nexport const Literal = 'Literal';\nexport const Property = 'Property';\nexport const Identifier = 'Identifier';\n\nexport const ArrayExpression = 'ArrayExpression';\nexport const BinaryExpression = 'BinaryExpression';\nexport const CallExpression = 'CallExpression';\nexport const ConditionalExpression = 'ConditionalExpression';\nexport const LogicalExpression = 'LogicalExpression';\nexport const MemberExpression = 'MemberExpression';\nexport const ObjectExpression = 'ObjectExpression';\nexport const UnaryExpression = 'UnaryExpression';\n\nexport default function ASTNode(type) {\n  this.type = type;\n}\n\nASTNode.prototype.visit = function(visitor) {\n  let c, i, n;\n\n  if (visitor(this)) return 1;\n\n  for (c=children(this), i=0, n=c.length; i<n; ++i) {\n    if (c[i].visit(visitor)) return 1;\n  }\n};\n\nfunction children(node) {\n  switch (node.type) {\n    case ArrayExpression:\n      return node.elements;\n    case BinaryExpression:\n    case LogicalExpression:\n      return [node.left, node.right];\n    case CallExpression:\n      return [node.callee].concat(node.arguments);\n    case ConditionalExpression:\n      return [node.test, node.consequent, node.alternate];\n    case MemberExpression:\n      return [node.object, node.property];\n    case ObjectExpression:\n      return node.properties;\n    case Property:\n      return [node.key, node.value];\n    case UnaryExpression:\n      return [node.argument];\n    case Identifier:\n    case Literal:\n    case RawCode:\n    default:\n      return [];\n  }\n}\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport ASTNode from './ast.js';\n\nvar TokenName,\n    source,\n    index,\n    length,\n    lookahead;\n\nvar TokenBooleanLiteral = 1,\n    TokenEOF = 2,\n    TokenIdentifier = 3,\n    TokenKeyword = 4,\n    TokenNullLiteral = 5,\n    TokenNumericLiteral = 6,\n    TokenPunctuator = 7,\n    TokenStringLiteral = 8,\n    TokenRegularExpression = 9;\n\nTokenName = {};\nTokenName[TokenBooleanLiteral] = 'Boolean';\nTokenName[TokenEOF] = '<end>';\nTokenName[TokenIdentifier] = 'Identifier';\nTokenName[TokenKeyword] = 'Keyword';\nTokenName[TokenNullLiteral] = 'Null';\nTokenName[TokenNumericLiteral] = 'Numeric';\nTokenName[TokenPunctuator] = 'Punctuator';\nTokenName[TokenStringLiteral] = 'String';\nTokenName[TokenRegularExpression] = 'RegularExpression';\n\nvar SyntaxArrayExpression = 'ArrayExpression',\n    SyntaxBinaryExpression = 'BinaryExpression',\n    SyntaxCallExpression = 'CallExpression',\n    SyntaxConditionalExpression = 'ConditionalExpression',\n    SyntaxIdentifier = 'Identifier',\n    SyntaxLiteral = 'Literal',\n    SyntaxLogicalExpression = 'LogicalExpression',\n    SyntaxMemberExpression = 'MemberExpression',\n    SyntaxObjectExpression = 'ObjectExpression',\n    SyntaxProperty = 'Property',\n    SyntaxUnaryExpression = 'UnaryExpression';\n\n// Error messages should be identical to V8.\nvar MessageUnexpectedToken = 'Unexpected token %0',\n    MessageUnexpectedNumber = 'Unexpected number',\n    MessageUnexpectedString = 'Unexpected string',\n    MessageUnexpectedIdentifier = 'Unexpected identifier',\n    MessageUnexpectedReserved = 'Unexpected reserved word',\n    MessageUnexpectedEOS = 'Unexpected end of input',\n    MessageInvalidRegExp = 'Invalid regular expression',\n    MessageUnterminatedRegExp = 'Invalid regular expression: missing /',\n    MessageStrictOctalLiteral = 'Octal literals are not allowed in strict mode.',\n    MessageStrictDuplicateProperty = 'Duplicate data property in object literal not allowed in strict mode';\n\nvar ILLEGAL = 'ILLEGAL',\n    DISABLED = 'Disabled.';\n\n// See also tools/generate-unicode-regex.py.\nvar RegexNonAsciiIdentifierStart = new RegExp('[\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]'),\n    // eslint-disable-next-line no-misleading-character-class\n    RegexNonAsciiIdentifierPart = new RegExp('[\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0610-\\\\u061A\\\\u0620-\\\\u0669\\\\u066E-\\\\u06D3\\\\u06D5-\\\\u06DC\\\\u06DF-\\\\u06E8\\\\u06EA-\\\\u06FC\\\\u06FF\\\\u0710-\\\\u074A\\\\u074D-\\\\u07B1\\\\u07C0-\\\\u07F5\\\\u07FA\\\\u0800-\\\\u082D\\\\u0840-\\\\u085B\\\\u08A0-\\\\u08B2\\\\u08E4-\\\\u0963\\\\u0966-\\\\u096F\\\\u0971-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09F1\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AEF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B6F\\\\u0B71\\\\u0B82\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BEF\\\\u0C00-\\\\u0C03\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58\\\\u0C59\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C81-\\\\u0C83\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D01-\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4E\\\\u0D57\\\\u0D60-\\\\u0D63\\\\u0D66-\\\\u0D6F\\\\u0D7A-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2\\\\u0DF3\\\\u0E01-\\\\u0E3A\\\\u0E40-\\\\u0E4E\\\\u0E50-\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB9\\\\u0EBB-\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F18\\\\u0F19\\\\u0F20-\\\\u0F29\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F71-\\\\u0F84\\\\u0F86-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109D\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\\\\u135F\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17D3\\\\u17D7\\\\u17DC\\\\u17DD\\\\u17E0-\\\\u17E9\\\\u180B-\\\\u180D\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19D9\\\\u1A00-\\\\u1A1B\\\\u1A20-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA7\\\\u1AB0-\\\\u1ABD\\\\u1B00-\\\\u1B4B\\\\u1B50-\\\\u1B59\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1BF3\\\\u1C00-\\\\u1C37\\\\u1C40-\\\\u1C49\\\\u1C4D-\\\\u1C7D\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CF6\\\\u1CF8\\\\u1CF9\\\\u1D00-\\\\u1DF5\\\\u1DFC-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u200C\\\\u200D\\\\u203F\\\\u2040\\\\u2054\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D7F-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2DE0-\\\\u2DFF\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u302F\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u3099\\\\u309A\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66F\\\\uA674-\\\\uA67D\\\\uA67F-\\\\uA69D\\\\uA69F-\\\\uA6F1\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA827\\\\uA840-\\\\uA873\\\\uA880-\\\\uA8C4\\\\uA8D0-\\\\uA8D9\\\\uA8E0-\\\\uA8F7\\\\uA8FB\\\\uA900-\\\\uA92D\\\\uA930-\\\\uA953\\\\uA960-\\\\uA97C\\\\uA980-\\\\uA9C0\\\\uA9CF-\\\\uA9D9\\\\uA9E0-\\\\uA9FE\\\\uAA00-\\\\uAA36\\\\uAA40-\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA60-\\\\uAA76\\\\uAA7A-\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEF\\\\uAAF2-\\\\uAAF6\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABEA\\\\uABEC\\\\uABED\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2D\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF3F\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]');\n\n// Ensure the condition is true, otherwise throw an error.\n// This is only to have a better contract semantic, i.e. another safety net\n// to catch a logic error. The condition shall be fulfilled in normal case.\n// Do NOT use this to enforce a certain condition on any user input.\n\nfunction assert(condition, message) {\n  /* istanbul ignore next */\n  if (!condition) {\n    throw new Error('ASSERT: ' + message);\n  }\n}\n\nfunction isDecimalDigit(ch) {\n  return (ch >= 0x30 && ch <= 0x39); // 0..9\n}\n\nfunction isHexDigit(ch) {\n  return '0123456789abcdefABCDEF'.includes(ch);\n}\n\nfunction isOctalDigit(ch) {\n  return '01234567'.includes(ch);\n}\n\n// 7.2 White Space\n\nfunction isWhiteSpace(ch) {\n  return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n    (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].includes(ch));\n}\n\n// 7.3 Line Terminators\n\nfunction isLineTerminator(ch) {\n  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n}\n\n// 7.6 Identifier Names and Identifiers\n\nfunction isIdentifierStart(ch) {\n  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)\n    (ch >= 0x41 && ch <= 0x5A) || // A..Z\n    (ch >= 0x61 && ch <= 0x7A) || // a..z\n    (ch === 0x5C) || // \\ (backslash)\n    ((ch >= 0x80) && RegexNonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n}\n\nfunction isIdentifierPart(ch) {\n  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)\n    (ch >= 0x41 && ch <= 0x5A) || // A..Z\n    (ch >= 0x61 && ch <= 0x7A) || // a..z\n    (ch >= 0x30 && ch <= 0x39) || // 0..9\n    (ch === 0x5C) || // \\ (backslash)\n    ((ch >= 0x80) && RegexNonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n}\n\n// 7.6.1.1 Keywords\n\nconst keywords = {\n  'if':1, 'in':1, 'do':1,\n  'var':1, 'for':1, 'new':1, 'try':1, 'let':1,\n  'this':1, 'else':1, 'case':1, 'void':1, 'with':1, 'enum':1,\n  'while':1, 'break':1, 'catch':1, 'throw':1, 'const':1, 'yield':1, 'class':1, 'super':1,\n  'return':1, 'typeof':1, 'delete':1, 'switch':1, 'export':1, 'import':1, 'public':1, 'static':1,\n  'default':1, 'finally':1, 'extends':1, 'package':1, 'private':1,\n  'function':1, 'continue':1, 'debugger':1,\n  'interface':1, 'protected':1,\n  'instanceof':1, 'implements':1\n};\n\nfunction skipComment() {\n  while (index < length) {\n    const ch = source.charCodeAt(index);\n\n    if (isWhiteSpace(ch) || isLineTerminator(ch)) {\n      ++index;\n    } else {\n      break;\n    }\n  }\n}\n\nfunction scanHexEscape(prefix) {\n  var i, len, ch, code = 0;\n\n  len = (prefix === 'u') ? 4 : 2;\n  for (i = 0; i < len; ++i) {\n    if (index < length && isHexDigit(source[index])) {\n      ch = source[index++];\n      code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n    } else {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n  }\n  return String.fromCharCode(code);\n}\n\nfunction scanUnicodeCodePointEscape() {\n  var ch, code, cu1, cu2;\n\n  ch = source[index];\n  code = 0;\n\n  // At least, one hex digit is required.\n  if (ch === '}') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  while (index < length) {\n    ch = source[index++];\n    if (!isHexDigit(ch)) {\n      break;\n    }\n    code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n  }\n\n  if (code > 0x10FFFF || ch !== '}') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  // UTF-16 Encoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n  cu1 = ((code - 0x10000) >> 10) + 0xD800;\n  cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n  return String.fromCharCode(cu1, cu2);\n}\n\nfunction getEscapedIdentifier() {\n  var ch, id;\n\n  ch = source.charCodeAt(index++);\n  id = String.fromCharCode(ch);\n\n  // '\\u' (U+005C, U+0075) denotes an escaped character.\n  if (ch === 0x5C) {\n    if (source.charCodeAt(index) !== 0x75) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n    ++index;\n    ch = scanHexEscape('u');\n    if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n    id = ch;\n  }\n\n  while (index < length) {\n    ch = source.charCodeAt(index);\n    if (!isIdentifierPart(ch)) {\n      break;\n    }\n    ++index;\n    id += String.fromCharCode(ch);\n\n    // '\\u' (U+005C, U+0075) denotes an escaped character.\n    if (ch === 0x5C) {\n      id = id.substr(0, id.length - 1);\n      if (source.charCodeAt(index) !== 0x75) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n      ++index;\n      ch = scanHexEscape('u');\n      if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n      id += ch;\n    }\n  }\n\n  return id;\n}\n\nfunction getIdentifier() {\n  var start, ch;\n\n  start = index++;\n  while (index < length) {\n    ch = source.charCodeAt(index);\n    if (ch === 0x5C) {\n      // Blackslash (U+005C) marks Unicode escape sequence.\n      index = start;\n      return getEscapedIdentifier();\n    }\n    if (isIdentifierPart(ch)) {\n      ++index;\n    } else {\n      break;\n    }\n  }\n\n  return source.slice(start, index);\n}\n\nfunction scanIdentifier() {\n  var start, id, type;\n\n  start = index;\n\n  // Backslash (U+005C) starts an escaped character.\n  id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n  // There is no keyword or literal with only one character.\n  // Thus, it must be an identifier.\n  if (id.length === 1) {\n    type = TokenIdentifier;\n  } else if (keywords.hasOwnProperty(id)) { // eslint-disable-line no-prototype-builtins\n    type = TokenKeyword;\n  } else if (id === 'null') {\n    type = TokenNullLiteral;\n  } else if (id === 'true' || id === 'false') {\n    type = TokenBooleanLiteral;\n  } else {\n    type = TokenIdentifier;\n  }\n\n  return {\n    type: type,\n    value: id,\n    start: start,\n    end: index\n  };\n}\n\n// 7.7 Punctuators\n\nfunction scanPunctuator() {\n  var start = index,\n    code = source.charCodeAt(index),\n    code2,\n    ch1 = source[index],\n    ch2,\n    ch3,\n    ch4;\n\n  switch (code) {\n\n    // Check for most common single-character punctuators.\n    case 0x2E: // . dot\n    case 0x28: // ( open bracket\n    case 0x29: // ) close bracket\n    case 0x3B: // ; semicolon\n    case 0x2C: // , comma\n    case 0x7B: // { open curly brace\n    case 0x7D: // } close curly brace\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x3A: // :\n    case 0x3F: // ?\n    case 0x7E: // ~\n      ++index;\n      return {\n        type: TokenPunctuator,\n        value: String.fromCharCode(code),\n        start: start,\n        end: index\n      };\n\n    default:\n      code2 = source.charCodeAt(index + 1);\n\n      // '=' (U+003D) marks an assignment or comparison operator.\n      if (code2 === 0x3D) {\n        switch (code) {\n          case 0x2B: // +\n          case 0x2D: // -\n          case 0x2F: // /\n          case 0x3C: // <\n          case 0x3E: // >\n          case 0x5E: // ^\n          case 0x7C: // |\n          case 0x25: // %\n          case 0x26: // &\n          case 0x2A: // *\n            index += 2;\n            return {\n              type: TokenPunctuator,\n              value: String.fromCharCode(code) + String.fromCharCode(code2),\n              start: start,\n              end: index\n            };\n\n          case 0x21: // !\n          case 0x3D: // =\n            index += 2;\n\n            // !== and ===\n            if (source.charCodeAt(index) === 0x3D) {\n              ++index;\n            }\n            return {\n              type: TokenPunctuator,\n              value: source.slice(start, index),\n              start: start,\n              end: index\n            };\n        }\n      }\n  }\n\n  // 4-character punctuator: >>>=\n\n  ch4 = source.substr(index, 4);\n\n  if (ch4 === '>>>=') {\n    index += 4;\n    return {\n      type: TokenPunctuator,\n      value: ch4,\n      start: start,\n      end: index\n    };\n  }\n\n  // 3-character punctuators: === !== >>> <<= >>=\n\n  ch3 = ch4.substr(0, 3);\n\n  if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n    index += 3;\n    return {\n      type: TokenPunctuator,\n      value: ch3,\n      start: start,\n      end: index\n    };\n  }\n\n  // Other 2-character punctuators: ++ -- << >> && ||\n  ch2 = ch3.substr(0, 2);\n\n  if ((ch1 === ch2[1] && ('+-<>&|'.includes(ch1))) || ch2 === '=>') {\n    index += 2;\n    return {\n      type: TokenPunctuator,\n      value: ch2,\n      start: start,\n      end: index\n    };\n  }\n\n  if (ch2 === '//') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  // 1-character punctuators: < > = ! + - * % & | ^ /\n\n  if ('<>=!+-*%&|^/'.includes(ch1)) {\n    ++index;\n    return {\n      type: TokenPunctuator,\n      value: ch1,\n      start: start,\n      end: index\n    };\n  }\n\n  throwError({}, MessageUnexpectedToken, ILLEGAL);\n}\n\n// 7.8.3 Numeric Literals\n\nfunction scanHexLiteral(start) {\n  let number = '';\n\n  while (index < length) {\n    if (!isHexDigit(source[index])) {\n      break;\n    }\n    number += source[index++];\n  }\n\n  if (number.length === 0) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseInt('0x' + number, 16),\n    start: start,\n    end: index\n  };\n}\n\nfunction scanOctalLiteral(start) {\n  let number = '0' + source[index++];\n  while (index < length) {\n    if (!isOctalDigit(source[index])) {\n      break;\n    }\n    number += source[index++];\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseInt(number, 8),\n    octal: true,\n    start: start,\n    end: index\n  };\n}\n\nfunction scanNumericLiteral() {\n  var number, start, ch;\n\n  ch = source[index];\n  assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n    'Numeric literal must start with a decimal digit or a decimal point');\n\n  start = index;\n  number = '';\n  if (ch !== '.') {\n    number = source[index++];\n    ch = source[index];\n\n    // Hex number starts with '0x'.\n    // Octal number starts with '0'.\n    if (number === '0') {\n      if (ch === 'x' || ch === 'X') {\n        ++index;\n        return scanHexLiteral(start);\n      }\n      if (isOctalDigit(ch)) {\n        return scanOctalLiteral(start);\n      }\n\n      // decimal number starts with '0' such as '09' is illegal.\n      if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n    }\n\n    while (isDecimalDigit(source.charCodeAt(index))) {\n      number += source[index++];\n    }\n    ch = source[index];\n  }\n\n  if (ch === '.') {\n    number += source[index++];\n    while (isDecimalDigit(source.charCodeAt(index))) {\n      number += source[index++];\n    }\n    ch = source[index];\n  }\n\n  if (ch === 'e' || ch === 'E') {\n    number += source[index++];\n\n    ch = source[index];\n    if (ch === '+' || ch === '-') {\n      number += source[index++];\n    }\n    if (isDecimalDigit(source.charCodeAt(index))) {\n      while (isDecimalDigit(source.charCodeAt(index))) {\n        number += source[index++];\n      }\n    } else {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseFloat(number),\n    start: start,\n    end: index\n  };\n}\n\n// 7.8.4 String Literals\n\nfunction scanStringLiteral() {\n  var str = '',\n    quote, start, ch, code, octal = false;\n\n  quote = source[index];\n  assert((quote === '\\'' || quote === '\"'),\n    'String literal must starts with a quote');\n\n  start = index;\n  ++index;\n\n  while (index < length) {\n    ch = source[index++];\n\n    if (ch === quote) {\n      quote = '';\n      break;\n    } else if (ch === '\\\\') {\n      ch = source[index++];\n      if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n        switch (ch) {\n          case 'u':\n          case 'x':\n            if (source[index] === '{') {\n              ++index;\n              str += scanUnicodeCodePointEscape();\n            } else {\n              str += scanHexEscape(ch);\n            }\n            break;\n          case 'n':\n            str += '\\n';\n            break;\n          case 'r':\n            str += '\\r';\n            break;\n          case 't':\n            str += '\\t';\n            break;\n          case 'b':\n            str += '\\b';\n            break;\n          case 'f':\n            str += '\\f';\n            break;\n          case 'v':\n            str += '\\x0B';\n            break;\n\n          default:\n            if (isOctalDigit(ch)) {\n              code = '01234567'.indexOf(ch);\n\n              // \\0 is not octal escape sequence\n              if (code !== 0) {\n                octal = true;\n              }\n\n              if (index < length && isOctalDigit(source[index])) {\n                octal = true;\n                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                // 3 digits are only allowed when string starts\n                // with 0, 1, 2, 3\n                if ('0123'.includes(ch) &&\n                  index < length &&\n                  isOctalDigit(source[index])) {\n                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                }\n              }\n              str += String.fromCharCode(code);\n            } else {\n              str += ch;\n            }\n            break;\n        }\n      } else {\n        if (ch === '\\r' && source[index] === '\\n') {\n          ++index;\n        }\n      }\n    } else if (isLineTerminator(ch.charCodeAt(0))) {\n      break;\n    } else {\n      str += ch;\n    }\n  }\n\n  if (quote !== '') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenStringLiteral,\n    value: str,\n    octal: octal,\n    start: start,\n    end: index\n  };\n}\n\nfunction testRegExp(pattern, flags) {\n  let tmp = pattern;\n\n  if (flags.includes('u')) {\n    // Replace each astral symbol and every Unicode code point\n    // escape sequence with a single ASCII symbol to avoid throwing on\n    // regular expressions that are only valid in combination with the\n    // `/u` flag.\n    // Note: replacing with the ASCII symbol `x` might cause false\n    // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n    // perfectly valid pattern that is equivalent to `[a-b]`, but it\n    // would be replaced by `[x-b]` which throws an error.\n    tmp = tmp\n      .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, ($0, $1) => {\n        if (parseInt($1, 16) <= 0x10FFFF) {\n          return 'x';\n        }\n        throwError({}, MessageInvalidRegExp);\n      })\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n  }\n\n  // First, detect invalid regular expressions.\n  try {\n    new RegExp(tmp);\n  } catch (e) {\n    throwError({}, MessageInvalidRegExp);\n  }\n\n  // Return a regular expression object for this pattern-flag pair, or\n  // `null` in case the current environment doesn't support the flags it\n  // uses.\n  try {\n    return new RegExp(pattern, flags);\n  } catch (exception) {\n    return null;\n  }\n}\n\nfunction scanRegExpBody() {\n  var ch, str, classMarker, terminated, body;\n\n  ch = source[index];\n  assert(ch === '/', 'Regular expression literal must start with a slash');\n  str = source[index++];\n\n  classMarker = false;\n  terminated = false;\n  while (index < length) {\n    ch = source[index++];\n    str += ch;\n    if (ch === '\\\\') {\n      ch = source[index++];\n      // ECMA-262 7.8.5\n      if (isLineTerminator(ch.charCodeAt(0))) {\n        throwError({}, MessageUnterminatedRegExp);\n      }\n      str += ch;\n    } else if (isLineTerminator(ch.charCodeAt(0))) {\n      throwError({}, MessageUnterminatedRegExp);\n    } else if (classMarker) {\n      if (ch === ']') {\n        classMarker = false;\n      }\n    } else {\n      if (ch === '/') {\n        terminated = true;\n        break;\n      } else if (ch === '[') {\n        classMarker = true;\n      }\n    }\n  }\n\n  if (!terminated) {\n    throwError({}, MessageUnterminatedRegExp);\n  }\n\n  // Exclude leading and trailing slash.\n  body = str.substr(1, str.length - 2);\n  return {\n    value: body,\n    literal: str\n  };\n}\n\nfunction scanRegExpFlags() {\n  var ch, str, flags;\n\n  str = '';\n  flags = '';\n  while (index < length) {\n    ch = source[index];\n    if (!isIdentifierPart(ch.charCodeAt(0))) {\n      break;\n    }\n\n    ++index;\n    if (ch === '\\\\' && index < length) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    } else {\n      flags += ch;\n      str += ch;\n    }\n  }\n\n  if (flags.search(/[^gimuy]/g) >= 0) {\n    throwError({}, MessageInvalidRegExp, flags);\n  }\n\n  return {\n    value: flags,\n    literal: str\n  };\n}\n\nfunction scanRegExp() {\n  var start, body, flags, value;\n\n  lookahead = null;\n  skipComment();\n  start = index;\n\n  body = scanRegExpBody();\n  flags = scanRegExpFlags();\n  value = testRegExp(body.value, flags.value);\n\n  return {\n    literal: body.literal + flags.literal,\n    value: value,\n    regex: {\n      pattern: body.value,\n      flags: flags.value\n    },\n    start: start,\n    end: index\n  };\n}\n\nfunction isIdentifierName(token) {\n  return token.type === TokenIdentifier ||\n    token.type === TokenKeyword ||\n    token.type === TokenBooleanLiteral ||\n    token.type === TokenNullLiteral;\n}\n\nfunction advance() {\n  skipComment();\n\n  if (index >= length) {\n    return {\n      type: TokenEOF,\n      start: index,\n      end: index\n    };\n  }\n\n  const ch = source.charCodeAt(index);\n\n  if (isIdentifierStart(ch)) {\n    return scanIdentifier();\n  }\n\n  // Very common: ( and ) and ;\n  if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n    return scanPunctuator();\n  }\n\n  // String literal starts with single quote (U+0027) or double quote (U+0022).\n  if (ch === 0x27 || ch === 0x22) {\n    return scanStringLiteral();\n  }\n\n\n  // Dot (.) U+002E can also start a floating-point number, hence the need\n  // to check the next character.\n  if (ch === 0x2E) {\n    if (isDecimalDigit(source.charCodeAt(index + 1))) {\n      return scanNumericLiteral();\n    }\n    return scanPunctuator();\n  }\n\n  if (isDecimalDigit(ch)) {\n    return scanNumericLiteral();\n  }\n\n  return scanPunctuator();\n}\n\nfunction lex() {\n  const token = lookahead;\n  index = token.end;\n\n  lookahead = advance();\n\n  index = token.end;\n\n  return token;\n}\n\nfunction peek() {\n  const pos = index;\n\n  lookahead = advance();\n  index = pos;\n}\n\nfunction finishArrayExpression(elements) {\n  const node = new ASTNode(SyntaxArrayExpression);\n  node.elements = elements;\n  return node;\n}\n\nfunction finishBinaryExpression(operator, left, right) {\n  const node = new ASTNode((operator === '||' || operator === '&&') ? SyntaxLogicalExpression : SyntaxBinaryExpression);\n  node.operator = operator;\n  node.left = left;\n  node.right = right;\n  return node;\n}\n\nfunction finishCallExpression(callee, args) {\n  const node = new ASTNode(SyntaxCallExpression);\n  node.callee = callee;\n  node.arguments = args;\n  return node;\n}\n\nfunction finishConditionalExpression(test, consequent, alternate) {\n  const node = new ASTNode(SyntaxConditionalExpression);\n  node.test = test;\n  node.consequent = consequent;\n  node.alternate = alternate;\n  return node;\n}\n\nfunction finishIdentifier(name) {\n  const node = new ASTNode(SyntaxIdentifier);\n  node.name = name;\n  return node;\n}\n\nfunction finishLiteral(token) {\n  const node = new ASTNode(SyntaxLiteral);\n  node.value = token.value;\n  node.raw = source.slice(token.start, token.end);\n  if (token.regex) {\n    if (node.raw === '//') {\n      node.raw = '/(?:)/';\n    }\n    node.regex = token.regex;\n  }\n  return node;\n}\n\nfunction finishMemberExpression(accessor, object, property) {\n  const node = new ASTNode(SyntaxMemberExpression);\n  node.computed = accessor === '[';\n  node.object = object;\n  node.property = property;\n  if (!node.computed) property.member = true;\n  return node;\n}\n\nfunction finishObjectExpression(properties) {\n  const node = new ASTNode(SyntaxObjectExpression);\n  node.properties = properties;\n  return node;\n}\n\nfunction finishProperty(kind, key, value) {\n  const node = new ASTNode(SyntaxProperty);\n  node.key = key;\n  node.value = value;\n  node.kind = kind;\n  return node;\n}\n\nfunction finishUnaryExpression(operator, argument) {\n  const node = new ASTNode(SyntaxUnaryExpression);\n  node.operator = operator;\n  node.argument = argument;\n  node.prefix = true;\n  return node;\n}\n\n// Throw an exception\n\nfunction throwError(token, messageFormat) {\n  var error,\n    args = Array.prototype.slice.call(arguments, 2),\n    msg = messageFormat.replace(\n      /%(\\d)/g,\n      (whole, index) => {\n        assert(index < args.length, 'Message reference must be in range');\n        return args[index];\n      }\n    );\n\n\n  error = new Error(msg);\n  error.index = index;\n  error.description = msg;\n  throw error;\n}\n\n// Throw an exception because of the token.\n\nfunction throwUnexpected(token) {\n  if (token.type === TokenEOF) {\n    throwError(token, MessageUnexpectedEOS);\n  }\n\n  if (token.type === TokenNumericLiteral) {\n    throwError(token, MessageUnexpectedNumber);\n  }\n\n  if (token.type === TokenStringLiteral) {\n    throwError(token, MessageUnexpectedString);\n  }\n\n  if (token.type === TokenIdentifier) {\n    throwError(token, MessageUnexpectedIdentifier);\n  }\n\n  if (token.type === TokenKeyword) {\n    throwError(token, MessageUnexpectedReserved);\n  }\n\n  // BooleanLiteral, NullLiteral, or Punctuator.\n  throwError(token, MessageUnexpectedToken, token.value);\n}\n\n// Expect the next token to match the specified punctuator.\n// If not, an exception will be thrown.\n\nfunction expect(value) {\n  const token = lex();\n  if (token.type !== TokenPunctuator || token.value !== value) {\n    throwUnexpected(token);\n  }\n}\n\n// Return true if the next token matches the specified punctuator.\n\nfunction match(value) {\n  return lookahead.type === TokenPunctuator && lookahead.value === value;\n}\n\n// Return true if the next token matches the specified keyword\n\nfunction matchKeyword(keyword) {\n  return lookahead.type === TokenKeyword && lookahead.value === keyword;\n}\n\n// 11.1.4 Array Initialiser\n\nfunction parseArrayInitialiser() {\n  const elements = [];\n\n  index = lookahead.start;\n  expect('[');\n\n  while (!match(']')) {\n    if (match(',')) {\n      lex();\n      elements.push(null);\n    } else {\n      elements.push(parseConditionalExpression());\n\n      if (!match(']')) {\n        expect(',');\n      }\n    }\n  }\n\n  lex();\n\n  return finishArrayExpression(elements);\n}\n\n// 11.1.5 Object Initialiser\n\nfunction parseObjectPropertyKey() {\n  index = lookahead.start;\n  const token = lex();\n\n  // Note: This function is called only from parseObjectProperty(), where\n  // EOF and Punctuator tokens are already filtered out.\n\n  if (token.type === TokenStringLiteral || token.type === TokenNumericLiteral) {\n    if (token.octal) {\n      throwError(token, MessageStrictOctalLiteral);\n    }\n    return finishLiteral(token);\n  }\n\n  return finishIdentifier(token.value);\n}\n\nfunction parseObjectProperty() {\n  var token, key, id, value;\n\n  index = lookahead.start;\n  token = lookahead;\n\n  if (token.type === TokenIdentifier) {\n    id = parseObjectPropertyKey();\n    expect(':');\n    value = parseConditionalExpression();\n    return finishProperty('init', id, value);\n  }\n  if (token.type === TokenEOF || token.type === TokenPunctuator) {\n    throwUnexpected(token);\n  } else {\n    key = parseObjectPropertyKey();\n    expect(':');\n    value = parseConditionalExpression();\n    return finishProperty('init', key, value);\n  }\n}\n\nfunction parseObjectInitialiser() {\n  var properties = [],\n    property, name, key, map = {},\n    toString = String;\n\n  index = lookahead.start;\n  expect('{');\n\n  while (!match('}')) {\n    property = parseObjectProperty();\n\n    if (property.key.type === SyntaxIdentifier) {\n      name = property.key.name;\n    } else {\n      name = toString(property.key.value);\n    }\n\n    key = '$' + name;\n    if (Object.prototype.hasOwnProperty.call(map, key)) {\n      throwError({}, MessageStrictDuplicateProperty);\n    } else {\n      map[key] = true;\n    }\n\n    properties.push(property);\n\n    if (!match('}')) {\n      expect(',');\n    }\n  }\n\n  expect('}');\n\n  return finishObjectExpression(properties);\n}\n\n// 11.1.6 The Grouping Operator\n\nfunction parseGroupExpression() {\n  expect('(');\n\n  const expr = parseExpression();\n\n  expect(')');\n\n  return expr;\n}\n\n\n// 11.1 Primary Expressions\n\nconst legalKeywords = {\n  'if': 1\n};\n\nfunction parsePrimaryExpression() {\n  var type, token, expr;\n\n  if (match('(')) {\n    return parseGroupExpression();\n  }\n\n  if (match('[')) {\n    return parseArrayInitialiser();\n  }\n\n  if (match('{')) {\n    return parseObjectInitialiser();\n  }\n\n  type = lookahead.type;\n  index = lookahead.start;\n\n\n  if (type === TokenIdentifier || legalKeywords[lookahead.value]) {\n    expr = finishIdentifier(lex().value);\n  } else if (type === TokenStringLiteral || type === TokenNumericLiteral) {\n    if (lookahead.octal) {\n      throwError(lookahead, MessageStrictOctalLiteral);\n    }\n    expr = finishLiteral(lex());\n  } else if (type === TokenKeyword) {\n    throw new Error(DISABLED);\n  } else if (type === TokenBooleanLiteral) {\n    token = lex();\n    token.value = (token.value === 'true');\n    expr = finishLiteral(token);\n  } else if (type === TokenNullLiteral) {\n    token = lex();\n    token.value = null;\n    expr = finishLiteral(token);\n  } else if (match('/') || match('/=')) {\n    expr = finishLiteral(scanRegExp());\n    peek();\n  } else {\n    throwUnexpected(lex());\n  }\n\n  return expr;\n}\n\n// 11.2 Left-Hand-Side Expressions\n\nfunction parseArguments() {\n  const args = [];\n\n  expect('(');\n\n  if (!match(')')) {\n    while (index < length) {\n      args.push(parseConditionalExpression());\n      if (match(')')) {\n        break;\n      }\n      expect(',');\n    }\n  }\n\n  expect(')');\n\n  return args;\n}\n\nfunction parseNonComputedProperty() {\n  index = lookahead.start;\n  const token = lex();\n\n  if (!isIdentifierName(token)) {\n    throwUnexpected(token);\n  }\n\n  return finishIdentifier(token.value);\n}\n\nfunction parseNonComputedMember() {\n  expect('.');\n\n  return parseNonComputedProperty();\n}\n\nfunction parseComputedMember() {\n  expect('[');\n\n  const expr = parseExpression();\n\n  expect(']');\n\n  return expr;\n}\n\nfunction parseLeftHandSideExpressionAllowCall() {\n  var expr, args, property;\n\n  expr = parsePrimaryExpression();\n\n  for (;;) {\n    if (match('.')) {\n      property = parseNonComputedMember();\n      expr = finishMemberExpression('.', expr, property);\n    } else if (match('(')) {\n      args = parseArguments();\n      expr = finishCallExpression(expr, args);\n    } else if (match('[')) {\n      property = parseComputedMember();\n      expr = finishMemberExpression('[', expr, property);\n    } else {\n      break;\n    }\n  }\n\n  return expr;\n}\n\n// 11.3 Postfix Expressions\n\nfunction parsePostfixExpression() {\n  const expr = parseLeftHandSideExpressionAllowCall();\n\n  if (lookahead.type === TokenPunctuator) {\n    if ((match('++') || match('--'))) {\n      throw new Error(DISABLED);\n    }\n  }\n\n  return expr;\n}\n\n// 11.4 Unary Operators\n\nfunction parseUnaryExpression() {\n  var token, expr;\n\n  if (lookahead.type !== TokenPunctuator && lookahead.type !== TokenKeyword) {\n    expr = parsePostfixExpression();\n  } else if (match('++') || match('--')) {\n    throw new Error(DISABLED);\n  } else if (match('+') || match('-') || match('~') || match('!')) {\n    token = lex();\n    expr = parseUnaryExpression();\n    expr = finishUnaryExpression(token.value, expr);\n  } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n    throw new Error(DISABLED);\n  } else {\n    expr = parsePostfixExpression();\n  }\n\n  return expr;\n}\n\nfunction binaryPrecedence(token) {\n  let prec = 0;\n\n  if (token.type !== TokenPunctuator && token.type !== TokenKeyword) {\n    return 0;\n  }\n\n  switch (token.value) {\n    case '||':\n      prec = 1;\n      break;\n\n    case '&&':\n      prec = 2;\n      break;\n\n    case '|':\n      prec = 3;\n      break;\n\n    case '^':\n      prec = 4;\n      break;\n\n    case '&':\n      prec = 5;\n      break;\n\n    case '==':\n    case '!=':\n    case '===':\n    case '!==':\n      prec = 6;\n      break;\n\n    case '<':\n    case '>':\n    case '<=':\n    case '>=':\n    case 'instanceof':\n    case 'in':\n      prec = 7;\n      break;\n\n    case '<<':\n    case '>>':\n    case '>>>':\n      prec = 8;\n      break;\n\n    case '+':\n    case '-':\n      prec = 9;\n      break;\n\n    case '*':\n    case '/':\n    case '%':\n      prec = 11;\n      break;\n\n    default:\n      break;\n  }\n\n  return prec;\n}\n\n// 11.5 Multiplicative Operators\n// 11.6 Additive Operators\n// 11.7 Bitwise Shift Operators\n// 11.8 Relational Operators\n// 11.9 Equality Operators\n// 11.10 Binary Bitwise Operators\n// 11.11 Binary Logical Operators\n\nfunction parseBinaryExpression() {\n  var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n  marker = lookahead;\n  left = parseUnaryExpression();\n\n  token = lookahead;\n  prec = binaryPrecedence(token);\n  if (prec === 0) {\n    return left;\n  }\n  token.prec = prec;\n  lex();\n\n  markers = [marker, lookahead];\n  right = parseUnaryExpression();\n\n  stack = [left, token, right];\n\n  while ((prec = binaryPrecedence(lookahead)) > 0) {\n\n    // Reduce: make a binary expression from the three topmost entries.\n    while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n      right = stack.pop();\n      operator = stack.pop().value;\n      left = stack.pop();\n      markers.pop();\n      expr = finishBinaryExpression(operator, left, right);\n      stack.push(expr);\n    }\n\n    // Shift.\n    token = lex();\n    token.prec = prec;\n    stack.push(token);\n    markers.push(lookahead);\n    expr = parseUnaryExpression();\n    stack.push(expr);\n  }\n\n  // Final reduce to clean-up the stack.\n  i = stack.length - 1;\n  expr = stack[i];\n  markers.pop();\n  while (i > 1) {\n    markers.pop();\n    expr = finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n    i -= 2;\n  }\n\n  return expr;\n}\n\n// 11.12 Conditional Operator\n\nfunction parseConditionalExpression() {\n  var expr, consequent, alternate;\n\n  expr = parseBinaryExpression();\n\n  if (match('?')) {\n    lex();\n    consequent = parseConditionalExpression();\n    expect(':');\n    alternate = parseConditionalExpression();\n\n    expr = finishConditionalExpression(expr, consequent, alternate);\n  }\n\n  return expr;\n}\n\n// 11.14 Comma Operator\n\nfunction parseExpression() {\n  const expr = parseConditionalExpression();\n\n  if (match(',')) {\n    throw new Error(DISABLED); // no sequence expressions\n  }\n\n  return expr;\n}\n\nexport default function(code) {\n  source = code;\n  index = 0;\n  length = source.length;\n  lookahead = null;\n\n  peek();\n\n  const expr = parseExpression();\n\n  if (lookahead.type !== TokenEOF) {\n    throw new Error('Unexpect token after expression.');\n  }\n  return expr;\n}\n","export default {\n  NaN:       'NaN',\n  E:         'Math.E',\n  LN2:       'Math.LN2',\n  LN10:      'Math.LN10',\n  LOG2E:     'Math.LOG2E',\n  LOG10E:    'Math.LOG10E',\n  PI:        'Math.PI',\n  SQRT1_2:   'Math.SQRT1_2',\n  SQRT2:     'Math.SQRT2',\n  MIN_VALUE: 'Number.MIN_VALUE',\n  MAX_VALUE: 'Number.MAX_VALUE'\n};\n","import {error} from 'vega-util';\n\nexport default function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    let obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return args => fncall(name, args, cast, type);\n  }\n\n  const DATE = 'new Date',\n        STRING = 'String',\n        REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    isNaN:    'Number.isNaN',\n    isFinite: 'Number.isFinite',\n    abs:      'Math.abs',\n    acos:     'Math.acos',\n    asin:     'Math.asin',\n    atan:     'Math.atan',\n    atan2:    'Math.atan2',\n    ceil:     'Math.ceil',\n    cos:      'Math.cos',\n    exp:      'Math.exp',\n    floor:    'Math.floor',\n    hypot:    'Math.hypot',\n    log:      'Math.log',\n    max:      'Math.max',\n    min:      'Math.min',\n    pow:      'Math.pow',\n    random:   'Math.random',\n    round:    'Math.round',\n    sin:      'Math.sin',\n    sqrt:     'Math.sqrt',\n    tan:      'Math.tan',\n\n    clamp: function(args) {\n      if (args.length < 3) error('Missing arguments to clamp function.');\n      if (args.length > 3) error('Too many arguments to clamp function.');\n      const a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    now:             'Date.now',\n    utc:             'Date.UTC',\n    datetime:        DATE,\n    date:            fn('getDate', DATE, 0),\n    day:             fn('getDay', DATE, 0),\n    year:            fn('getFullYear', DATE, 0),\n    month:           fn('getMonth', DATE, 0),\n    hours:           fn('getHours', DATE, 0),\n    minutes:         fn('getMinutes', DATE, 0),\n    seconds:         fn('getSeconds', DATE, 0),\n    milliseconds:    fn('getMilliseconds', DATE, 0),\n    time:            fn('getTime', DATE, 0),\n    timezoneoffset:  fn('getTimezoneOffset', DATE, 0),\n    utcdate:         fn('getUTCDate', DATE, 0),\n    utcday:          fn('getUTCDay', DATE, 0),\n    utcyear:         fn('getUTCFullYear', DATE, 0),\n    utcmonth:        fn('getUTCMonth', DATE, 0),\n    utchours:        fn('getUTCHours', DATE, 0),\n    utcminutes:      fn('getUTCMinutes', DATE, 0),\n    utcseconds:      fn('getUTCSeconds', DATE, 0),\n    utcmilliseconds: fn('getUTCMilliseconds', DATE, 0),\n\n    // sequence functions\n    length:      fn('length', null, -1),\n\n    // STRING functions\n    parseFloat:  'parseFloat',\n    parseInt:    'parseInt',\n    upper:       fn('toUpperCase', STRING, 0),\n    lower:       fn('toLowerCase', STRING, 0),\n    substring:   fn('substring', STRING),\n    split:       fn('split', STRING),\n    trim:        fn('trim', STRING, 0),\n    // base64 encode/decode\n    btoa:        'btoa',\n    atob:        'atob',\n\n    // REGEXP functions\n    regexp:  REGEXP,\n    test:    fn('test', REGEXP),\n\n    // Control Flow functions\n    if: function(args) {\n        if (args.length < 3) error('Missing arguments to if function.');\n        if (args.length > 3) error('Too many arguments to if function.');\n        const a = args.map(codegen);\n        return '('+a[0]+'?'+a[1]+':'+a[2]+')';\n      }\n  };\n}\n","import Constants from './constants.js';\nimport Functions from './functions.js';\nimport {error, hasOwnProperty, isFunction, isString, toSet} from 'vega-util';\n\nfunction stripQuotes(s) {\n  const n = s && s.length - 1;\n  return n && (\n      (s[0]==='\"' && s[n]==='\"') ||\n      (s[0]==='\\'' && s[n]==='\\'')\n    ) ? s.slice(1, -1) : s;\n}\n\nexport default function(opt) {\n  opt = opt || {};\n\n  const allowed = opt.allowed ? toSet(opt.allowed) : {},\n        forbidden = opt.forbidden ? toSet(opt.forbidden) : {},\n        constants = opt.constants || Constants,\n        functions = (opt.functions || Functions)(visit),\n        globalvar = opt.globalvar,\n        fieldvar = opt.fieldvar,\n        outputGlobal = isFunction(globalvar)\n          ? globalvar\n          : id => `${globalvar}[\"${id}\"]`;\n\n  let globals = {},\n      fields = {},\n      memberDepth = 0;\n\n  function visit(ast) {\n    if (isString(ast)) return ast;\n    const generator = Generators[ast.type];\n    if (generator == null) error('Unsupported type: ' + ast.type);\n    return generator(ast);\n  }\n\n  const Generators = {\n    Literal: n => n.raw,\n\n    Identifier: n => {\n      const id = n.name;\n      if (memberDepth > 0) {\n        return id;\n      } else if (hasOwnProperty(forbidden, id)) {\n        return error('Illegal identifier: ' + id);\n      } else if (hasOwnProperty(constants, id)) {\n        return constants[id];\n      } else if (hasOwnProperty(allowed, id)) {\n        return id;\n      } else {\n        globals[id] = 1;\n        return outputGlobal(id);\n      }\n    },\n\n    MemberExpression: n => {\n        const d = !n.computed,\n              o = visit(n.object);\n        if (d) memberDepth += 1;\n        const p = visit(n.property);\n        if (o === fieldvar) {\n          // strip quotes to sanitize field name (#1653)\n          fields[stripQuotes(p)] = 1;\n        }\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n\n    CallExpression: n => {\n        if (n.callee.type !== 'Identifier') {\n          error('Illegal callee type: ' + n.callee.type);\n        }\n        const callee = n.callee.name,\n              args = n.arguments,\n              fn = hasOwnProperty(functions, callee) && functions[callee];\n        if (!fn) error('Unrecognized function: ' + callee);\n        return isFunction(fn)\n          ? fn(args)\n          : fn + '(' + args.map(visit).join(',') + ')';\n      },\n\n    ArrayExpression: n =>\n        '[' + n.elements.map(visit).join(',') + ']',\n\n    BinaryExpression: n =>\n        '(' + visit(n.left) + ' ' + n.operator + ' ' + visit(n.right) + ')',\n\n    UnaryExpression: n =>\n        '(' + n.operator + visit(n.argument) + ')',\n\n    ConditionalExpression: n =>\n        '(' + visit(n.test) +\n          '?' + visit(n.consequent) +\n          ':' + visit(n.alternate) +\n          ')',\n\n    LogicalExpression: n =>\n        '(' + visit(n.left) + n.operator + visit(n.right) + ')',\n\n    ObjectExpression: n =>\n        '{' + n.properties.map(visit).join(',') + '}',\n\n    Property: n => {\n        memberDepth += 1;\n        const k = visit(n.key);\n        memberDepth -= 1;\n        return k + ':' + visit(n.value);\n      }\n  };\n\n  function codegen(ast) {\n    const result = {\n      code:    visit(ast),\n      globals: Object.keys(globals),\n      fields:  Object.keys(fields)\n    };\n    globals = {};\n    fields = {};\n    return result;\n  }\n\n  codegen.functions = functions;\n  codegen.constants = constants;\n\n  return codegen;\n}\n"],"names":["RawCode","Literal","Property","Identifier","ArrayExpression","BinaryExpression","CallExpression","ConditionalExpression","LogicalExpression","MemberExpression","ObjectExpression","UnaryExpression","ASTNode","type","prototype","visit","visitor","c","i","n","children","length","node","elements","left","right","callee","concat","arguments","test","consequent","alternate","object","property","properties","key","value","argument","TokenName","source","index","lookahead","TokenBooleanLiteral","TokenEOF","TokenIdentifier","TokenKeyword","TokenNullLiteral","TokenNumericLiteral","TokenPunctuator","TokenStringLiteral","TokenRegularExpression","SyntaxArrayExpression","SyntaxBinaryExpression","SyntaxCallExpression","SyntaxConditionalExpression","SyntaxIdentifier","SyntaxLiteral","SyntaxLogicalExpression","SyntaxMemberExpression","SyntaxObjectExpression","SyntaxProperty","SyntaxUnaryExpression","MessageUnexpectedToken","MessageUnexpectedNumber","MessageUnexpectedString","MessageUnexpectedIdentifier","MessageUnexpectedReserved","MessageUnexpectedEOS","MessageInvalidRegExp","MessageUnterminatedRegExp","MessageStrictOctalLiteral","MessageStrictDuplicateProperty","ILLEGAL","DISABLED","RegexNonAsciiIdentifierStart","RegExp","RegexNonAsciiIdentifierPart","assert","condition","message","Error","isDecimalDigit","ch","isHexDigit","includes","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","String","fromCharCode","isIdentifierPart","keywords","skipComment","charCodeAt","scanHexEscape","prefix","len","code","indexOf","toLowerCase","throwError","scanUnicodeCodePointEscape","cu1","cu2","getEscapedIdentifier","id","substr","getIdentifier","start","slice","scanIdentifier","hasOwnProperty","end","scanPunctuator","code2","ch1","ch2","ch3","ch4","scanHexLiteral","number","parseInt","scanOctalLiteral","octal","scanNumericLiteral","parseFloat","scanStringLiteral","str","quote","testRegExp","pattern","flags","tmp","replace","$0","$1","e","exception","scanRegExpBody","classMarker","terminated","body","literal","scanRegExpFlags","search","scanRegExp","regex","isIdentifierName","token","advance","lex","peek","pos","finishArrayExpression","finishBinaryExpression","operator","finishCallExpression","args","finishConditionalExpression","finishIdentifier","name","finishLiteral","raw","finishMemberExpression","accessor","computed","member","finishObjectExpression","finishProperty","kind","finishUnaryExpression","messageFormat","error","Array","call","msg","whole","description","throwUnexpected","expect","match","matchKeyword","keyword","parseArrayInitialiser","push","parseConditionalExpression","parseObjectPropertyKey","parseObjectProperty","parseObjectInitialiser","map","toString","Object","parseGroupExpression","expr","parseExpression","legalKeywords","parsePrimaryExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","parsePostfixExpression","parseUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","pop","NaN","E","LN2","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2","MIN_VALUE","MAX_VALUE","codegen","fncall","cast","obj","lastIndexOf","join","fn","DATE","STRING","REGEXP","isNaN","isFinite","abs","acos","asin","atan","atan2","ceil","cos","exp","floor","hypot","log","max","min","pow","random","round","sin","sqrt","tan","clamp","a","now","utc","datetime","date","day","year","month","hours","minutes","seconds","milliseconds","time","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","upper","lower","substring","split","trim","btoa","atob","regexp","if","stripQuotes","s","opt","allowed","toSet","forbidden","constants","Constants","functions","Functions","globalvar","fieldvar","outputGlobal","isFunction","globals","fields","memberDepth","ast","isString","generator","Generators","d","o","p","k","result","keys"],"mappings":";;AAAO,MAAMA,OAAO,GAAG;AAChB,MAAMC,OAAO,GAAG;AAChB,MAAMC,QAAQ,GAAG;AACjB,MAAMC,UAAU,GAAG;AAEnB,MAAMC,eAAe,GAAG;AACxB,MAAMC,gBAAgB,GAAG;AACzB,MAAMC,cAAc,GAAG;AACvB,MAAMC,qBAAqB,GAAG;AAC9B,MAAMC,iBAAiB,GAAG;AAC1B,MAAMC,gBAAgB,GAAG;AACzB,MAAMC,gBAAgB,GAAG;AACzB,MAAMC,eAAe,GAAG;AAEhB,SAASC,OAAOA,CAACC,IAAI,EAAE;EACpC,IAAI,CAACA,IAAI,GAAGA,IAAI;AAClB;AAEAD,OAAO,CAACE,SAAS,CAACC,KAAK,GAAG,UAASC,OAAO,EAAE;AAC1C,EAAA,IAAIC,CAAC,EAAEC,CAAC,EAAEC,CAAC;AAEX,EAAA,IAAIH,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;EAE3B,KAAKC,CAAC,GAACG,QAAQ,CAAC,IAAI,CAAC,EAAEF,CAAC,GAAC,CAAC,EAAEC,CAAC,GAACF,CAAC,CAACI,MAAM,EAAEH,CAAC,GAACC,CAAC,EAAE,EAAED,CAAC,EAAE;IAChD,IAAID,CAAC,CAACC,CAAC,CAAC,CAACH,KAAK,CAACC,OAAO,CAAC,EAAE,OAAO,CAAC;AACnC;AACF,CAAC;AAED,SAASI,QAAQA,CAACE,IAAI,EAAE;EACtB,QAAQA,IAAI,CAACT,IAAI;AACf,IAAA,KAAKT,eAAe;MAClB,OAAOkB,IAAI,CAACC,QAAQ;AACtB,IAAA,KAAKlB,gBAAgB;AACrB,IAAA,KAAKG,iBAAiB;MACpB,OAAO,CAACc,IAAI,CAACE,IAAI,EAAEF,IAAI,CAACG,KAAK,CAAC;AAChC,IAAA,KAAKnB,cAAc;MACjB,OAAO,CAACgB,IAAI,CAACI,MAAM,CAAC,CAACC,MAAM,CAACL,IAAI,CAACM,SAAS,CAAC;AAC7C,IAAA,KAAKrB,qBAAqB;AACxB,MAAA,OAAO,CAACe,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,UAAU,EAAER,IAAI,CAACS,SAAS,CAAC;AACrD,IAAA,KAAKtB,gBAAgB;MACnB,OAAO,CAACa,IAAI,CAACU,MAAM,EAAEV,IAAI,CAACW,QAAQ,CAAC;AACrC,IAAA,KAAKvB,gBAAgB;MACnB,OAAOY,IAAI,CAACY,UAAU;AACxB,IAAA,KAAKhC,QAAQ;MACX,OAAO,CAACoB,IAAI,CAACa,GAAG,EAAEb,IAAI,CAACc,KAAK,CAAC;AAC/B,IAAA,KAAKzB,eAAe;AAClB,MAAA,OAAO,CAACW,IAAI,CAACe,QAAQ,CAAC;AACxB,IAAA,KAAKlC,UAAU;AACf,IAAA,KAAKF,OAAO;AACZ,IAAA,KAAKD,OAAO;AACZ,IAAA;AACE,MAAA,OAAO,EAAE;AACb;AACF;;ACrDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIsC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLnB,MAAM,EACNoB,SAAS;AAEb,IAAIC,mBAAmB,GAAG,CAAC;AACvBC,EAAAA,QAAQ,GAAG,CAAC;AACZC,EAAAA,eAAe,GAAG,CAAC;AACnBC,EAAAA,YAAY,GAAG,CAAC;AAChBC,EAAAA,gBAAgB,GAAG,CAAC;AACpBC,EAAAA,mBAAmB,GAAG,CAAC;AACvBC,EAAAA,eAAe,GAAG,CAAC;AACnBC,EAAAA,kBAAkB,GAAG,CAAC;AACtBC,EAAAA,sBAAsB,GAAG,CAAC;AAE9BZ,SAAS,GAAG,EAAE;AACdA,SAAS,CAACI,mBAAmB,CAAC,GAAG,SAAS;AAC1CJ,SAAS,CAACK,QAAQ,CAAC,GAAG,OAAO;AAC7BL,SAAS,CAACM,eAAe,CAAC,GAAG,YAAY;AACzCN,SAAS,CAACO,YAAY,CAAC,GAAG,SAAS;AACnCP,SAAS,CAACQ,gBAAgB,CAAC,GAAG,MAAM;AACpCR,SAAS,CAACS,mBAAmB,CAAC,GAAG,SAAS;AAC1CT,SAAS,CAACU,eAAe,CAAC,GAAG,YAAY;AACzCV,SAAS,CAACW,kBAAkB,CAAC,GAAG,QAAQ;AACxCX,SAAS,CAACY,sBAAsB,CAAC,GAAG,mBAAmB;AAEvD,IAAIC,qBAAqB,GAAG,iBAAiB;AACzCC,EAAAA,sBAAsB,GAAG,kBAAkB;AAC3CC,EAAAA,oBAAoB,GAAG,gBAAgB;AACvCC,EAAAA,2BAA2B,GAAG,uBAAuB;AACrDC,EAAAA,gBAAgB,GAAG,YAAY;AAC/BC,EAAAA,aAAa,GAAG,SAAS;AACzBC,EAAAA,uBAAuB,GAAG,mBAAmB;AAC7CC,EAAAA,sBAAsB,GAAG,kBAAkB;AAC3CC,EAAAA,sBAAsB,GAAG,kBAAkB;AAC3CC,EAAAA,cAAc,GAAG,UAAU;AAC3BC,EAAAA,qBAAqB,GAAG,iBAAiB;;AAE7C;AACA,IAAIC,sBAAsB,GAAG,qBAAqB;AAC9CC,EAAAA,uBAAuB,GAAG,mBAAmB;AAC7CC,EAAAA,uBAAuB,GAAG,mBAAmB;AAC7CC,EAAAA,2BAA2B,GAAG,uBAAuB;AACrDC,EAAAA,yBAAyB,GAAG,0BAA0B;AACtDC,EAAAA,oBAAoB,GAAG,yBAAyB;AAChDC,EAAAA,oBAAoB,GAAG,4BAA4B;AACnDC,EAAAA,yBAAyB,GAAG,uCAAuC;AACnEC,EAAAA,yBAAyB,GAAG,gDAAgD;AAC5EC,EAAAA,8BAA8B,GAAG,sEAAsE;AAE3G,IAAIC,OAAO,GAAG,SAAS;AACnBC,EAAAA,QAAQ,GAAG,WAAW;;AAE1B;AACA,IAAIC,4BAA4B,GAAG,IAAIC,MAAM,CAAC,szJAAszJ,CAAC;AACj2J;AACAC,EAAAA,2BAA2B,GAAG,IAAID,MAAM,CAAC,muLAAmuL,CAAC;;AAEjxL;AACA;AACA;AACA;;AAEA,SAASE,MAAMA,CAACC,SAAS,EAAEC,OAAO,EAAE;AAClC;EACA,IAAI,CAACD,SAAS,EAAE;AACd,IAAA,MAAM,IAAIE,KAAK,CAAC,UAAU,GAAGD,OAAO,CAAC;AACvC;AACF;AAEA,SAASE,cAAcA,CAACC,EAAE,EAAE;EAC1B,OAAQA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAI,CAAE;AACpC;AAEA,SAASC,UAAUA,CAACD,EAAE,EAAE;AACtB,EAAA,OAAO,wBAAwB,CAACE,QAAQ,CAACF,EAAE,CAAC;AAC9C;AAEA,SAASG,YAAYA,CAACH,EAAE,EAAE;AACxB,EAAA,OAAO,UAAU,CAACE,QAAQ,CAACF,EAAE,CAAC;AAChC;;AAEA;;AAEA,SAASI,YAAYA,CAACJ,EAAE,EAAE;AACxB,EAAA,OAAQA,EAAE,KAAK,IAAI,IAAMA,EAAE,KAAK,IAAK,IAAKA,EAAE,KAAK,IAAK,IAAKA,EAAE,KAAK,IAAK,IAAKA,EAAE,KAAK,IAAK,IACrFA,EAAE,IAAI,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAACE,QAAQ,CAACF,EAAE,CAAE;AAC3K;;AAEA;;AAEA,SAASK,gBAAgBA,CAACL,EAAE,EAAE;AAC5B,EAAA,OAAQA,EAAE,KAAK,IAAI,IAAMA,EAAE,KAAK,IAAK,IAAKA,EAAE,KAAK,MAAO,IAAKA,EAAE,KAAK,MAAO;AAC7E;;AAEA;;AAEA,SAASM,iBAAiBA,CAACN,EAAE,EAAE;AAC7B,EAAA,OAAQA,EAAE,KAAK,IAAI,IAAMA,EAAE,KAAK,IAAK;AAAI;AACtCA,EAAAA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK;AAAI;AAC7BA,EAAAA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK;AAAI;AAC7BA,EAAAA,EAAE,KAAK,IAAK;AAAI;AACfA,EAAAA,EAAE,IAAI,IAAI,IAAKR,4BAA4B,CAAC7C,IAAI,CAAC4D,MAAM,CAACC,YAAY,CAACR,EAAE,CAAC,CAAE;AAChF;AAEA,SAASS,gBAAgBA,CAACT,EAAE,EAAE;AAC5B,EAAA,OAAQA,EAAE,KAAK,IAAI,IAAMA,EAAE,KAAK,IAAK;AAAI;AACtCA,EAAAA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK;AAAI;AAC7BA,EAAAA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK;AAAI;AAC7BA,EAAAA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK;AAAI;AAC7BA,EAAAA,EAAE,KAAK,IAAK;AAAI;AACfA,EAAAA,EAAE,IAAI,IAAI,IAAKN,2BAA2B,CAAC/C,IAAI,CAAC4D,MAAM,CAACC,YAAY,CAACR,EAAE,CAAC,CAAE;AAC/E;;AAEA;;AAEA,MAAMU,QAAQ,GAAG;AACf,EAAA,IAAI,EAAC,CAAC;AAAE,EAAA,IAAI,EAAC,CAAC;AAAE,EAAA,IAAI,EAAC,CAAC;AACtB,EAAA,KAAK,EAAC,CAAC;AAAE,EAAA,KAAK,EAAC,CAAC;AAAE,EAAA,KAAK,EAAC,CAAC;AAAE,EAAA,KAAK,EAAC,CAAC;AAAE,EAAA,KAAK,EAAC,CAAC;AAC3C,EAAA,MAAM,EAAC,CAAC;AAAE,EAAA,MAAM,EAAC,CAAC;AAAE,EAAA,MAAM,EAAC,CAAC;AAAE,EAAA,MAAM,EAAC,CAAC;AAAE,EAAA,MAAM,EAAC,CAAC;AAAE,EAAA,MAAM,EAAC,CAAC;AAC1D,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AAAE,EAAA,OAAO,EAAC,CAAC;AACtF,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAAE,EAAA,QAAQ,EAAC,CAAC;AAC9F,EAAA,SAAS,EAAC,CAAC;AAAE,EAAA,SAAS,EAAC,CAAC;AAAE,EAAA,SAAS,EAAC,CAAC;AAAE,EAAA,SAAS,EAAC,CAAC;AAAE,EAAA,SAAS,EAAC,CAAC;AAC/D,EAAA,UAAU,EAAC,CAAC;AAAE,EAAA,UAAU,EAAC,CAAC;AAAE,EAAA,UAAU,EAAC,CAAC;AACxC,EAAA,WAAW,EAAC,CAAC;AAAE,EAAA,WAAW,EAAC,CAAC;AAC5B,EAAA,YAAY,EAAC,CAAC;AAAE,EAAA,YAAY,EAAC;AAC/B,CAAC;AAED,SAASC,WAAWA,GAAG;EACrB,OAAOrD,KAAK,GAAGnB,MAAM,EAAE;AACrB,IAAA,MAAM6D,EAAE,GAAG3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC;IAEnC,IAAI8C,YAAY,CAACJ,EAAE,CAAC,IAAIK,gBAAgB,CAACL,EAAE,CAAC,EAAE;AAC5C,MAAA,EAAE1C,KAAK;AACT,KAAC,MAAM;AACL,MAAA;AACF;AACF;AACF;AAEA,SAASuD,aAAaA,CAACC,MAAM,EAAE;AAC7B,EAAA,IAAI9E,CAAC;IAAE+E,GAAG;IAAEf,EAAE;AAAEgB,IAAAA,IAAI,GAAG,CAAC;AAExBD,EAAAA,GAAG,GAAID,MAAM,KAAK,GAAG,GAAI,CAAC,GAAG,CAAC;EAC9B,KAAK9E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+E,GAAG,EAAE,EAAE/E,CAAC,EAAE;IACxB,IAAIsB,KAAK,GAAGnB,MAAM,IAAI8D,UAAU,CAAC5C,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;AAC/C0C,MAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;AACpB0D,MAAAA,IAAI,GAAGA,IAAI,GAAG,EAAE,GAAG,kBAAkB,CAACC,OAAO,CAACjB,EAAE,CAACkB,WAAW,EAAE,CAAC;AACjE,KAAC,MAAM;AACLC,MAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACF;AACA,EAAA,OAAOiB,MAAM,CAACC,YAAY,CAACQ,IAAI,CAAC;AAClC;AAEA,SAASI,0BAA0BA,GAAG;AACpC,EAAA,IAAIpB,EAAE,EAAEgB,IAAI,EAAEK,GAAG,EAAEC,GAAG;AAEtBtB,EAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AAClB0D,EAAAA,IAAI,GAAG,CAAC;;AAER;EACA,IAAIhB,EAAE,KAAK,GAAG,EAAE;AACdmB,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,OAAOhC,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;AACpB,IAAA,IAAI,CAAC2C,UAAU,CAACD,EAAE,CAAC,EAAE;AACnB,MAAA;AACF;AACAgB,IAAAA,IAAI,GAAGA,IAAI,GAAG,EAAE,GAAG,kBAAkB,CAACC,OAAO,CAACjB,EAAE,CAACkB,WAAW,EAAE,CAAC;AACjE;AAEA,EAAA,IAAIF,IAAI,GAAG,QAAQ,IAAIhB,EAAE,KAAK,GAAG,EAAE;AACjCmB,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;;AAEA;EACA,IAAI0B,IAAI,IAAI,MAAM,EAAE;AAClB,IAAA,OAAOT,MAAM,CAACC,YAAY,CAACQ,IAAI,CAAC;AAClC;EACAK,GAAG,GAAG,CAAEL,IAAI,GAAG,OAAO,IAAK,EAAE,IAAI,MAAM;EACvCM,GAAG,GAAG,CAAEN,IAAI,GAAG,OAAO,GAAI,IAAI,IAAI,MAAM;AACxC,EAAA,OAAOT,MAAM,CAACC,YAAY,CAACa,GAAG,EAAEC,GAAG,CAAC;AACtC;AAEA,SAASC,oBAAoBA,GAAG;EAC9B,IAAIvB,EAAE,EAAEwB,EAAE;AAEVxB,EAAAA,EAAE,GAAG3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,EAAE,CAAC;AAC/BkE,EAAAA,EAAE,GAAGjB,MAAM,CAACC,YAAY,CAACR,EAAE,CAAC;;AAE5B;EACA,IAAIA,EAAE,KAAK,IAAI,EAAE;IACf,IAAI3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,KAAK,IAAI,EAAE;AACrC6D,MAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACA,IAAA,EAAEhC,KAAK;AACP0C,IAAAA,EAAE,GAAGa,aAAa,CAAC,GAAG,CAAC;AACvB,IAAA,IAAI,CAACb,EAAE,IAAIA,EAAE,KAAK,IAAI,IAAI,CAACM,iBAAiB,CAACN,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9DO,MAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACAkC,IAAAA,EAAE,GAAGxB,EAAE;AACT;EAEA,OAAO1C,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC;AAC7B,IAAA,IAAI,CAACmD,gBAAgB,CAACT,EAAE,CAAC,EAAE;AACzB,MAAA;AACF;AACA,IAAA,EAAE1C,KAAK;AACPkE,IAAAA,EAAE,IAAIjB,MAAM,CAACC,YAAY,CAACR,EAAE,CAAC;;AAE7B;IACA,IAAIA,EAAE,KAAK,IAAI,EAAE;AACfwB,MAAAA,EAAE,GAAGA,EAAE,CAACC,MAAM,CAAC,CAAC,EAAED,EAAE,CAACrF,MAAM,GAAG,CAAC,CAAC;MAChC,IAAIkB,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,KAAK,IAAI,EAAE;AACrC6D,QAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACA,MAAA,EAAEhC,KAAK;AACP0C,MAAAA,EAAE,GAAGa,aAAa,CAAC,GAAG,CAAC;AACvB,MAAA,IAAI,CAACb,EAAE,IAAIA,EAAE,KAAK,IAAI,IAAI,CAACS,gBAAgB,CAACT,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7DO,QAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACAkC,MAAAA,EAAE,IAAIxB,EAAE;AACV;AACF;AAEA,EAAA,OAAOwB,EAAE;AACX;AAEA,SAASE,aAAaA,GAAG;EACvB,IAAIC,KAAK,EAAE3B,EAAE;EAEb2B,KAAK,GAAGrE,KAAK,EAAE;EACf,OAAOA,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC;IAC7B,IAAI0C,EAAE,KAAK,IAAI,EAAE;AACf;AACA1C,MAAAA,KAAK,GAAGqE,KAAK;MACb,OAAOJ,oBAAoB,EAAE;AAC/B;AACA,IAAA,IAAId,gBAAgB,CAACT,EAAE,CAAC,EAAE;AACxB,MAAA,EAAE1C,KAAK;AACT,KAAC,MAAM;AACL,MAAA;AACF;AACF;AAEA,EAAA,OAAOD,MAAM,CAACuE,KAAK,CAACD,KAAK,EAAErE,KAAK,CAAC;AACnC;AAEA,SAASuE,cAAcA,GAAG;AACxB,EAAA,IAAIF,KAAK,EAAEH,EAAE,EAAE7F,IAAI;AAEnBgG,EAAAA,KAAK,GAAGrE,KAAK;;AAEb;AACAkE,EAAAA,EAAE,GAAInE,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,KAAK,IAAI,GAAIiE,oBAAoB,EAAE,GAAGG,aAAa,EAAE;;AAEnF;AACA;AACA,EAAA,IAAIF,EAAE,CAACrF,MAAM,KAAK,CAAC,EAAE;AACnBR,IAAAA,IAAI,GAAG+B,eAAe;GACvB,MAAM,IAAIgD,QAAQ,CAACoB,cAAc,CAACN,EAAE,CAAC,EAAE;AAAE;AACxC7F,IAAAA,IAAI,GAAGgC,YAAY;AACrB,GAAC,MAAM,IAAI6D,EAAE,KAAK,MAAM,EAAE;AACxB7F,IAAAA,IAAI,GAAGiC,gBAAgB;GACxB,MAAM,IAAI4D,EAAE,KAAK,MAAM,IAAIA,EAAE,KAAK,OAAO,EAAE;AAC1C7F,IAAAA,IAAI,GAAG6B,mBAAmB;AAC5B,GAAC,MAAM;AACL7B,IAAAA,IAAI,GAAG+B,eAAe;AACxB;EAEA,OAAO;AACL/B,IAAAA,IAAI,EAAEA,IAAI;AACVuB,IAAAA,KAAK,EAAEsE,EAAE;AACTG,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;;AAEA;;AAEA,SAAS0E,cAAcA,GAAG;EACxB,IAAIL,KAAK,GAAGrE,KAAK;AACf0D,IAAAA,IAAI,GAAG3D,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC;IAC/B2E,KAAK;AACLC,IAAAA,GAAG,GAAG7E,MAAM,CAACC,KAAK,CAAC;IACnB6E,GAAG;IACHC,GAAG;IACHC,GAAG;AAEL,EAAA,QAAQrB,IAAI;AAEV;IACA,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;IACV,KAAK,IAAI,CAAC;AACV,IAAA,KAAK,IAAI;AAAE;AACT,MAAA,EAAE1D,KAAK;MACP,OAAO;AACL3B,QAAAA,IAAI,EAAEmC,eAAe;AACrBZ,QAAAA,KAAK,EAAEqD,MAAM,CAACC,YAAY,CAACQ,IAAI,CAAC;AAChCW,QAAAA,KAAK,EAAEA,KAAK;AACZI,QAAAA,GAAG,EAAEzE;OACN;AAEH,IAAA;MACE2E,KAAK,GAAG5E,MAAM,CAACuD,UAAU,CAACtD,KAAK,GAAG,CAAC,CAAC;;AAEpC;MACA,IAAI2E,KAAK,KAAK,IAAI,EAAE;AAClB,QAAA,QAAQjB,IAAI;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;UACV,KAAK,IAAI,CAAC;AACV,UAAA,KAAK,IAAI;AAAE;AACT1D,YAAAA,KAAK,IAAI,CAAC;YACV,OAAO;AACL3B,cAAAA,IAAI,EAAEmC,eAAe;AACrBZ,cAAAA,KAAK,EAAEqD,MAAM,CAACC,YAAY,CAACQ,IAAI,CAAC,GAAGT,MAAM,CAACC,YAAY,CAACyB,KAAK,CAAC;AAC7DN,cAAAA,KAAK,EAAEA,KAAK;AACZI,cAAAA,GAAG,EAAEzE;aACN;UAEH,KAAK,IAAI,CAAC;AACV,UAAA,KAAK,IAAI;AAAE;AACTA,YAAAA,KAAK,IAAI,CAAC;;AAEV;YACA,IAAID,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,KAAK,IAAI,EAAE;AACrC,cAAA,EAAEA,KAAK;AACT;YACA,OAAO;AACL3B,cAAAA,IAAI,EAAEmC,eAAe;cACrBZ,KAAK,EAAEG,MAAM,CAACuE,KAAK,CAACD,KAAK,EAAErE,KAAK,CAAC;AACjCqE,cAAAA,KAAK,EAAEA,KAAK;AACZI,cAAAA,GAAG,EAAEzE;aACN;AACL;AACF;AACJ;;AAEA;;EAEA+E,GAAG,GAAGhF,MAAM,CAACoE,MAAM,CAACnE,KAAK,EAAE,CAAC,CAAC;EAE7B,IAAI+E,GAAG,KAAK,MAAM,EAAE;AAClB/E,IAAAA,KAAK,IAAI,CAAC;IACV,OAAO;AACL3B,MAAAA,IAAI,EAAEmC,eAAe;AACrBZ,MAAAA,KAAK,EAAEmF,GAAG;AACVV,MAAAA,KAAK,EAAEA,KAAK;AACZI,MAAAA,GAAG,EAAEzE;KACN;AACH;;AAEA;;EAEA8E,GAAG,GAAGC,GAAG,CAACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtB,IAAIW,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,KAAK,EAAE;AACnD9E,IAAAA,KAAK,IAAI,CAAC;IACV,OAAO;AACL3B,MAAAA,IAAI,EAAEmC,eAAe;AACrBZ,MAAAA,KAAK,EAAEkF,GAAG;AACVT,MAAAA,KAAK,EAAEA,KAAK;AACZI,MAAAA,GAAG,EAAEzE;KACN;AACH;;AAEA;EACA6E,GAAG,GAAGC,GAAG,CAACX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAEtB,EAAA,IAAKS,GAAG,KAAKC,GAAG,CAAC,CAAC,CAAC,IAAK,QAAQ,CAACjC,QAAQ,CAACgC,GAAG,CAAE,IAAKC,GAAG,KAAK,IAAI,EAAE;AAChE7E,IAAAA,KAAK,IAAI,CAAC;IACV,OAAO;AACL3B,MAAAA,IAAI,EAAEmC,eAAe;AACrBZ,MAAAA,KAAK,EAAEiF,GAAG;AACVR,MAAAA,KAAK,EAAEA,KAAK;AACZI,MAAAA,GAAG,EAAEzE;KACN;AACH;EAEA,IAAI6E,GAAG,KAAK,IAAI,EAAE;AAChBhB,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;;AAEA;;AAEA,EAAA,IAAI,cAAc,CAACY,QAAQ,CAACgC,GAAG,CAAC,EAAE;AAChC,IAAA,EAAE5E,KAAK;IACP,OAAO;AACL3B,MAAAA,IAAI,EAAEmC,eAAe;AACrBZ,MAAAA,KAAK,EAAEgF,GAAG;AACVP,MAAAA,KAAK,EAAEA,KAAK;AACZI,MAAAA,GAAG,EAAEzE;KACN;AACH;AAEA6D,EAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;;AAEA;;AAEA,SAASgD,cAAcA,CAACX,KAAK,EAAE;EAC7B,IAAIY,MAAM,GAAG,EAAE;EAEf,OAAOjF,KAAK,GAAGnB,MAAM,EAAE;IACrB,IAAI,CAAC8D,UAAU,CAAC5C,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;AAC9B,MAAA;AACF;AACAiF,IAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;AAEA,EAAA,IAAIiF,MAAM,CAACpG,MAAM,KAAK,CAAC,EAAE;AACvBgF,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,IAAIgB,iBAAiB,CAACjD,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC/C6D,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,OAAO;AACL3D,IAAAA,IAAI,EAAEkC,mBAAmB;IACzBX,KAAK,EAAEsF,QAAQ,CAAC,IAAI,GAAGD,MAAM,EAAE,EAAE,CAAC;AAClCZ,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;AAEA,SAASmF,gBAAgBA,CAACd,KAAK,EAAE;EAC/B,IAAIY,MAAM,GAAG,GAAG,GAAGlF,MAAM,CAACC,KAAK,EAAE,CAAC;EAClC,OAAOA,KAAK,GAAGnB,MAAM,EAAE;IACrB,IAAI,CAACgE,YAAY,CAAC9C,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;AAChC,MAAA;AACF;AACAiF,IAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;AAEA,EAAA,IAAIgD,iBAAiB,CAACjD,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,IAAIyC,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC3F6D,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,OAAO;AACL3D,IAAAA,IAAI,EAAEkC,mBAAmB;AACzBX,IAAAA,KAAK,EAAEsF,QAAQ,CAACD,MAAM,EAAE,CAAC,CAAC;AAC1BG,IAAAA,KAAK,EAAE,IAAI;AACXf,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;AAEA,SAASqF,kBAAkBA,GAAG;AAC5B,EAAA,IAAIJ,MAAM,EAAEZ,KAAK,EAAE3B,EAAE;AAErBA,EAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AAClBqC,EAAAA,MAAM,CAACI,cAAc,CAACC,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,IAAKZ,EAAE,KAAK,GAAI,EACrD,oEAAoE,CAAC;AAEvE2B,EAAAA,KAAK,GAAGrE,KAAK;AACbiF,EAAAA,MAAM,GAAG,EAAE;EACX,IAAIvC,EAAE,KAAK,GAAG,EAAE;AACduC,IAAAA,MAAM,GAAGlF,MAAM,CAACC,KAAK,EAAE,CAAC;AACxB0C,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;;AAElB;AACA;IACA,IAAIiF,MAAM,KAAK,GAAG,EAAE;AAClB,MAAA,IAAIvC,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;AAC5B,QAAA,EAAE1C,KAAK;QACP,OAAOgF,cAAc,CAACX,KAAK,CAAC;AAC9B;AACA,MAAA,IAAIxB,YAAY,CAACH,EAAE,CAAC,EAAE;QACpB,OAAOyC,gBAAgB,CAACd,KAAK,CAAC;AAChC;;AAEA;MACA,IAAI3B,EAAE,IAAID,cAAc,CAACC,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1CO,QAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACF;IAEA,OAAOS,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC/CiF,MAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;AACA0C,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AACpB;EAEA,IAAI0C,EAAE,KAAK,GAAG,EAAE;AACduC,IAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;IACzB,OAAOyC,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC/CiF,MAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;AACA0C,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AACpB;AAEA,EAAA,IAAI0C,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;AAC5BuC,IAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAEzB0C,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AAClB,IAAA,IAAI0C,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;AAC5BuC,MAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;IACA,IAAIyC,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;MAC5C,OAAOyC,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC/CiF,QAAAA,MAAM,IAAIlF,MAAM,CAACC,KAAK,EAAE,CAAC;AAC3B;AACF,KAAC,MAAM;AACL6D,MAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;AACF;EAEA,IAAIgB,iBAAiB,CAACjD,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC,CAAC,EAAE;AAC/C6D,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,OAAO;AACL3D,IAAAA,IAAI,EAAEkC,mBAAmB;AACzBX,IAAAA,KAAK,EAAE0F,UAAU,CAACL,MAAM,CAAC;AACzBZ,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;;AAEA;;AAEA,SAASuF,iBAAiBA,GAAG;EAC3B,IAAIC,GAAG,GAAG,EAAE;IACVC,KAAK;IAAEpB,KAAK;IAAE3B,EAAE;IAAEgB,IAAI;AAAE0B,IAAAA,KAAK,GAAG,KAAK;AAEvCK,EAAAA,KAAK,GAAG1F,MAAM,CAACC,KAAK,CAAC;EACrBqC,MAAM,CAAEoD,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,GAAG,EACrC,yCAAyC,CAAC;AAE5CpB,EAAAA,KAAK,GAAGrE,KAAK;AACb,EAAA,EAAEA,KAAK;EAEP,OAAOA,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;IAEpB,IAAI0C,EAAE,KAAK+C,KAAK,EAAE;AAChBA,MAAAA,KAAK,GAAG,EAAE;AACV,MAAA;AACF,KAAC,MAAM,IAAI/C,EAAE,KAAK,IAAI,EAAE;AACtBA,MAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;AACpB,MAAA,IAAI,CAAC0C,EAAE,IAAI,CAACK,gBAAgB,CAACL,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9C,QAAA,QAAQZ,EAAE;AACR,UAAA,KAAK,GAAG;AACR,UAAA,KAAK,GAAG;AACN,YAAA,IAAI3C,MAAM,CAACC,KAAK,CAAC,KAAK,GAAG,EAAE;AACzB,cAAA,EAAEA,KAAK;cACPwF,GAAG,IAAI1B,0BAA0B,EAAE;AACrC,aAAC,MAAM;AACL0B,cAAAA,GAAG,IAAIjC,aAAa,CAACb,EAAE,CAAC;AAC1B;AACA,YAAA;AACF,UAAA,KAAK,GAAG;AACN8C,YAAAA,GAAG,IAAI,IAAI;AACX,YAAA;AACF,UAAA,KAAK,GAAG;AACNA,YAAAA,GAAG,IAAI,IAAI;AACX,YAAA;AACF,UAAA,KAAK,GAAG;AACNA,YAAAA,GAAG,IAAI,IAAI;AACX,YAAA;AACF,UAAA,KAAK,GAAG;AACNA,YAAAA,GAAG,IAAI,IAAI;AACX,YAAA;AACF,UAAA,KAAK,GAAG;AACNA,YAAAA,GAAG,IAAI,IAAI;AACX,YAAA;AACF,UAAA,KAAK,GAAG;AACNA,YAAAA,GAAG,IAAI,MAAM;AACb,YAAA;AAEF,UAAA;AACE,YAAA,IAAI3C,YAAY,CAACH,EAAE,CAAC,EAAE;AACpBgB,cAAAA,IAAI,GAAG,UAAU,CAACC,OAAO,CAACjB,EAAE,CAAC;;AAE7B;cACA,IAAIgB,IAAI,KAAK,CAAC,EAAE;AACd0B,gBAAAA,KAAK,GAAG,IAAI;AACd;cAEA,IAAIpF,KAAK,GAAGnB,MAAM,IAAIgE,YAAY,CAAC9C,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;AACjDoF,gBAAAA,KAAK,GAAG,IAAI;AACZ1B,gBAAAA,IAAI,GAAGA,IAAI,GAAG,CAAC,GAAG,UAAU,CAACC,OAAO,CAAC5D,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;;AAErD;AACA;AACA,gBAAA,IAAI,MAAM,CAAC4C,QAAQ,CAACF,EAAE,CAAC,IACrB1C,KAAK,GAAGnB,MAAM,IACdgE,YAAY,CAAC9C,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;AAC7B0D,kBAAAA,IAAI,GAAGA,IAAI,GAAG,CAAC,GAAG,UAAU,CAACC,OAAO,CAAC5D,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;AACvD;AACF;AACAwF,cAAAA,GAAG,IAAIvC,MAAM,CAACC,YAAY,CAACQ,IAAI,CAAC;AAClC,aAAC,MAAM;AACL8B,cAAAA,GAAG,IAAI9C,EAAE;AACX;AACA,YAAA;AACJ;AACF,OAAC,MAAM;QACL,IAAIA,EAAE,KAAK,IAAI,IAAI3C,MAAM,CAACC,KAAK,CAAC,KAAK,IAAI,EAAE;AACzC,UAAA,EAAEA,KAAK;AACT;AACF;KACD,MAAM,IAAI+C,gBAAgB,CAACL,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7C,MAAA;AACF,KAAC,MAAM;AACLkC,MAAAA,GAAG,IAAI9C,EAAE;AACX;AACF;EAEA,IAAI+C,KAAK,KAAK,EAAE,EAAE;AAChB5B,IAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD;EAEA,OAAO;AACL3D,IAAAA,IAAI,EAAEoC,kBAAkB;AACxBb,IAAAA,KAAK,EAAE4F,GAAG;AACVJ,IAAAA,KAAK,EAAEA,KAAK;AACZf,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;AAEA,SAAS0F,UAAUA,CAACC,OAAO,EAAEC,KAAK,EAAE;EAClC,IAAIC,GAAG,GAAGF,OAAO;AAEjB,EAAA,IAAIC,KAAK,CAAChD,QAAQ,CAAC,GAAG,CAAC,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAiD,GAAG,GAAGA,GAAG,CACNC,OAAO,CAAC,wBAAwB,EAAE,CAACC,EAAE,EAAEC,EAAE,KAAK;MAC7C,IAAId,QAAQ,CAACc,EAAE,EAAE,EAAE,CAAC,IAAI,QAAQ,EAAE;AAChC,QAAA,OAAO,GAAG;AACZ;AACAnC,MAAAA,UAAU,CAAC,EAAE,EAAEjC,oBAAoB,CAAC;AACtC,KAAC,CAAC,CACDkE,OAAO,CAAC,iCAAiC,EAAE,GAAG,CAAC;AACpD;;AAEA;EACA,IAAI;IACF,IAAI3D,MAAM,CAAC0D,GAAG,CAAC;GAChB,CAAC,OAAOI,CAAC,EAAE;AACVpC,IAAAA,UAAU,CAAC,EAAE,EAAEjC,oBAAoB,CAAC;AACtC;;AAEA;AACA;AACA;EACA,IAAI;AACF,IAAA,OAAO,IAAIO,MAAM,CAACwD,OAAO,EAAEC,KAAK,CAAC;GAClC,CAAC,OAAOM,SAAS,EAAE;AAClB,IAAA,OAAO,IAAI;AACb;AACF;AAEA,SAASC,cAAcA,GAAG;EACxB,IAAIzD,EAAE,EAAE8C,GAAG,EAAEY,WAAW,EAAEC,UAAU,EAAEC,IAAI;AAE1C5D,EAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;AAClBqC,EAAAA,MAAM,CAACK,EAAE,KAAK,GAAG,EAAE,oDAAoD,CAAC;AACxE8C,EAAAA,GAAG,GAAGzF,MAAM,CAACC,KAAK,EAAE,CAAC;AAErBoG,EAAAA,WAAW,GAAG,KAAK;AACnBC,EAAAA,UAAU,GAAG,KAAK;EAClB,OAAOrG,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;AACpBwF,IAAAA,GAAG,IAAI9C,EAAE;IACT,IAAIA,EAAE,KAAK,IAAI,EAAE;AACfA,MAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,EAAE,CAAC;AACpB;MACA,IAAI+C,gBAAgB,CAACL,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AACtCO,QAAAA,UAAU,CAAC,EAAE,EAAEhC,yBAAyB,CAAC;AAC3C;AACA2D,MAAAA,GAAG,IAAI9C,EAAE;KACV,MAAM,IAAIK,gBAAgB,CAACL,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7CO,MAAAA,UAAU,CAAC,EAAE,EAAEhC,yBAAyB,CAAC;KAC1C,MAAM,IAAIuE,WAAW,EAAE;MACtB,IAAI1D,EAAE,KAAK,GAAG,EAAE;AACd0D,QAAAA,WAAW,GAAG,KAAK;AACrB;AACF,KAAC,MAAM;MACL,IAAI1D,EAAE,KAAK,GAAG,EAAE;AACd2D,QAAAA,UAAU,GAAG,IAAI;AACjB,QAAA;AACF,OAAC,MAAM,IAAI3D,EAAE,KAAK,GAAG,EAAE;AACrB0D,QAAAA,WAAW,GAAG,IAAI;AACpB;AACF;AACF;EAEA,IAAI,CAACC,UAAU,EAAE;AACfxC,IAAAA,UAAU,CAAC,EAAE,EAAEhC,yBAAyB,CAAC;AAC3C;;AAEA;AACAyE,EAAAA,IAAI,GAAGd,GAAG,CAACrB,MAAM,CAAC,CAAC,EAAEqB,GAAG,CAAC3G,MAAM,GAAG,CAAC,CAAC;EACpC,OAAO;AACLe,IAAAA,KAAK,EAAE0G,IAAI;AACXC,IAAAA,OAAO,EAAEf;GACV;AACH;AAEA,SAASgB,eAAeA,GAAG;AACzB,EAAA,IAAI9D,EAAE,EAAE8C,GAAG,EAAEI,KAAK;AAElBJ,EAAAA,GAAG,GAAG,EAAE;AACRI,EAAAA,KAAK,GAAG,EAAE;EACV,OAAO5F,KAAK,GAAGnB,MAAM,EAAE;AACrB6D,IAAAA,EAAE,GAAG3C,MAAM,CAACC,KAAK,CAAC;IAClB,IAAI,CAACmD,gBAAgB,CAACT,EAAE,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;AACvC,MAAA;AACF;AAEA,IAAA,EAAEtD,KAAK;AACP,IAAA,IAAI0C,EAAE,KAAK,IAAI,IAAI1C,KAAK,GAAGnB,MAAM,EAAE;AACjCgF,MAAAA,UAAU,CAAC,EAAE,EAAEvC,sBAAsB,EAAEU,OAAO,CAAC;AACjD,KAAC,MAAM;AACL4D,MAAAA,KAAK,IAAIlD,EAAE;AACX8C,MAAAA,GAAG,IAAI9C,EAAE;AACX;AACF;EAEA,IAAIkD,KAAK,CAACa,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AAClC5C,IAAAA,UAAU,CAAC,EAAE,EAAEjC,oBAAoB,EAAEgE,KAAK,CAAC;AAC7C;EAEA,OAAO;AACLhG,IAAAA,KAAK,EAAEgG,KAAK;AACZW,IAAAA,OAAO,EAAEf;GACV;AACH;AAEA,SAASkB,UAAUA,GAAG;AACpB,EAAA,IAAIrC,KAAK,EAAEiC,IAAI,EAAEV,KAAK,EAAEhG,KAAK;AAE7BK,EAAAA,SAAS,GAAG,IAAI;AAChBoD,EAAAA,WAAW,EAAE;AACbgB,EAAAA,KAAK,GAAGrE,KAAK;EAEbsG,IAAI,GAAGH,cAAc,EAAE;EACvBP,KAAK,GAAGY,eAAe,EAAE;EACzB5G,KAAK,GAAG8F,UAAU,CAACY,IAAI,CAAC1G,KAAK,EAAEgG,KAAK,CAAChG,KAAK,CAAC;EAE3C,OAAO;AACL2G,IAAAA,OAAO,EAAED,IAAI,CAACC,OAAO,GAAGX,KAAK,CAACW,OAAO;AACrC3G,IAAAA,KAAK,EAAEA,KAAK;AACZ+G,IAAAA,KAAK,EAAE;MACLhB,OAAO,EAAEW,IAAI,CAAC1G,KAAK;MACnBgG,KAAK,EAAEA,KAAK,CAAChG;KACd;AACDyE,IAAAA,KAAK,EAAEA,KAAK;AACZI,IAAAA,GAAG,EAAEzE;GACN;AACH;AAEA,SAAS4G,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,OAAOA,KAAK,CAACxI,IAAI,KAAK+B,eAAe,IACnCyG,KAAK,CAACxI,IAAI,KAAKgC,YAAY,IAC3BwG,KAAK,CAACxI,IAAI,KAAK6B,mBAAmB,IAClC2G,KAAK,CAACxI,IAAI,KAAKiC,gBAAgB;AACnC;AAEA,SAASwG,OAAOA,GAAG;AACjBzD,EAAAA,WAAW,EAAE;EAEb,IAAIrD,KAAK,IAAInB,MAAM,EAAE;IACnB,OAAO;AACLR,MAAAA,IAAI,EAAE8B,QAAQ;AACdkE,MAAAA,KAAK,EAAErE,KAAK;AACZyE,MAAAA,GAAG,EAAEzE;KACN;AACH;AAEA,EAAA,MAAM0C,EAAE,GAAG3C,MAAM,CAACuD,UAAU,CAACtD,KAAK,CAAC;AAEnC,EAAA,IAAIgD,iBAAiB,CAACN,EAAE,CAAC,EAAE;IACzB,OAAO6B,cAAc,EAAE;AACzB;;AAEA;EACA,IAAI7B,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAE;IAC7C,OAAOgC,cAAc,EAAE;AACzB;;AAEA;AACA,EAAA,IAAIhC,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAE;IAC9B,OAAO6C,iBAAiB,EAAE;AAC5B;;AAGA;AACA;EACA,IAAI7C,EAAE,KAAK,IAAI,EAAE;IACf,IAAID,cAAc,CAAC1C,MAAM,CAACuD,UAAU,CAACtD,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE;MAChD,OAAOqF,kBAAkB,EAAE;AAC7B;IACA,OAAOX,cAAc,EAAE;AACzB;AAEA,EAAA,IAAIjC,cAAc,CAACC,EAAE,CAAC,EAAE;IACtB,OAAO2C,kBAAkB,EAAE;AAC7B;EAEA,OAAOX,cAAc,EAAE;AACzB;AAEA,SAASqC,GAAGA,GAAG;EACb,MAAMF,KAAK,GAAG5G,SAAS;EACvBD,KAAK,GAAG6G,KAAK,CAACpC,GAAG;EAEjBxE,SAAS,GAAG6G,OAAO,EAAE;EAErB9G,KAAK,GAAG6G,KAAK,CAACpC,GAAG;AAEjB,EAAA,OAAOoC,KAAK;AACd;AAEA,SAASG,IAAIA,GAAG;EACd,MAAMC,GAAG,GAAGjH,KAAK;EAEjBC,SAAS,GAAG6G,OAAO,EAAE;AACrB9G,EAAAA,KAAK,GAAGiH,GAAG;AACb;AAEA,SAASC,qBAAqBA,CAACnI,QAAQ,EAAE;AACvC,EAAA,MAAMD,IAAI,GAAG,IAAIV,OAAO,CAACuC,qBAAqB,CAAC;EAC/C7B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;AACxB,EAAA,OAAOD,IAAI;AACb;AAEA,SAASqI,sBAAsBA,CAACC,QAAQ,EAAEpI,IAAI,EAAEC,KAAK,EAAE;AACrD,EAAA,MAAMH,IAAI,GAAG,IAAIV,OAAO,CAAEgJ,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,IAAI,GAAInG,uBAAuB,GAAGL,sBAAsB,CAAC;EACrH9B,IAAI,CAACsI,QAAQ,GAAGA,QAAQ;EACxBtI,IAAI,CAACE,IAAI,GAAGA,IAAI;EAChBF,IAAI,CAACG,KAAK,GAAGA,KAAK;AAClB,EAAA,OAAOH,IAAI;AACb;AAEA,SAASuI,oBAAoBA,CAACnI,MAAM,EAAEoI,IAAI,EAAE;AAC1C,EAAA,MAAMxI,IAAI,GAAG,IAAIV,OAAO,CAACyC,oBAAoB,CAAC;EAC9C/B,IAAI,CAACI,MAAM,GAAGA,MAAM;EACpBJ,IAAI,CAACM,SAAS,GAAGkI,IAAI;AACrB,EAAA,OAAOxI,IAAI;AACb;AAEA,SAASyI,2BAA2BA,CAAClI,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAE;AAChE,EAAA,MAAMT,IAAI,GAAG,IAAIV,OAAO,CAAC0C,2BAA2B,CAAC;EACrDhC,IAAI,CAACO,IAAI,GAAGA,IAAI;EAChBP,IAAI,CAACQ,UAAU,GAAGA,UAAU;EAC5BR,IAAI,CAACS,SAAS,GAAGA,SAAS;AAC1B,EAAA,OAAOT,IAAI;AACb;AAEA,SAAS0I,gBAAgBA,CAACC,IAAI,EAAE;AAC9B,EAAA,MAAM3I,IAAI,GAAG,IAAIV,OAAO,CAAC2C,gBAAgB,CAAC;EAC1CjC,IAAI,CAAC2I,IAAI,GAAGA,IAAI;AAChB,EAAA,OAAO3I,IAAI;AACb;AAEA,SAAS4I,aAAaA,CAACb,KAAK,EAAE;AAC5B,EAAA,MAAM/H,IAAI,GAAG,IAAIV,OAAO,CAAC4C,aAAa,CAAC;AACvClC,EAAAA,IAAI,CAACc,KAAK,GAAGiH,KAAK,CAACjH,KAAK;AACxBd,EAAAA,IAAI,CAAC6I,GAAG,GAAG5H,MAAM,CAACuE,KAAK,CAACuC,KAAK,CAACxC,KAAK,EAAEwC,KAAK,CAACpC,GAAG,CAAC;EAC/C,IAAIoC,KAAK,CAACF,KAAK,EAAE;AACf,IAAA,IAAI7H,IAAI,CAAC6I,GAAG,KAAK,IAAI,EAAE;MACrB7I,IAAI,CAAC6I,GAAG,GAAG,QAAQ;AACrB;AACA7I,IAAAA,IAAI,CAAC6H,KAAK,GAAGE,KAAK,CAACF,KAAK;AAC1B;AACA,EAAA,OAAO7H,IAAI;AACb;AAEA,SAAS8I,sBAAsBA,CAACC,QAAQ,EAAErI,MAAM,EAAEC,QAAQ,EAAE;AAC1D,EAAA,MAAMX,IAAI,GAAG,IAAIV,OAAO,CAAC8C,sBAAsB,CAAC;AAChDpC,EAAAA,IAAI,CAACgJ,QAAQ,GAAGD,QAAQ,KAAK,GAAG;EAChC/I,IAAI,CAACU,MAAM,GAAGA,MAAM;EACpBV,IAAI,CAACW,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACX,IAAI,CAACgJ,QAAQ,EAAErI,QAAQ,CAACsI,MAAM,GAAG,IAAI;AAC1C,EAAA,OAAOjJ,IAAI;AACb;AAEA,SAASkJ,sBAAsBA,CAACtI,UAAU,EAAE;AAC1C,EAAA,MAAMZ,IAAI,GAAG,IAAIV,OAAO,CAAC+C,sBAAsB,CAAC;EAChDrC,IAAI,CAACY,UAAU,GAAGA,UAAU;AAC5B,EAAA,OAAOZ,IAAI;AACb;AAEA,SAASmJ,cAAcA,CAACC,IAAI,EAAEvI,GAAG,EAAEC,KAAK,EAAE;AACxC,EAAA,MAAMd,IAAI,GAAG,IAAIV,OAAO,CAACgD,cAAc,CAAC;EACxCtC,IAAI,CAACa,GAAG,GAAGA,GAAG;EACdb,IAAI,CAACc,KAAK,GAAGA,KAAK;EAClBd,IAAI,CAACoJ,IAAI,GAAGA,IAAI;AAChB,EAAA,OAAOpJ,IAAI;AACb;AAEA,SAASqJ,qBAAqBA,CAACf,QAAQ,EAAEvH,QAAQ,EAAE;AACjD,EAAA,MAAMf,IAAI,GAAG,IAAIV,OAAO,CAACiD,qBAAqB,CAAC;EAC/CvC,IAAI,CAACsI,QAAQ,GAAGA,QAAQ;EACxBtI,IAAI,CAACe,QAAQ,GAAGA,QAAQ;EACxBf,IAAI,CAAC0E,MAAM,GAAG,IAAI;AAClB,EAAA,OAAO1E,IAAI;AACb;;AAEA;;AAEA,SAAS+E,UAAUA,CAACgD,KAAK,EAAEuB,aAAa,EAAE;AACxC,EAAA,IAAIC,KAAK;AACPf,IAAAA,IAAI,GAAGgB,KAAK,CAAChK,SAAS,CAACgG,KAAK,CAACiE,IAAI,CAACnJ,SAAS,EAAE,CAAC,CAAC;IAC/CoJ,GAAG,GAAGJ,aAAa,CAACtC,OAAO,CACzB,QAAQ,EACR,CAAC2C,KAAK,EAAEzI,KAAK,KAAK;MAChBqC,MAAM,CAACrC,KAAK,GAAGsH,IAAI,CAACzI,MAAM,EAAE,oCAAoC,CAAC;MACjE,OAAOyI,IAAI,CAACtH,KAAK,CAAC;AACpB,KACF,CAAC;AAGHqI,EAAAA,KAAK,GAAG,IAAI7F,KAAK,CAACgG,GAAG,CAAC;EACtBH,KAAK,CAACrI,KAAK,GAAGA,KAAK;EACnBqI,KAAK,CAACK,WAAW,GAAGF,GAAG;AACvB,EAAA,MAAMH,KAAK;AACb;;AAEA;;AAEA,SAASM,eAAeA,CAAC9B,KAAK,EAAE;AAC9B,EAAA,IAAIA,KAAK,CAACxI,IAAI,KAAK8B,QAAQ,EAAE;AAC3B0D,IAAAA,UAAU,CAACgD,KAAK,EAAElF,oBAAoB,CAAC;AACzC;AAEA,EAAA,IAAIkF,KAAK,CAACxI,IAAI,KAAKkC,mBAAmB,EAAE;AACtCsD,IAAAA,UAAU,CAACgD,KAAK,EAAEtF,uBAAuB,CAAC;AAC5C;AAEA,EAAA,IAAIsF,KAAK,CAACxI,IAAI,KAAKoC,kBAAkB,EAAE;AACrCoD,IAAAA,UAAU,CAACgD,KAAK,EAAErF,uBAAuB,CAAC;AAC5C;AAEA,EAAA,IAAIqF,KAAK,CAACxI,IAAI,KAAK+B,eAAe,EAAE;AAClCyD,IAAAA,UAAU,CAACgD,KAAK,EAAEpF,2BAA2B,CAAC;AAChD;AAEA,EAAA,IAAIoF,KAAK,CAACxI,IAAI,KAAKgC,YAAY,EAAE;AAC/BwD,IAAAA,UAAU,CAACgD,KAAK,EAAEnF,yBAAyB,CAAC;AAC9C;;AAEA;EACAmC,UAAU,CAACgD,KAAK,EAAEvF,sBAAsB,EAAEuF,KAAK,CAACjH,KAAK,CAAC;AACxD;;AAEA;AACA;;AAEA,SAASgJ,MAAMA,CAAChJ,KAAK,EAAE;AACrB,EAAA,MAAMiH,KAAK,GAAGE,GAAG,EAAE;EACnB,IAAIF,KAAK,CAACxI,IAAI,KAAKmC,eAAe,IAAIqG,KAAK,CAACjH,KAAK,KAAKA,KAAK,EAAE;IAC3D+I,eAAe,CAAC9B,KAAK,CAAC;AACxB;AACF;;AAEA;;AAEA,SAASgC,KAAKA,CAACjJ,KAAK,EAAE;EACpB,OAAOK,SAAS,CAAC5B,IAAI,KAAKmC,eAAe,IAAIP,SAAS,CAACL,KAAK,KAAKA,KAAK;AACxE;;AAEA;;AAEA,SAASkJ,YAAYA,CAACC,OAAO,EAAE;EAC7B,OAAO9I,SAAS,CAAC5B,IAAI,KAAKgC,YAAY,IAAIJ,SAAS,CAACL,KAAK,KAAKmJ,OAAO;AACvE;;AAEA;;AAEA,SAASC,qBAAqBA,GAAG;EAC/B,MAAMjK,QAAQ,GAAG,EAAE;EAEnBiB,KAAK,GAAGC,SAAS,CAACoE,KAAK;EACvBuE,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,EAAE;AAClB,IAAA,IAAIA,KAAK,CAAC,GAAG,CAAC,EAAE;AACd9B,MAAAA,GAAG,EAAE;AACLhI,MAAAA,QAAQ,CAACkK,IAAI,CAAC,IAAI,CAAC;AACrB,KAAC,MAAM;AACLlK,MAAAA,QAAQ,CAACkK,IAAI,CAACC,0BAA0B,EAAE,CAAC;AAE3C,MAAA,IAAI,CAACL,KAAK,CAAC,GAAG,CAAC,EAAE;QACfD,MAAM,CAAC,GAAG,CAAC;AACb;AACF;AACF;AAEA7B,EAAAA,GAAG,EAAE;EAEL,OAAOG,qBAAqB,CAACnI,QAAQ,CAAC;AACxC;;AAEA;;AAEA,SAASoK,sBAAsBA,GAAG;EAChCnJ,KAAK,GAAGC,SAAS,CAACoE,KAAK;AACvB,EAAA,MAAMwC,KAAK,GAAGE,GAAG,EAAE;;AAEnB;AACA;;EAEA,IAAIF,KAAK,CAACxI,IAAI,KAAKoC,kBAAkB,IAAIoG,KAAK,CAACxI,IAAI,KAAKkC,mBAAmB,EAAE;IAC3E,IAAIsG,KAAK,CAACzB,KAAK,EAAE;AACfvB,MAAAA,UAAU,CAACgD,KAAK,EAAE/E,yBAAyB,CAAC;AAC9C;IACA,OAAO4F,aAAa,CAACb,KAAK,CAAC;AAC7B;AAEA,EAAA,OAAOW,gBAAgB,CAACX,KAAK,CAACjH,KAAK,CAAC;AACtC;AAEA,SAASwJ,mBAAmBA,GAAG;AAC7B,EAAA,IAAIvC,KAAK,EAAElH,GAAG,EAAEuE,EAAE,EAAEtE,KAAK;EAEzBI,KAAK,GAAGC,SAAS,CAACoE,KAAK;AACvBwC,EAAAA,KAAK,GAAG5G,SAAS;AAEjB,EAAA,IAAI4G,KAAK,CAACxI,IAAI,KAAK+B,eAAe,EAAE;IAClC8D,EAAE,GAAGiF,sBAAsB,EAAE;IAC7BP,MAAM,CAAC,GAAG,CAAC;IACXhJ,KAAK,GAAGsJ,0BAA0B,EAAE;AACpC,IAAA,OAAOjB,cAAc,CAAC,MAAM,EAAE/D,EAAE,EAAEtE,KAAK,CAAC;AAC1C;EACA,IAAIiH,KAAK,CAACxI,IAAI,KAAK8B,QAAQ,IAAI0G,KAAK,CAACxI,IAAI,KAAKmC,eAAe,EAAE;IAC7DmI,eAAe,CAAC9B,KAAK,CAAC;AACxB,GAAC,MAAM;IACLlH,GAAG,GAAGwJ,sBAAsB,EAAE;IAC9BP,MAAM,CAAC,GAAG,CAAC;IACXhJ,KAAK,GAAGsJ,0BAA0B,EAAE;AACpC,IAAA,OAAOjB,cAAc,CAAC,MAAM,EAAEtI,GAAG,EAAEC,KAAK,CAAC;AAC3C;AACF;AAEA,SAASyJ,sBAAsBA,GAAG;EAChC,IAAI3J,UAAU,GAAG,EAAE;IACjBD,QAAQ;IAAEgI,IAAI;IAAE9H,GAAG;IAAE2J,GAAG,GAAG,EAAE;AAC7BC,IAAAA,QAAQ,GAAGtG,MAAM;EAEnBjD,KAAK,GAAGC,SAAS,CAACoE,KAAK;EACvBuE,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,EAAE;IAClBpJ,QAAQ,GAAG2J,mBAAmB,EAAE;AAEhC,IAAA,IAAI3J,QAAQ,CAACE,GAAG,CAACtB,IAAI,KAAK0C,gBAAgB,EAAE;AAC1C0G,MAAAA,IAAI,GAAGhI,QAAQ,CAACE,GAAG,CAAC8H,IAAI;AAC1B,KAAC,MAAM;MACLA,IAAI,GAAG8B,QAAQ,CAAC9J,QAAQ,CAACE,GAAG,CAACC,KAAK,CAAC;AACrC;IAEAD,GAAG,GAAG,GAAG,GAAG8H,IAAI;AAChB,IAAA,IAAI+B,MAAM,CAAClL,SAAS,CAACkG,cAAc,CAAC+D,IAAI,CAACe,GAAG,EAAE3J,GAAG,CAAC,EAAE;AAClDkE,MAAAA,UAAU,CAAC,EAAE,EAAE9B,8BAA8B,CAAC;AAChD,KAAC,MAAM;AACLuH,MAAAA,GAAG,CAAC3J,GAAG,CAAC,GAAG,IAAI;AACjB;AAEAD,IAAAA,UAAU,CAACuJ,IAAI,CAACxJ,QAAQ,CAAC;AAEzB,IAAA,IAAI,CAACoJ,KAAK,CAAC,GAAG,CAAC,EAAE;MACfD,MAAM,CAAC,GAAG,CAAC;AACb;AACF;EAEAA,MAAM,CAAC,GAAG,CAAC;EAEX,OAAOZ,sBAAsB,CAACtI,UAAU,CAAC;AAC3C;;AAEA;;AAEA,SAAS+J,oBAAoBA,GAAG;EAC9Bb,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,MAAMc,IAAI,GAAGC,eAAe,EAAE;EAE9Bf,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,OAAOc,IAAI;AACb;;AAGA;;AAEA,MAAME,aAAa,GAAG;AACpB,EAAA,IAAI,EAAE;AACR,CAAC;AAED,SAASC,sBAAsBA,GAAG;AAChC,EAAA,IAAIxL,IAAI,EAAEwI,KAAK,EAAE6C,IAAI;AAErB,EAAA,IAAIb,KAAK,CAAC,GAAG,CAAC,EAAE;IACd,OAAOY,oBAAoB,EAAE;AAC/B;AAEA,EAAA,IAAIZ,KAAK,CAAC,GAAG,CAAC,EAAE;IACd,OAAOG,qBAAqB,EAAE;AAChC;AAEA,EAAA,IAAIH,KAAK,CAAC,GAAG,CAAC,EAAE;IACd,OAAOQ,sBAAsB,EAAE;AACjC;EAEAhL,IAAI,GAAG4B,SAAS,CAAC5B,IAAI;EACrB2B,KAAK,GAAGC,SAAS,CAACoE,KAAK;EAGvB,IAAIhG,IAAI,KAAK+B,eAAe,IAAIwJ,aAAa,CAAC3J,SAAS,CAACL,KAAK,CAAC,EAAE;IAC9D8J,IAAI,GAAGlC,gBAAgB,CAACT,GAAG,EAAE,CAACnH,KAAK,CAAC;GACrC,MAAM,IAAIvB,IAAI,KAAKoC,kBAAkB,IAAIpC,IAAI,KAAKkC,mBAAmB,EAAE;IACtE,IAAIN,SAAS,CAACmF,KAAK,EAAE;AACnBvB,MAAAA,UAAU,CAAC5D,SAAS,EAAE6B,yBAAyB,CAAC;AAClD;AACA4H,IAAAA,IAAI,GAAGhC,aAAa,CAACX,GAAG,EAAE,CAAC;AAC7B,GAAC,MAAM,IAAI1I,IAAI,KAAKgC,YAAY,EAAE;AAChC,IAAA,MAAM,IAAImC,KAAK,CAACP,QAAQ,CAAC;AAC3B,GAAC,MAAM,IAAI5D,IAAI,KAAK6B,mBAAmB,EAAE;IACvC2G,KAAK,GAAGE,GAAG,EAAE;AACbF,IAAAA,KAAK,CAACjH,KAAK,GAAIiH,KAAK,CAACjH,KAAK,KAAK,MAAO;AACtC8J,IAAAA,IAAI,GAAGhC,aAAa,CAACb,KAAK,CAAC;AAC7B,GAAC,MAAM,IAAIxI,IAAI,KAAKiC,gBAAgB,EAAE;IACpCuG,KAAK,GAAGE,GAAG,EAAE;IACbF,KAAK,CAACjH,KAAK,GAAG,IAAI;AAClB8J,IAAAA,IAAI,GAAGhC,aAAa,CAACb,KAAK,CAAC;GAC5B,MAAM,IAAIgC,KAAK,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,IAAI,CAAC,EAAE;AACpCa,IAAAA,IAAI,GAAGhC,aAAa,CAAChB,UAAU,EAAE,CAAC;AAClCM,IAAAA,IAAI,EAAE;AACR,GAAC,MAAM;AACL2B,IAAAA,eAAe,CAAC5B,GAAG,EAAE,CAAC;AACxB;AAEA,EAAA,OAAO2C,IAAI;AACb;;AAEA;;AAEA,SAASI,cAAcA,GAAG;EACxB,MAAMxC,IAAI,GAAG,EAAE;EAEfsB,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,EAAE;IACf,OAAO7I,KAAK,GAAGnB,MAAM,EAAE;AACrByI,MAAAA,IAAI,CAAC2B,IAAI,CAACC,0BAA0B,EAAE,CAAC;AACvC,MAAA,IAAIL,KAAK,CAAC,GAAG,CAAC,EAAE;AACd,QAAA;AACF;MACAD,MAAM,CAAC,GAAG,CAAC;AACb;AACF;EAEAA,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,OAAOtB,IAAI;AACb;AAEA,SAASyC,wBAAwBA,GAAG;EAClC/J,KAAK,GAAGC,SAAS,CAACoE,KAAK;AACvB,EAAA,MAAMwC,KAAK,GAAGE,GAAG,EAAE;AAEnB,EAAA,IAAI,CAACH,gBAAgB,CAACC,KAAK,CAAC,EAAE;IAC5B8B,eAAe,CAAC9B,KAAK,CAAC;AACxB;AAEA,EAAA,OAAOW,gBAAgB,CAACX,KAAK,CAACjH,KAAK,CAAC;AACtC;AAEA,SAASoK,sBAAsBA,GAAG;EAChCpB,MAAM,CAAC,GAAG,CAAC;EAEX,OAAOmB,wBAAwB,EAAE;AACnC;AAEA,SAASE,mBAAmBA,GAAG;EAC7BrB,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,MAAMc,IAAI,GAAGC,eAAe,EAAE;EAE9Bf,MAAM,CAAC,GAAG,CAAC;AAEX,EAAA,OAAOc,IAAI;AACb;AAEA,SAASQ,oCAAoCA,GAAG;AAC9C,EAAA,IAAIR,IAAI,EAAEpC,IAAI,EAAE7H,QAAQ;EAExBiK,IAAI,GAAGG,sBAAsB,EAAE;EAE/B,SAAS;AACP,IAAA,IAAIhB,KAAK,CAAC,GAAG,CAAC,EAAE;MACdpJ,QAAQ,GAAGuK,sBAAsB,EAAE;MACnCN,IAAI,GAAG9B,sBAAsB,CAAC,GAAG,EAAE8B,IAAI,EAAEjK,QAAQ,CAAC;AACpD,KAAC,MAAM,IAAIoJ,KAAK,CAAC,GAAG,CAAC,EAAE;MACrBvB,IAAI,GAAGwC,cAAc,EAAE;AACvBJ,MAAAA,IAAI,GAAGrC,oBAAoB,CAACqC,IAAI,EAAEpC,IAAI,CAAC;AACzC,KAAC,MAAM,IAAIuB,KAAK,CAAC,GAAG,CAAC,EAAE;MACrBpJ,QAAQ,GAAGwK,mBAAmB,EAAE;MAChCP,IAAI,GAAG9B,sBAAsB,CAAC,GAAG,EAAE8B,IAAI,EAAEjK,QAAQ,CAAC;AACpD,KAAC,MAAM;AACL,MAAA;AACF;AACF;AAEA,EAAA,OAAOiK,IAAI;AACb;;AAEA;;AAEA,SAASS,sBAAsBA,GAAG;AAChC,EAAA,MAAMT,IAAI,GAAGQ,oCAAoC,EAAE;AAEnD,EAAA,IAAIjK,SAAS,CAAC5B,IAAI,KAAKmC,eAAe,EAAE;IACtC,IAAKqI,KAAK,CAAC,IAAI,CAAC,IAAIA,KAAK,CAAC,IAAI,CAAC,EAAG;AAChC,MAAA,MAAM,IAAIrG,KAAK,CAACP,QAAQ,CAAC;AAC3B;AACF;AAEA,EAAA,OAAOyH,IAAI;AACb;;AAEA;;AAEA,SAASU,oBAAoBA,GAAG;EAC9B,IAAIvD,KAAK,EAAE6C,IAAI;EAEf,IAAIzJ,SAAS,CAAC5B,IAAI,KAAKmC,eAAe,IAAIP,SAAS,CAAC5B,IAAI,KAAKgC,YAAY,EAAE;IACzEqJ,IAAI,GAAGS,sBAAsB,EAAE;GAChC,MAAM,IAAItB,KAAK,CAAC,IAAI,CAAC,IAAIA,KAAK,CAAC,IAAI,CAAC,EAAE;AACrC,IAAA,MAAM,IAAIrG,KAAK,CAACP,QAAQ,CAAC;GAC1B,MAAM,IAAI4G,KAAK,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,GAAG,CAAC,IAAIA,KAAK,CAAC,GAAG,CAAC,EAAE;IAC/DhC,KAAK,GAAGE,GAAG,EAAE;IACb2C,IAAI,GAAGU,oBAAoB,EAAE;IAC7BV,IAAI,GAAGvB,qBAAqB,CAACtB,KAAK,CAACjH,KAAK,EAAE8J,IAAI,CAAC;AACjD,GAAC,MAAM,IAAIZ,YAAY,CAAC,QAAQ,CAAC,IAAIA,YAAY,CAAC,MAAM,CAAC,IAAIA,YAAY,CAAC,QAAQ,CAAC,EAAE;AACnF,IAAA,MAAM,IAAItG,KAAK,CAACP,QAAQ,CAAC;AAC3B,GAAC,MAAM;IACLyH,IAAI,GAAGS,sBAAsB,EAAE;AACjC;AAEA,EAAA,OAAOT,IAAI;AACb;AAEA,SAASW,gBAAgBA,CAACxD,KAAK,EAAE;EAC/B,IAAIyD,IAAI,GAAG,CAAC;EAEZ,IAAIzD,KAAK,CAACxI,IAAI,KAAKmC,eAAe,IAAIqG,KAAK,CAACxI,IAAI,KAAKgC,YAAY,EAAE;AACjE,IAAA,OAAO,CAAC;AACV;EAEA,QAAQwG,KAAK,CAACjH,KAAK;AACjB,IAAA,KAAK,IAAI;AACP0K,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,IAAI;AACPA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACNA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACNA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACNA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,KAAK;AACV,IAAA,KAAK,KAAK;AACRA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACR,IAAA,KAAK,GAAG;AACR,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,YAAY;AACjB,IAAA,KAAK,IAAI;AACPA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,IAAI;AACT,IAAA,KAAK,KAAK;AACRA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACR,IAAA,KAAK,GAAG;AACNA,MAAAA,IAAI,GAAG,CAAC;AACR,MAAA;AAEF,IAAA,KAAK,GAAG;AACR,IAAA,KAAK,GAAG;AACR,IAAA,KAAK,GAAG;AACNA,MAAAA,IAAI,GAAG,EAAE;AACT,MAAA;AAIJ;AAEA,EAAA,OAAOA,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,qBAAqBA,GAAG;AAC/B,EAAA,IAAIC,MAAM,EAAEC,OAAO,EAAEf,IAAI,EAAE7C,KAAK,EAAEyD,IAAI,EAAEI,KAAK,EAAEzL,KAAK,EAAEmI,QAAQ,EAAEpI,IAAI,EAAEN,CAAC;AAEvE8L,EAAAA,MAAM,GAAGvK,SAAS;EAClBjB,IAAI,GAAGoL,oBAAoB,EAAE;AAE7BvD,EAAAA,KAAK,GAAG5G,SAAS;AACjBqK,EAAAA,IAAI,GAAGD,gBAAgB,CAACxD,KAAK,CAAC;EAC9B,IAAIyD,IAAI,KAAK,CAAC,EAAE;AACd,IAAA,OAAOtL,IAAI;AACb;EACA6H,KAAK,CAACyD,IAAI,GAAGA,IAAI;AACjBvD,EAAAA,GAAG,EAAE;AAEL0D,EAAAA,OAAO,GAAG,CAACD,MAAM,EAAEvK,SAAS,CAAC;EAC7BhB,KAAK,GAAGmL,oBAAoB,EAAE;AAE9BM,EAAAA,KAAK,GAAG,CAAC1L,IAAI,EAAE6H,KAAK,EAAE5H,KAAK,CAAC;EAE5B,OAAO,CAACqL,IAAI,GAAGD,gBAAgB,CAACpK,SAAS,CAAC,IAAI,CAAC,EAAE;AAE/C;AACA,IAAA,OAAQyK,KAAK,CAAC7L,MAAM,GAAG,CAAC,IAAMyL,IAAI,IAAII,KAAK,CAACA,KAAK,CAAC7L,MAAM,GAAG,CAAC,CAAC,CAACyL,IAAK,EAAE;AACnErL,MAAAA,KAAK,GAAGyL,KAAK,CAACC,GAAG,EAAE;AACnBvD,MAAAA,QAAQ,GAAGsD,KAAK,CAACC,GAAG,EAAE,CAAC/K,KAAK;AAC5BZ,MAAAA,IAAI,GAAG0L,KAAK,CAACC,GAAG,EAAE;MAClBF,OAAO,CAACE,GAAG,EAAE;MACbjB,IAAI,GAAGvC,sBAAsB,CAACC,QAAQ,EAAEpI,IAAI,EAAEC,KAAK,CAAC;AACpDyL,MAAAA,KAAK,CAACzB,IAAI,CAACS,IAAI,CAAC;AAClB;;AAEA;IACA7C,KAAK,GAAGE,GAAG,EAAE;IACbF,KAAK,CAACyD,IAAI,GAAGA,IAAI;AACjBI,IAAAA,KAAK,CAACzB,IAAI,CAACpC,KAAK,CAAC;AACjB4D,IAAAA,OAAO,CAACxB,IAAI,CAAChJ,SAAS,CAAC;IACvByJ,IAAI,GAAGU,oBAAoB,EAAE;AAC7BM,IAAAA,KAAK,CAACzB,IAAI,CAACS,IAAI,CAAC;AAClB;;AAEA;AACAhL,EAAAA,CAAC,GAAGgM,KAAK,CAAC7L,MAAM,GAAG,CAAC;AACpB6K,EAAAA,IAAI,GAAGgB,KAAK,CAAChM,CAAC,CAAC;EACf+L,OAAO,CAACE,GAAG,EAAE;EACb,OAAOjM,CAAC,GAAG,CAAC,EAAE;IACZ+L,OAAO,CAACE,GAAG,EAAE;IACbjB,IAAI,GAAGvC,sBAAsB,CAACuD,KAAK,CAAChM,CAAC,GAAG,CAAC,CAAC,CAACkB,KAAK,EAAE8K,KAAK,CAAChM,CAAC,GAAG,CAAC,CAAC,EAAEgL,IAAI,CAAC;AACrEhL,IAAAA,CAAC,IAAI,CAAC;AACR;AAEA,EAAA,OAAOgL,IAAI;AACb;;AAEA;;AAEA,SAASR,0BAA0BA,GAAG;AACpC,EAAA,IAAIQ,IAAI,EAAEpK,UAAU,EAAEC,SAAS;EAE/BmK,IAAI,GAAGa,qBAAqB,EAAE;AAE9B,EAAA,IAAI1B,KAAK,CAAC,GAAG,CAAC,EAAE;AACd9B,IAAAA,GAAG,EAAE;IACLzH,UAAU,GAAG4J,0BAA0B,EAAE;IACzCN,MAAM,CAAC,GAAG,CAAC;IACXrJ,SAAS,GAAG2J,0BAA0B,EAAE;IAExCQ,IAAI,GAAGnC,2BAA2B,CAACmC,IAAI,EAAEpK,UAAU,EAAEC,SAAS,CAAC;AACjE;AAEA,EAAA,OAAOmK,IAAI;AACb;;AAEA;;AAEA,SAASC,eAAeA,GAAG;AACzB,EAAA,MAAMD,IAAI,GAAGR,0BAA0B,EAAE;AAEzC,EAAA,IAAIL,KAAK,CAAC,GAAG,CAAC,EAAE;AACd,IAAA,MAAM,IAAIrG,KAAK,CAACP,QAAQ,CAAC,CAAC;AAC5B;AAEA,EAAA,OAAOyH,IAAI;AACb;AAEe,eAAA,EAAShG,IAAI,EAAE;AAC5B3D,EAAAA,MAAM,GAAG2D,IAAI;AACb1D,EAAAA,KAAK,GAAG,CAAC;EACTnB,MAAM,GAAGkB,MAAM,CAAClB,MAAM;AACtBoB,EAAAA,SAAS,GAAG,IAAI;AAEhB+G,EAAAA,IAAI,EAAE;AAEN,EAAA,MAAM0C,IAAI,GAAGC,eAAe,EAAE;AAE9B,EAAA,IAAI1J,SAAS,CAAC5B,IAAI,KAAK8B,QAAQ,EAAE;AAC/B,IAAA,MAAM,IAAIqC,KAAK,CAAC,kCAAkC,CAAC;AACrD;AACA,EAAA,OAAOkH,IAAI;AACb;;ACh9CA,gBAAe;AACbkB,EAAAA,GAAG,EAAQ,KAAK;AAChBC,EAAAA,CAAC,EAAU,QAAQ;AACnBC,EAAAA,GAAG,EAAQ,UAAU;AACrBC,EAAAA,IAAI,EAAO,WAAW;AACtBC,EAAAA,KAAK,EAAM,YAAY;AACvBC,EAAAA,MAAM,EAAK,aAAa;AACxBC,EAAAA,EAAE,EAAS,SAAS;AACpBC,EAAAA,OAAO,EAAI,cAAc;AACzBC,EAAAA,KAAK,EAAM,YAAY;AACvBC,EAAAA,SAAS,EAAE,kBAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACb,CAAC;;ACVc,kBAAA,EAASC,OAAO,EAAE;EAE/B,SAASC,MAAMA,CAAC/D,IAAI,EAAEH,IAAI,EAAEmE,IAAI,EAAEpN,IAAI,EAAE;IACtC,IAAIqN,GAAG,GAAGH,OAAO,CAACjE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,IAAA,IAAImE,IAAI,EAAE;AACRC,MAAAA,GAAG,GAAGD,IAAI,GAAG,GAAG,GAAGC,GAAG,GAAG,GAAG;AAC5B,MAAA,IAAID,IAAI,CAACE,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,EAAED,GAAG,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAG;AAC9D;AACA,IAAA,OAAOA,GAAG,GAAG,GAAG,GAAGjE,IAAI,IAAIpJ,IAAI,GAAG,CAAC,GAAG,EAAE,GAAGA,IAAI,KAAK,CAAC,GACnD,IAAI,GACJ,GAAG,GAAGiJ,IAAI,CAAChD,KAAK,CAAC,CAAC,CAAC,CAACgF,GAAG,CAACiC,OAAO,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACrD;AAEA,EAAA,SAASC,EAAEA,CAACpE,IAAI,EAAEgE,IAAI,EAAEpN,IAAI,EAAE;IAC5B,OAAOiJ,IAAI,IAAIkE,MAAM,CAAC/D,IAAI,EAAEH,IAAI,EAAEmE,IAAI,EAAEpN,IAAI,CAAC;AAC/C;EAEA,MAAMyN,IAAI,GAAG,UAAU;AACjBC,IAAAA,MAAM,GAAG,QAAQ;AACjBC,IAAAA,MAAM,GAAG,QAAQ;EAEvB,OAAO;AACL;AACAC,IAAAA,KAAK,EAAK,cAAc;AACxBC,IAAAA,QAAQ,EAAE,iBAAiB;AAC3BC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,IAAI,EAAM,WAAW;AACrBC,IAAAA,IAAI,EAAM,WAAW;AACrBC,IAAAA,IAAI,EAAM,WAAW;AACrBC,IAAAA,KAAK,EAAK,YAAY;AACtBC,IAAAA,IAAI,EAAM,WAAW;AACrBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,KAAK,EAAK,YAAY;AACtBC,IAAAA,KAAK,EAAK,YAAY;AACtBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,MAAM,EAAI,aAAa;AACvBC,IAAAA,KAAK,EAAK,YAAY;AACtBC,IAAAA,GAAG,EAAO,UAAU;AACpBC,IAAAA,IAAI,EAAM,WAAW;AACrBC,IAAAA,GAAG,EAAO,UAAU;AAEpBC,IAAAA,KAAK,EAAE,UAAShG,IAAI,EAAE;MACpB,IAAIA,IAAI,CAACzI,MAAM,GAAG,CAAC,EAAEwJ,KAAK,CAAC,sCAAsC,CAAC;MAClE,IAAIf,IAAI,CAACzI,MAAM,GAAG,CAAC,EAAEwJ,KAAK,CAAC,uCAAuC,CAAC;AACnE,MAAA,MAAMkF,CAAC,GAAGjG,IAAI,CAACgC,GAAG,CAACiC,OAAO,CAAC;MAC3B,OAAO,WAAW,GAACgC,CAAC,CAAC,CAAC,CAAC,GAAC,aAAa,GAACA,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAACA,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI;KACzD;AAED;AACAC,IAAAA,GAAG,EAAc,UAAU;AAC3BC,IAAAA,GAAG,EAAc,UAAU;AAC3BC,IAAAA,QAAQ,EAAS5B,IAAI;IACrB6B,IAAI,EAAa9B,EAAE,CAAC,SAAS,EAAEC,IAAI,EAAE,CAAC,CAAC;IACvC8B,GAAG,EAAc/B,EAAE,CAAC,QAAQ,EAAEC,IAAI,EAAE,CAAC,CAAC;IACtC+B,IAAI,EAAahC,EAAE,CAAC,aAAa,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC3CgC,KAAK,EAAYjC,EAAE,CAAC,UAAU,EAAEC,IAAI,EAAE,CAAC,CAAC;IACxCiC,KAAK,EAAYlC,EAAE,CAAC,UAAU,EAAEC,IAAI,EAAE,CAAC,CAAC;IACxCkC,OAAO,EAAUnC,EAAE,CAAC,YAAY,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC1CmC,OAAO,EAAUpC,EAAE,CAAC,YAAY,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC1CoC,YAAY,EAAKrC,EAAE,CAAC,iBAAiB,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC/CqC,IAAI,EAAatC,EAAE,CAAC,SAAS,EAAEC,IAAI,EAAE,CAAC,CAAC;IACvCsC,cAAc,EAAGvC,EAAE,CAAC,mBAAmB,EAAEC,IAAI,EAAE,CAAC,CAAC;IACjDuC,OAAO,EAAUxC,EAAE,CAAC,YAAY,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC1CwC,MAAM,EAAWzC,EAAE,CAAC,WAAW,EAAEC,IAAI,EAAE,CAAC,CAAC;IACzCyC,OAAO,EAAU1C,EAAE,CAAC,gBAAgB,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC9C0C,QAAQ,EAAS3C,EAAE,CAAC,aAAa,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC3C2C,QAAQ,EAAS5C,EAAE,CAAC,aAAa,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC3C4C,UAAU,EAAO7C,EAAE,CAAC,eAAe,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC7C6C,UAAU,EAAO9C,EAAE,CAAC,eAAe,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC7C8C,eAAe,EAAE/C,EAAE,CAAC,oBAAoB,EAAEC,IAAI,EAAE,CAAC,CAAC;AAElD;IACAjN,MAAM,EAAOgN,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC;AAEnC;AACAvG,IAAAA,UAAU,EAAG,YAAY;AACzBJ,IAAAA,QAAQ,EAAK,UAAU;IACvB2J,KAAK,EAAQhD,EAAE,CAAC,aAAa,EAAEE,MAAM,EAAE,CAAC,CAAC;IACzC+C,KAAK,EAAQjD,EAAE,CAAC,aAAa,EAAEE,MAAM,EAAE,CAAC,CAAC;AACzCgD,IAAAA,SAAS,EAAIlD,EAAE,CAAC,WAAW,EAAEE,MAAM,CAAC;AACpCiD,IAAAA,KAAK,EAAQnD,EAAE,CAAC,OAAO,EAAEE,MAAM,CAAC;IAChCkD,IAAI,EAASpD,EAAE,CAAC,MAAM,EAAEE,MAAM,EAAE,CAAC,CAAC;AAClC;AACAmD,IAAAA,IAAI,EAAS,MAAM;AACnBC,IAAAA,IAAI,EAAS,MAAM;AAEnB;AACAC,IAAAA,MAAM,EAAGpD,MAAM;AACf3M,IAAAA,IAAI,EAAKwM,EAAE,CAAC,MAAM,EAAEG,MAAM,CAAC;AAE3B;AACAqD,IAAAA,EAAE,EAAE,UAAS/H,IAAI,EAAE;MACf,IAAIA,IAAI,CAACzI,MAAM,GAAG,CAAC,EAAEwJ,KAAK,CAAC,mCAAmC,CAAC;MAC/D,IAAIf,IAAI,CAACzI,MAAM,GAAG,CAAC,EAAEwJ,KAAK,CAAC,oCAAoC,CAAC;AAChE,MAAA,MAAMkF,CAAC,GAAGjG,IAAI,CAACgC,GAAG,CAACiC,OAAO,CAAC;MAC3B,OAAO,GAAG,GAACgC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAACA,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAACA,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG;AACvC;GACH;AACH;;ACpGA,SAAS+B,WAAWA,CAACC,CAAC,EAAE;EACtB,MAAM5Q,CAAC,GAAG4Q,CAAC,IAAIA,CAAC,CAAC1Q,MAAM,GAAG,CAAC;AAC3B,EAAA,OAAOF,CAAC,KACH4Q,CAAC,CAAC,CAAC,CAAC,KAAG,GAAG,IAAIA,CAAC,CAAC5Q,CAAC,CAAC,KAAG,GAAG,IACxB4Q,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,IAAIA,CAAC,CAAC5Q,CAAC,CAAC,KAAG,IAAK,CAC7B,GAAG4Q,CAAC,CAACjL,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGiL,CAAC;AAC1B;AAEe,gBAAA,EAASC,GAAG,EAAE;AAC3BA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAE;AAEf,EAAA,MAAMC,OAAO,GAAGD,GAAG,CAACC,OAAO,GAAGC,KAAK,CAACF,GAAG,CAACC,OAAO,CAAC,GAAG,EAAE;AAC/CE,IAAAA,SAAS,GAAGH,GAAG,CAACG,SAAS,GAAGD,KAAK,CAACF,GAAG,CAACG,SAAS,CAAC,GAAG,EAAE;AACrDC,IAAAA,SAAS,GAAGJ,GAAG,CAACI,SAAS,IAAIC,SAAS;IACtCC,SAAS,GAAG,CAACN,GAAG,CAACM,SAAS,IAAIC,SAAS,EAAExR,KAAK,CAAC;IAC/CyR,SAAS,GAAGR,GAAG,CAACQ,SAAS;IACzBC,QAAQ,GAAGT,GAAG,CAACS,QAAQ;AACvBC,IAAAA,YAAY,GAAGC,UAAU,CAACH,SAAS,CAAC,GAChCA,SAAS,GACT9L,EAAE,IAAI,CAAA,EAAG8L,SAAS,CAAA,EAAA,EAAK9L,EAAE,CAAI,EAAA,CAAA;EAEvC,IAAIkM,OAAO,GAAG,EAAE;IACZC,MAAM,GAAG,EAAE;AACXC,IAAAA,WAAW,GAAG,CAAC;EAEnB,SAAS/R,KAAKA,CAACgS,GAAG,EAAE;AAClB,IAAA,IAAIC,QAAQ,CAACD,GAAG,CAAC,EAAE,OAAOA,GAAG;AAC7B,IAAA,MAAME,SAAS,GAAGC,UAAU,CAACH,GAAG,CAAClS,IAAI,CAAC;IACtC,IAAIoS,SAAS,IAAI,IAAI,EAAEpI,KAAK,CAAC,oBAAoB,GAAGkI,GAAG,CAAClS,IAAI,CAAC;IAC7D,OAAOoS,SAAS,CAACF,GAAG,CAAC;AACvB;AAEA,EAAA,MAAMG,UAAU,GAAG;AACjBjT,IAAAA,OAAO,EAAEkB,CAAC,IAAIA,CAAC,CAACgJ,GAAG;IAEnBhK,UAAU,EAAEgB,CAAC,IAAI;AACf,MAAA,MAAMuF,EAAE,GAAGvF,CAAC,CAAC8I,IAAI;MACjB,IAAI6I,WAAW,GAAG,CAAC,EAAE;AACnB,QAAA,OAAOpM,EAAE;OACV,MAAM,IAAIM,cAAc,CAACmL,SAAS,EAAEzL,EAAE,CAAC,EAAE;AACxC,QAAA,OAAOmE,KAAK,CAAC,sBAAsB,GAAGnE,EAAE,CAAC;OAC1C,MAAM,IAAIM,cAAc,CAACoL,SAAS,EAAE1L,EAAE,CAAC,EAAE;QACxC,OAAO0L,SAAS,CAAC1L,EAAE,CAAC;OACrB,MAAM,IAAIM,cAAc,CAACiL,OAAO,EAAEvL,EAAE,CAAC,EAAE;AACtC,QAAA,OAAOA,EAAE;AACX,OAAC,MAAM;AACLkM,QAAAA,OAAO,CAAClM,EAAE,CAAC,GAAG,CAAC;QACf,OAAOgM,YAAY,CAAChM,EAAE,CAAC;AACzB;KACD;IAEDjG,gBAAgB,EAAEU,CAAC,IAAI;AACnB,MAAA,MAAMgS,CAAC,GAAG,CAAChS,CAAC,CAACmJ,QAAQ;AACf8I,QAAAA,CAAC,GAAGrS,KAAK,CAACI,CAAC,CAACa,MAAM,CAAC;AACzB,MAAA,IAAImR,CAAC,EAAEL,WAAW,IAAI,CAAC;AACvB,MAAA,MAAMO,CAAC,GAAGtS,KAAK,CAACI,CAAC,CAACc,QAAQ,CAAC;MAC3B,IAAImR,CAAC,KAAKX,QAAQ,EAAE;AAClB;AACAI,QAAAA,MAAM,CAACf,WAAW,CAACuB,CAAC,CAAC,CAAC,GAAG,CAAC;AAC5B;AACA,MAAA,IAAIF,CAAC,EAAEL,WAAW,IAAI,CAAC;AACvB,MAAA,OAAOM,CAAC,IAAID,CAAC,GAAG,GAAG,GAACE,CAAC,GAAG,GAAG,GAACA,CAAC,GAAC,GAAG,CAAC;KACnC;IAEH/S,cAAc,EAAEa,CAAC,IAAI;AACjB,MAAA,IAAIA,CAAC,CAACO,MAAM,CAACb,IAAI,KAAK,YAAY,EAAE;QAClCgK,KAAK,CAAC,uBAAuB,GAAG1J,CAAC,CAACO,MAAM,CAACb,IAAI,CAAC;AAChD;AACA,MAAA,MAAMa,MAAM,GAAGP,CAAC,CAACO,MAAM,CAACuI,IAAI;QACtBH,IAAI,GAAG3I,CAAC,CAACS,SAAS;QAClByM,EAAE,GAAGrH,cAAc,CAACsL,SAAS,EAAE5Q,MAAM,CAAC,IAAI4Q,SAAS,CAAC5Q,MAAM,CAAC;MACjE,IAAI,CAAC2M,EAAE,EAAExD,KAAK,CAAC,yBAAyB,GAAGnJ,MAAM,CAAC;MAClD,OAAOiR,UAAU,CAACtE,EAAE,CAAC,GACjBA,EAAE,CAACvE,IAAI,CAAC,GACRuE,EAAE,GAAG,GAAG,GAAGvE,IAAI,CAACgC,GAAG,CAAC/K,KAAK,CAAC,CAACqN,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;KAC/C;AAEHhO,IAAAA,eAAe,EAAEe,CAAC,IACd,GAAG,GAAGA,CAAC,CAACI,QAAQ,CAACuK,GAAG,CAAC/K,KAAK,CAAC,CAACqN,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;IAE/C/N,gBAAgB,EAAEc,CAAC,IACf,GAAG,GAAGJ,KAAK,CAACI,CAAC,CAACK,IAAI,CAAC,GAAG,GAAG,GAAGL,CAAC,CAACyI,QAAQ,GAAG,GAAG,GAAG7I,KAAK,CAACI,CAAC,CAACM,KAAK,CAAC,GAAG,GAAG;AAEvEd,IAAAA,eAAe,EAAEQ,CAAC,IACd,GAAG,GAAGA,CAAC,CAACyI,QAAQ,GAAG7I,KAAK,CAACI,CAAC,CAACkB,QAAQ,CAAC,GAAG,GAAG;AAE9C9B,IAAAA,qBAAqB,EAAEY,CAAC,IACpB,GAAG,GAAGJ,KAAK,CAACI,CAAC,CAACU,IAAI,CAAC,GACjB,GAAG,GAAGd,KAAK,CAACI,CAAC,CAACW,UAAU,CAAC,GACzB,GAAG,GAAGf,KAAK,CAACI,CAAC,CAACY,SAAS,CAAC,GACxB,GAAG;IAETvB,iBAAiB,EAAEW,CAAC,IAChB,GAAG,GAAGJ,KAAK,CAACI,CAAC,CAACK,IAAI,CAAC,GAAGL,CAAC,CAACyI,QAAQ,GAAG7I,KAAK,CAACI,CAAC,CAACM,KAAK,CAAC,GAAG,GAAG;AAE3Df,IAAAA,gBAAgB,EAAES,CAAC,IACf,GAAG,GAAGA,CAAC,CAACe,UAAU,CAAC4J,GAAG,CAAC/K,KAAK,CAAC,CAACqN,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;IAEjDlO,QAAQ,EAAEiB,CAAC,IAAI;AACX2R,MAAAA,WAAW,IAAI,CAAC;AAChB,MAAA,MAAMQ,CAAC,GAAGvS,KAAK,CAACI,CAAC,CAACgB,GAAG,CAAC;AACtB2Q,MAAAA,WAAW,IAAI,CAAC;MAChB,OAAOQ,CAAC,GAAG,GAAG,GAAGvS,KAAK,CAACI,CAAC,CAACiB,KAAK,CAAC;AACjC;GACH;EAED,SAAS2L,OAAOA,CAACgF,GAAG,EAAE;AACpB,IAAA,MAAMQ,MAAM,GAAG;AACbrN,MAAAA,IAAI,EAAKnF,KAAK,CAACgS,GAAG,CAAC;AACnBH,MAAAA,OAAO,EAAE5G,MAAM,CAACwH,IAAI,CAACZ,OAAO,CAAC;AAC7BC,MAAAA,MAAM,EAAG7G,MAAM,CAACwH,IAAI,CAACX,MAAM;KAC5B;IACDD,OAAO,GAAG,EAAE;IACZC,MAAM,GAAG,EAAE;AACX,IAAA,OAAOU,MAAM;AACf;EAEAxF,OAAO,CAACuE,SAAS,GAAGA,SAAS;EAC7BvE,OAAO,CAACqE,SAAS,GAAGA,SAAS;AAE7B,EAAA,OAAOrE,OAAO;AAChB;;;;"}