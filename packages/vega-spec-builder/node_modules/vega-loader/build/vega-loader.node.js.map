{"version":3,"file":"vega-loader.node.js","sources":["../src/loader.js","../src/type.js","../src/formats/dsv.js","../src/formats/json.js","../src/formats/topojson.js","../src/formats/index.js","../src/read.js","../index.js"],"sourcesContent":["import {error, extend, isFunction, stringValue} from 'vega-util';\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nconst protocol_re = /^(data:|([A-Za-z]+:)?\\/\\/)/;\n\n// Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\nconst allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\nconst whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\n\n// Special treatment in node.js for the file: protocol\nconst fileProtocol = 'file://';\n\n/**\n * Factory for a loader constructor that provides methods for requesting\n * files from either the network or disk, and for sanitizing request URIs.\n * @param {function} fetch - The Fetch API for HTTP network requests.\n *   If null or undefined, HTTP loading will be disabled.\n * @param {object} fs - The file system interface for file loading.\n *   If null or undefined, local file loading will be disabled.\n * @return {function} A loader constructor with the following signature:\n *   param {object} [options] - Optional default loading options to use.\n *   return {object} - A new loader instance.\n */\nexport default function(fetch, fs) {\n  return options => ({\n    options: options || {},\n    sanitize: sanitize,\n    load: load,\n    fileAccess: !!fs,\n    file: fileLoader(fs),\n    http: httpLoader(fetch)\n  });\n}\n\n/**\n * Load an external resource, typically either from the web or from the local\n * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n * then calls either {@link http} (for web requests) or {@link file} (for\n * filesystem loading).\n * @param {string} uri - The resource indicator (e.g., URL or filename).\n * @param {object} [options] - Optional loading options. These options will\n *   override any existing default options.\n * @return {Promise} - A promise that resolves to the loaded content.\n */\nasync function load(uri, options) {\n  const opt = await this.sanitize(uri, options),\n        url = opt.href;\n\n  return opt.localFile\n    ? this.file(url)\n    : this.http(url, options);\n}\n\n/**\n * URI sanitizer function.\n * @param {string} uri - The uri (url or filename) to check.\n * @param {object} options - An options hash.\n * @return {Promise} - A promise that resolves to an object containing\n *  sanitized uri data, or rejects it the input uri is deemed invalid.\n *  The properties of the resolved object are assumed to be\n *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n *  provided by the 'href' property of the returned object.\n */\nasync function sanitize(uri, options) {\n  options = extend({}, this.options, options);\n\n  const fileAccess = this.fileAccess,\n        result = {href: null};\n\n  let isFile, loadFile, base;\n\n  const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n\n  if (uri == null || typeof uri !== 'string' || !isAllowed) {\n    error('Sanitize failure, invalid URI: ' + stringValue(uri));\n  }\n\n  const hasProtocol = protocol_re.test(uri);\n\n  // if relative url (no protocol/host), prepend baseURL\n  if ((base = options.baseURL) && !hasProtocol) {\n    // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    if (!uri.startsWith('/') && !base.endsWith('/')) {\n      uri = '/' + uri;\n    }\n    uri = base + uri;\n  }\n\n  // should we load from file system?\n  loadFile = (isFile = uri.startsWith(fileProtocol))\n    || options.mode === 'file'\n    || options.mode !== 'http' && !hasProtocol && fileAccess;\n\n  if (isFile) {\n    // strip file protocol\n    uri = uri.slice(fileProtocol.length);\n  } else if (uri.startsWith('//')) {\n    if (options.defaultProtocol === 'file') {\n      // if is file, strip protocol and set loadFile flag\n      uri = uri.slice(2);\n      loadFile = true;\n    } else {\n      // if relative protocol (starts with '//'), prepend default protocol\n      uri = (options.defaultProtocol || 'http') + ':' + uri;\n    }\n  }\n\n  // set non-enumerable mode flag to indicate local file load\n  Object.defineProperty(result, 'localFile', {value: !!loadFile});\n\n  // set uri\n  result.href = uri;\n\n  // set default result target, if specified\n  if (options.target) {\n    result.target = options.target + '';\n  }\n\n  // set default result rel, if specified (#1542)\n  if (options.rel) {\n    result.rel = options.rel + '';\n  }\n\n  // provide control over cross-origin image handling (#2238)\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n  if (options.context === 'image' && options.crossOrigin) {\n    result.crossOrigin = options.crossOrigin + '';\n  }\n\n  // return\n  return result;\n}\n\n/**\n * File system loader factory.\n * @param {object} fs - The file system interface.\n * @return {function} - A file loader with the following signature:\n *   param {string} filename - The file system path to load.\n *   param {string} filename - The file system path to load.\n *   return {Promise} A promise that resolves to the file contents.\n */\nfunction fileLoader(fs) {\n  return fs\n    ? filename => new Promise((accept, reject) => {\n        fs.readFile(filename, (error, data) => {\n          if (error) reject(error);\n          else accept(data);\n        });\n      })\n    : fileReject;\n}\n\n/**\n * Default file system loader that simply rejects.\n */\nasync function fileReject() {\n  error('No file system access.');\n}\n\n/**\n * HTTP request handler factory.\n * @param {function} fetch - The Fetch API method.\n * @return {function} - An http loader with the following signature:\n *   param {string} url - The url to request.\n *   param {object} options - An options hash.\n *   return {Promise} - A promise that resolves to the file contents.\n */\nfunction httpLoader(fetch) {\n  return fetch\n    ? async function(url, options) {\n        const opt = extend({}, this.options.http, options),\n              type = options && options.response,\n              response = await fetch(url, opt);\n\n        return !response.ok\n          ? error(response.status + '' + response.statusText)\n          : isFunction(response[type]) ? response[type]()\n          : response.text();\n      }\n    : httpReject;\n}\n\n/**\n * Default http request handler that simply rejects.\n */\nasync function httpReject() {\n  error('No HTTP fetch method available.');\n}\n","import {identity, toBoolean, toDate, toNumber, toString} from 'vega-util';\n\nconst isValid = _ => _ != null && _ === _;\n\nconst isBoolean = _ => _ === 'true'\n  || _ === 'false'\n  || _ === true\n  || _ === false;\n\nconst isDate = _ => !Number.isNaN(Date.parse(_));\n\nconst isNumber = _ => !Number.isNaN(+_) && !(_ instanceof Date);\n\nconst isInteger = _ => isNumber(_) && Number.isInteger(+_);\n\nexport const typeParsers = {\n  boolean: toBoolean,\n  integer: toNumber,\n  number:  toNumber,\n  date:    toDate,\n  string:  toString,\n  unknown: identity\n};\n\nconst typeTests = [\n  isBoolean,\n  isInteger,\n  isNumber,\n  isDate\n];\n\nconst typeList = [\n  'boolean',\n  'integer',\n  'number',\n  'date'\n];\n\nexport function inferType(values, field) {\n  if (!values || !values.length) return 'unknown';\n\n  const n = values.length,\n        m = typeTests.length,\n        a = typeTests.map((_, i) => i + 1);\n\n  for (let i = 0, t = 0, j, value; i < n; ++i) {\n    value = field ? values[i][field] : values[i];\n    for (j = 0; j < m; ++j) {\n      if (a[j] && isValid(value) && !typeTests[j](value)) {\n        a[j] = 0;\n        ++t;\n        if (t === typeTests.length) return 'string';\n      }\n    }\n  }\n\n  return typeList[\n    a.reduce((u, v) => u === 0 ? v : u, 0) - 1\n  ];\n}\n\nexport function inferTypes(data, fields) {\n  return fields.reduce((types, field) => {\n    types[field] = inferType(data, field);\n    return types;\n  }, {});\n}\n","import {dsvFormat} from 'd3-dsv';\nimport {extend, stringValue} from 'vega-util';\n\nexport function delimitedFormat(delimiter) {\n  const parse = function(data, format) {\n    const delim = {delimiter: delimiter};\n    return dsv(data, format ? extend(format, delim) : delim);\n  };\n\n  parse.responseType = 'text';\n\n  return parse;\n}\n\nexport default function dsv(data, format) {\n  if (format.header) {\n    data = format.header\n      .map(stringValue)\n      .join(format.delimiter) + '\\n' + data;\n  }\n  return dsvFormat(format.delimiter).parse(data + '');\n}\n\ndsv.responseType = 'text';\n","import {\n  field, identity, isArray, isFunction, isIterable, isObject\n} from 'vega-util';\n\nfunction isBuffer(_) {\n  return (typeof Buffer === 'function' && isFunction(Buffer.isBuffer))\n    ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = (format && format.property) ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data)\n    ? parseJSON(prop(data), format)\n    : prop(JSON.parse(data));\n}\n\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  if (!isArray(data) && isIterable(data)) {\n    data = [...data];\n  }\n  return (format && format.copy)\n    ? JSON.parse(JSON.stringify(data))\n    : data;\n}\n","import json from './json.js';\nimport {feature, mesh} from 'topojson-client';\nimport {error} from 'vega-util';\n\nconst filters = {\n  interior: (a, b) => a !== b,\n  exterior: (a, b) => a === b\n};\n\nexport default function topojson(data, format) {\n  let method, object, property, filter;\n  data = json(data, format);\n\n  if (format && format.feature) {\n    method = feature;\n    property = format.feature;\n  } else if (format && format.mesh) {\n    method = mesh;\n    property = format.mesh;\n    filter = filters[format.filter];\n  } else {\n    error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  object = (object = data.objects[property])\n    ? method(data, object, filter)\n    : error('Invalid TopoJSON object: ' + property);\n\n  return object && object.features || [object];\n}\n\ntopojson.responseType = 'json';\n","import {delimitedFormat, default as dsv} from './dsv.js';\nimport json from './json.js';\nimport topojson from './topojson.js';\nimport {hasOwnProperty} from 'vega-util';\n\nexport const format = {\n  dsv: dsv,\n  csv: delimitedFormat(','),\n  tsv: delimitedFormat('\\t'),\n  json: json,\n  topojson: topojson\n};\n\nexport function formats(name, reader) {\n  if (arguments.length > 1) {\n    format[name] = reader;\n    return this;\n  } else {\n    return hasOwnProperty(format, name) ? format[name] : null;\n  }\n}\n\nexport function responseType(type) {\n  const f = formats(type);\n  return f && f.responseType || 'text';\n}\n","import {inferTypes, typeParsers} from './type.js';\nimport {formats} from './formats/index.js';\nimport {timeFormatDefaultLocale} from 'vega-format';\nimport {error, hasOwnProperty} from 'vega-util';\n\nexport default function(data, schema, timeParser, utcParser) {\n  schema = schema || {};\n\n  const reader = formats(schema.type || 'json');\n  if (!reader) error('Unknown data format type: ' + schema.type);\n\n  data = reader(data, schema);\n  if (schema.parse) parse(data, schema.parse, timeParser, utcParser);\n\n  if (hasOwnProperty(data, 'columns')) delete data.columns;\n  return data;\n}\n\nfunction parse(data, types, timeParser, utcParser) {\n  if (!data.length) return; // early exit for empty data\n\n  const locale = timeFormatDefaultLocale();\n  timeParser = timeParser || locale.timeParse;\n  utcParser = utcParser || locale.utcParse;\n\n  let fields = data.columns || Object.keys(data[0]),\n      datum, field, i, j, n, m;\n\n  if (types === 'auto') types = inferTypes(data, fields);\n\n  fields = Object.keys(types);\n  const parsers = fields.map(field => {\n    const type = types[field];\n    let parts, pattern;\n\n    if (type && (type.startsWith('date:') || type.startsWith('utc:'))) {\n      parts = type.split(/:(.+)?/, 2);  // split on first :\n      pattern = parts[1];\n\n      if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n          (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n        pattern = pattern.slice(1, -1);\n      }\n\n      const parse = parts[0] === 'utc' ? utcParser : timeParser;\n      return parse(pattern);\n    }\n\n    if (!typeParsers[type]) {\n      throw Error('Illegal format pattern: ' + field + ':' + type);\n    }\n\n    return typeParsers[type];\n  });\n\n  for (i=0, n=data.length, m=fields.length; i<n; ++i) {\n    datum = data[i];\n    for (j=0; j<m; ++j) {\n      field = fields[j];\n      datum[field] = parsers[j](datum[field]);\n    }\n  }\n}\n","import fetch from 'node-fetch';\nimport fs from 'fs';\nimport loaderFactory from './src/loader.js';\n\nexport const loader = loaderFactory(\n  fetch,\n  fs\n);\n\nexport {\n  default as read\n} from './src/read.js';\n\nexport {\n  inferType,\n  inferTypes,\n  typeParsers\n} from './src/type.js';\n\nexport {\n  format,\n  formats,\n  responseType\n} from './src/formats/index.js';\n"],"names":["protocol_re","allowed_re","whitespace_re","fileProtocol","fetch","fs","options","sanitize","load","fileAccess","file","fileLoader","http","httpLoader","uri","opt","url","href","localFile","extend","result","isFile","loadFile","base","isAllowed","test","replace","error","stringValue","hasProtocol","baseURL","startsWith","endsWith","mode","slice","length","defaultProtocol","Object","defineProperty","value","target","rel","context","crossOrigin","filename","Promise","accept","reject","readFile","data","fileReject","type","response","ok","status","statusText","isFunction","text","httpReject","isValid","_","isBoolean","isDate","Number","isNaN","Date","parse","isNumber","isInteger","typeParsers","boolean","toBoolean","integer","toNumber","number","date","toDate","string","toString","unknown","identity","typeTests","typeList","inferType","values","field","n","m","a","map","i","t","j","reduce","u","v","inferTypes","fields","types","delimitedFormat","delimiter","format","delim","dsv","responseType","header","join","dsvFormat","isBuffer","Buffer","json","prop","property","isObject","parseJSON","JSON","isArray","isIterable","copy","stringify","filters","interior","b","exterior","topojson","method","object","filter","feature","mesh","objects","features","csv","tsv","formats","name","reader","arguments","hasOwnProperty","f","schema","timeParser","utcParser","columns","locale","timeFormatDefaultLocale","timeParse","utcParse","keys","datum","parsers","parts","pattern","split","Error","loader","loaderFactory"],"mappings":"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"}