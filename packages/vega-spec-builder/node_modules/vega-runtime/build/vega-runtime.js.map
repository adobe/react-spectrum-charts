{"version":3,"file":"vega-runtime.js","sources":["../src/dataflow.js","../src/util.js","../src/expression.js","../src/operator.js","../src/parameters.js","../src/stream.js","../src/update.js","../src/state.js","../src/context.js"],"sourcesContent":["/**\n * Parse a serialized dataflow specification.\n */\nexport default function(spec) {\n  const ctx = this,\n        operators = spec.operators || [];\n\n  // parse background\n  if (spec.background) {\n    ctx.background = spec.background;\n  }\n\n  // parse event configuration\n  if (spec.eventConfig) {\n    ctx.eventConfig = spec.eventConfig;\n  }\n\n  // parse locale configuration\n  if (spec.locale) {\n    ctx.locale = spec.locale;\n  }\n\n  // parse operators\n  operators.forEach(entry => ctx.parseOperator(entry));\n\n  // parse operator parameters\n  operators.forEach(entry => ctx.parseOperatorParameters(entry));\n\n  // parse streams\n  (spec.streams || []).forEach(entry => ctx.parseStream(entry));\n\n  // parse updates\n  (spec.updates || []).forEach(entry => ctx.parseUpdate(entry));\n\n  return ctx.resolve();\n}\n","import {toSet} from 'vega-util';\n\nconst Skip = toSet(['rule']),\n      Swap = toSet(['group', 'image', 'rect']);\n\nexport function adjustSpatial(encode, marktype) {\n  let code = '';\n\n  if (Skip[marktype]) return code;\n\n  if (encode.x2) {\n    if (encode.x) {\n      if (Swap[marktype]) {\n        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';\n      }\n      code += 'o.width=o.x2-o.x;';\n    } else {\n      code += 'o.x=o.x2-(o.width||0);';\n    }\n  }\n\n  if (encode.xc) {\n    code += 'o.x=o.xc-(o.width||0)/2;';\n  }\n\n  if (encode.y2) {\n    if (encode.y) {\n      if (Swap[marktype]) {\n        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';\n      }\n      code += 'o.height=o.y2-o.y;';\n    } else {\n      code += 'o.y=o.y2-(o.height||0);';\n    }\n  }\n\n  if (encode.yc) {\n    code += 'o.y=o.yc-(o.height||0)/2;';\n  }\n\n  return code;\n}\n\nexport function canonicalType(type) {\n  return (type + '').toLowerCase();\n}\n\nexport function isOperator(type) {\n   return canonicalType(type) === 'operator';\n}\n\nexport function isCollect(type) {\n  return canonicalType(type) === 'collect';\n}\n","import {adjustSpatial} from './util.js';\nimport {stringValue} from 'vega-util';\n\nfunction expression(ctx, args, code) {\n  // wrap code in return statement if expression does not terminate\n  if (!code.endsWith(';')) {\n    code = 'return(' + code + ');';\n  }\n  const fn = Function(...args.concat(code));\n  return ctx && ctx.functions ? fn.bind(ctx.functions) : fn;\n}\n\n// generate code for comparing a single field\nfunction _compare(u, v, lt, gt) {\n  return `((u = ${u}) < (v = ${v}) || u == null) && v != null ? ${lt}\n  : (u > v || v == null) && u != null ? ${gt}\n  : ((v = v instanceof Date ? +v : v), (u = u instanceof Date ? +u : u)) !== u && v === v ? ${lt}\n  : v !== v && u === u ? ${gt} : `;\n}\n\nexport default {\n  /**\n   * Parse an expression used to update an operator value.\n   */\n  operator: (ctx, expr) => expression(ctx, ['_'], expr.code),\n\n  /**\n   * Parse an expression provided as an operator parameter value.\n   */\n  parameter: (ctx, expr) => expression(ctx, ['datum', '_'], expr.code),\n\n  /**\n   * Parse an expression applied to an event stream.\n   */\n  event: (ctx, expr) => expression(ctx, ['event'], expr.code),\n\n  /**\n   * Parse an expression used to handle an event-driven operator update.\n   */\n  handler: (ctx, expr) => {\n    const code = `var datum=event.item&&event.item.datum;return ${expr.code};`;\n    return expression(ctx, ['_', 'event'], code);\n  },\n\n  /**\n   * Parse an expression that performs visual encoding.\n   */\n  encode: (ctx, encode) => {\n    const {marktype, channels} = encode;\n\n    let code = 'var o=item,datum=o.datum,m=0,$;';\n    for (const name in channels) {\n      const o ='o[' + stringValue(name) + ']';\n      code += `$=${channels[name].code};if(${o}!==$)${o}=$,m=1;`;\n    }\n    code += adjustSpatial(channels, marktype);\n    code += 'return m;';\n\n    return expression(ctx, ['item', '_'], code);\n  },\n\n  /**\n   * Optimized code generators for access and comparison.\n   */\n  codegen: {\n    get(path) {\n      const ref = `[${path.map(stringValue).join('][')}]`;\n      const get = Function('_', `return _${ref};`);\n      get.path = ref;\n      return get;\n    },\n    comparator(fields, orders) {\n      let t;\n      const map = (f, i) => {\n        const o = orders[i];\n        let u, v;\n        if (f.path) {\n          u = `a${f.path}`;\n          v = `b${f.path}`;\n        } else {\n          (t = t || {})['f'+i] = f;\n          u = `this.f${i}(a)`;\n          v = `this.f${i}(b)`;\n        }\n        return _compare(u, v, -o, o);\n      };\n\n      const fn = Function('a', 'b', 'var u, v; return '\n        + fields.map(map).join('') + '0;');\n      return t ? fn.bind(t) : fn;\n    }\n  }\n};\n","import {isOperator} from './util.js';\nimport {error} from 'vega-util';\n\n/**\n * Parse a dataflow operator.\n */\nexport function parseOperator(spec) {\n  const ctx = this;\n  if (isOperator(spec.type) || !spec.type) {\n    ctx.operator(\n      spec,\n      spec.update ? ctx.operatorExpression(spec.update) : null\n    );\n  } else {\n    ctx.transform(spec, spec.type);\n  }\n}\n\n/**\n * Parse and assign operator parameters.\n */\nexport function parseOperatorParameters(spec) {\n  const ctx = this;\n  if (spec.params) {\n    const op = ctx.get(spec.id);\n    if (!op) error('Invalid operator id: ' + spec.id);\n    ctx.dataflow.connect(op, op.parameters(\n      ctx.parseParameters(spec.params),\n      spec.react,\n      spec.initonly\n    ));\n  }\n}\n","import {tupleid} from 'vega-dataflow';\nimport {\n  accessor, array, compare, error, field,\n  hasOwnProperty, isArray, isObject, key\n} from 'vega-util';\n\n/**\n * Parse a set of operator parameters.\n */\nexport default function parseParameters(spec, params) {\n  params = params || {};\n  const ctx = this;\n\n  for (const key in spec) {\n    const value = spec[key];\n    params[key] = isArray(value)\n      ? value.map(v => parseParameter(v, ctx, params))\n      : parseParameter(value, ctx, params);\n  }\n\n  return params;\n}\n\n/**\n * Parse a single parameter.\n */\nfunction parseParameter(spec, ctx, params) {\n  if (!spec || !isObject(spec)) return spec;\n\n  for (let i=0, n=PARSERS.length, p; i<n; ++i) {\n    p = PARSERS[i];\n    if (hasOwnProperty(spec, p.key)) {\n      return p.parse(spec, ctx, params);\n    }\n  }\n\n  return spec;\n}\n\n/** Reference parsers. */\nvar PARSERS = [\n  {key: '$ref',      parse: getOperator},\n  {key: '$key',      parse: getKey},\n  {key: '$expr',     parse: getExpression},\n  {key: '$field',    parse: getField},\n  {key: '$encode',   parse: getEncode},\n  {key: '$compare',  parse: getCompare},\n  {key: '$context',  parse: getContext},\n  {key: '$subflow',  parse: getSubflow},\n  {key: '$tupleid',  parse: getTupleId}\n];\n\n/**\n * Resolve an operator reference.\n */\nfunction getOperator(_, ctx) {\n  return ctx.get(_.$ref) || error('Operator not defined: ' + _.$ref);\n}\n\n/**\n * Resolve an expression reference.\n */\nfunction getExpression(_, ctx, params) {\n  if (_.$params) { // parse expression parameters\n    ctx.parseParameters(_.$params, params);\n  }\n  const k = 'e:' + _.$expr.code;\n  return ctx.fn[k] || (ctx.fn[k] = accessor(\n    ctx.parameterExpression(_.$expr),\n    _.$fields\n  ));\n}\n\n/**\n * Resolve a key accessor reference.\n */\nfunction getKey(_, ctx) {\n  const k = 'k:' + _.$key + '_' + (!!_.$flat);\n  return ctx.fn[k] || (ctx.fn[k] = key(_.$key, _.$flat, ctx.expr.codegen));\n}\n\n/**\n * Resolve a field accessor reference.\n */\nfunction getField(_, ctx) {\n  if (!_.$field) return null;\n  const k = 'f:' + _.$field + '_' + _.$name;\n  return ctx.fn[k] || (ctx.fn[k] = field(_.$field, _.$name, ctx.expr.codegen));\n}\n\n/**\n * Resolve a comparator function reference.\n */\nfunction getCompare(_, ctx) {\n  // As of Vega 5.5.3, $tupleid sort is no longer used.\n  // Keep here for now for backwards compatibility.\n  const k = 'c:' + _.$compare + '_' + _.$order,\n        c = array(_.$compare).map(_ => (_ && _.$tupleid) ? tupleid : _);\n  return ctx.fn[k] || (ctx.fn[k] = compare(c, _.$order, ctx.expr.codegen));\n}\n\n/**\n * Resolve an encode operator reference.\n */\nfunction getEncode(_, ctx) {\n  const spec = _.$encode,\n        encode = {};\n\n  for (const name in spec) {\n    const enc = spec[name];\n    encode[name] = accessor(ctx.encodeExpression(enc.$expr), enc.$fields);\n    encode[name].output = enc.$output;\n  }\n  return encode;\n}\n\n/**\n * Resolve a context reference.\n */\nfunction getContext(_, ctx) {\n  return ctx;\n}\n\n/**\n * Resolve a recursive subflow specification.\n */\nfunction getSubflow(_, ctx) {\n  const spec = _.$subflow;\n  return function(dataflow, key, parent) {\n    const subctx = ctx.fork().parse(spec),\n          op = subctx.get(spec.operators[0].id),\n          p = subctx.signals.parent;\n    if (p) p.set(parent);\n    op.detachSubflow = () => ctx.detach(subctx);\n    return op;\n  };\n}\n\n/**\n * Resolve a tuple id reference.\n */\nfunction getTupleId() {\n  return tupleid;\n}\n","import {error} from 'vega-util';\n\n/**\n * Parse an event stream specification.\n */\nexport default function(spec) {\n  var ctx = this,\n      filter = spec.filter != null ? ctx.eventExpression(spec.filter) : undefined,\n      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,\n      args;\n\n  if (spec.source) {\n    stream = ctx.events(spec.source, spec.type, filter);\n  }\n  else if (spec.merge) {\n    args = spec.merge.map(_ => ctx.get(_));\n    stream = args[0].merge.apply(args[0], args.slice(1));\n  }\n\n  if (spec.between) {\n    args = spec.between.map(_ => ctx.get(_));\n    stream = stream.between(args[0], args[1]);\n  }\n\n  if (spec.filter) {\n    stream = stream.filter(filter);\n  }\n\n  if (spec.throttle != null) {\n    stream = stream.throttle(+spec.throttle);\n  }\n\n  if (spec.debounce != null) {\n    stream = stream.debounce(+spec.debounce);\n  }\n\n  if (stream == null) {\n    error('Invalid stream definition: ' + JSON.stringify(spec));\n  }\n\n  if (spec.consume) stream.consume(true);\n\n  ctx.stream(spec, stream);\n}\n","import {error, isObject} from 'vega-util';\n\n/**\n * Parse an event-driven operator update.\n */\nexport default function(spec) {\n  var ctx = this,\n      srcid = isObject(srcid = spec.source) ? srcid.$ref : srcid,\n      source = ctx.get(srcid),\n      target = null,\n      update = spec.update,\n      params = undefined;\n\n  if (!source) error('Source not defined: ' + spec.source);\n\n  target = spec.target && spec.target.$expr\n    ? ctx.eventExpression(spec.target.$expr)\n    : ctx.get(spec.target);\n\n  if (update && update.$expr) {\n    if (update.$params) {\n      params = ctx.parseParameters(update.$params);\n    }\n    update = ctx.handlerExpression(update.$expr);\n  }\n\n  ctx.update(spec, source, target, update, params);\n}\n","import {truthy} from 'vega-util';\n\nconst SKIP = {skip: true};\n\nexport function getState(options) {\n  var ctx = this,\n      state = {};\n\n  if (options.signals) {\n    var signals = (state.signals = {});\n    Object.keys(ctx.signals).forEach(key => {\n      const op = ctx.signals[key];\n      if (options.signals(key, op)) {\n        signals[key] = op.value;\n      }\n    });\n  }\n\n  if (options.data) {\n    var data = (state.data = {});\n    Object.keys(ctx.data).forEach(key => {\n      const dataset = ctx.data[key];\n      if (options.data(key, dataset)) {\n        data[key] = dataset.input.value;\n      }\n    });\n  }\n\n  if (ctx.subcontext && options.recurse !== false) {\n    state.subcontext = ctx.subcontext.map(ctx => ctx.getState(options));\n  }\n\n  return state;\n}\n\nexport function setState(state) {\n  var ctx = this,\n      df = ctx.dataflow,\n      data = state.data,\n      signals = state.signals;\n\n  Object.keys(signals || {}).forEach(key => {\n    df.update(ctx.signals[key], signals[key], SKIP);\n  });\n\n  Object.keys(data || {}).forEach(key => {\n    df.pulse(\n      ctx.data[key].input,\n      df.changeset().remove(truthy).insert(data[key])\n    );\n  });\n\n  (state.subcontext  || []).forEach((substate, i) => {\n    const subctx = ctx.subcontext[i];\n    if (subctx) subctx.setState(substate);\n  });\n}\n","import parse from './dataflow.js';\nimport expressionCodegen from './expression.js';\nimport {\n  parseOperator,\n  parseOperatorParameters\n} from './operator.js';\nimport parseParameters from './parameters.js';\nimport parseStream from './stream.js';\nimport parseUpdate from './update.js';\n\nimport {getState, setState} from './state.js';\nimport {canonicalType, isCollect} from './util.js';\n\n/**\n * Context objects store the current parse state.\n * Enables lookup of parsed operators, event streams, accessors, etc.\n * Provides a 'fork' method for creating child contexts for subflows.\n */\nexport default function(df, transforms, functions, expr) {\n  return new Context(df, transforms, functions, expr);\n}\n\nfunction Context(df, transforms, functions, expr) {\n  this.dataflow = df;\n  this.transforms = transforms;\n  this.events = df.events.bind(df);\n  this.expr = expr || expressionCodegen,\n  this.signals = {};\n  this.scales = {};\n  this.nodes = {};\n  this.data = {};\n  this.fn = {};\n  if (functions) {\n    this.functions = Object.create(functions);\n    this.functions.context = this;\n  }\n}\n\nfunction Subcontext(ctx) {\n  this.dataflow = ctx.dataflow;\n  this.transforms = ctx.transforms;\n  this.events = ctx.events;\n  this.expr = ctx.expr;\n  this.signals = Object.create(ctx.signals);\n  this.scales = Object.create(ctx.scales);\n  this.nodes = Object.create(ctx.nodes);\n  this.data = Object.create(ctx.data);\n  this.fn = Object.create(ctx.fn);\n  if (ctx.functions) {\n    this.functions = Object.create(ctx.functions);\n    this.functions.context = this;\n  }\n}\n\nContext.prototype = Subcontext.prototype = {\n  fork() {\n    const ctx = new Subcontext(this);\n    (this.subcontext || (this.subcontext = [])).push(ctx);\n    return ctx;\n  },\n  detach(ctx) {\n    this.subcontext = this.subcontext.filter(c => c !== ctx);\n\n    // disconnect all nodes in the subcontext\n    // wipe out targets first for better efficiency\n    const keys = Object.keys(ctx.nodes);\n    for (const key of keys) ctx.nodes[key]._targets = null;\n    for (const key of keys) ctx.nodes[key].detach();\n    ctx.nodes = null;\n  },\n  get(id) {\n    return this.nodes[id];\n  },\n  set(id, node) {\n    return this.nodes[id] = node;\n  },\n  add(spec, op) {\n    const ctx = this,\n          df = ctx.dataflow,\n          data = spec.value;\n\n    ctx.set(spec.id, op);\n\n    if (isCollect(spec.type) && data) {\n      if (data.$ingest) {\n        df.ingest(op, data.$ingest, data.$format);\n      } else if (data.$request) {\n        df.preload(op, data.$request, data.$format);\n      } else {\n        df.pulse(op, df.changeset().insert(data));\n      }\n    }\n\n    if (spec.root) {\n      ctx.root = op;\n    }\n\n    if (spec.parent) {\n      let p = ctx.get(spec.parent.$ref);\n      if (p) {\n        df.connect(p, [op]);\n        op.targets().add(p);\n      } else {\n        (ctx.unresolved = ctx.unresolved || []).push(() => {\n          p = ctx.get(spec.parent.$ref);\n          df.connect(p, [op]);\n          op.targets().add(p);\n        });\n      }\n    }\n\n    if (spec.signal) {\n      ctx.signals[spec.signal] = op;\n    }\n\n    if (spec.scale) {\n      ctx.scales[spec.scale] = op;\n    }\n\n    if (spec.data) {\n      for (const name in spec.data) {\n        const data = ctx.data[name] || (ctx.data[name] = {});\n        spec.data[name].forEach(role => data[role] = op);\n      }\n    }\n  },\n  resolve() {\n    (this.unresolved || []).forEach(fn => fn());\n    delete this.unresolved;\n    return this;\n  },\n  operator(spec, update) {\n    this.add(spec, this.dataflow.add(spec.value, update));\n  },\n  transform(spec, type) {\n    this.add(spec, this.dataflow.add(this.transforms[canonicalType(type)]));\n  },\n  stream(spec, stream) {\n    this.set(spec.id, stream);\n  },\n  update(spec, stream, target, update, params) {\n    this.dataflow.on(stream, target, update, params, spec.options);\n  },\n\n  // expression parsing\n  operatorExpression(expr) {\n    return this.expr.operator(this, expr);\n  },\n  parameterExpression(expr) {\n    return this.expr.parameter(this, expr);\n  },\n  eventExpression(expr) {\n    return this.expr.event(this, expr);\n  },\n  handlerExpression(expr) {\n    return this.expr.handler(this, expr);\n  },\n  encodeExpression(encode) {\n    return this.expr.encode(this, encode);\n  },\n\n  // parse methods\n  parse,\n  parseOperator,\n  parseOperatorParameters,\n  parseParameters,\n  parseStream,\n  parseUpdate,\n\n  // state methods\n  getState,\n  setState\n};\n"],"names":["spec","ctx","operators","background","eventConfig","locale","forEach","entry","parseOperator","parseOperatorParameters","streams","parseStream","updates","parseUpdate","resolve","Skip","toSet","Swap","adjustSpatial","encode","marktype","code","x2","x","xc","y2","y","yc","canonicalType","type","toLowerCase","isOperator","isCollect","expression","args","endsWith","fn","Function","concat","functions","bind","_compare","u","v","lt","gt","operator","expr","parameter","event","handler","channels","name","o","stringValue","codegen","get","path","ref","map","join","comparator","fields","orders","t","f","i","update","operatorExpression","transform","params","op","id","error","dataflow","connect","parameters","parseParameters","react","initonly","key","value","isArray","parseParameter","isObject","n","PARSERS","length","p","hasOwnProperty","parse","getOperator","getKey","getExpression","getField","getEncode","getCompare","getContext","getSubflow","getTupleId","_","$ref","$params","k","$expr","accessor","parameterExpression","$fields","$key","$flat","$field","$name","field","$compare","$order","c","array","$tupleid","tupleid","compare","$encode","enc","encodeExpression","output","$output","$subflow","parent","subctx","fork","signals","set","detachSubflow","detach","filter","eventExpression","undefined","stream","source","events","merge","apply","slice","between","throttle","debounce","JSON","stringify","consume","srcid","target","handlerExpression","SKIP","skip","getState","options","state","Object","keys","data","dataset","input","subcontext","recurse","setState","df","pulse","changeset","remove","truthy","insert","substate","transforms","Context","expressionCodegen","scales","nodes","create","context","Subcontext","prototype","push","_targets","node","add","$ingest","ingest","$format","$request","preload","root","targets","unresolved","signal","scale","role","on"],"mappings":"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"}