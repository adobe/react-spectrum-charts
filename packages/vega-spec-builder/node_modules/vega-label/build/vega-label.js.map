{"version":3,"file":"vega-label.js","sources":["../src/util/markBitmaps.js","../src/util/Bitmap.js","../src/util/scaler.js","../src/util/placeAreaLabel/placeNaive.js","../src/util/placeAreaLabel/common.js","../src/util/placeAreaLabel/placeReducedSearch.js","../src/util/placeAreaLabel/placeFloodFill.js","../src/util/placeMarkLabel.js","../src/LabelLayout.js","../src/Label.js"],"sourcesContent":["import {canvas} from 'vega-canvas';\nimport {rederive} from 'vega-dataflow';\nimport {Marks} from 'vega-scenegraph';\n\n// bit mask for getting first 2 bytes of alpha value\nconst ALPHA_MASK = 0xff000000;\n\nexport function baseBitmaps($, data) {\n  const bitmap = $.bitmap();\n  // when there is no base mark but data points are to be avoided\n  (data || []).forEach(d => bitmap.set($(d.boundary[0]), $(d.boundary[3])));\n  return [bitmap, undefined];\n}\n\nexport function markBitmaps($, baseMark, avoidMarks, labelInside, isGroupArea) {\n  // create canvas\n  const width = $.width,\n        height = $.height,\n        border = labelInside || isGroupArea,\n        context = canvas(width, height).getContext('2d'),\n        baseMarkContext = canvas(width, height).getContext('2d'),\n        strokeContext = border && canvas(width, height).getContext('2d');\n\n  // render all marks to be avoided into canvas\n  avoidMarks.forEach(items => draw(context, items, false));\n  draw(baseMarkContext, baseMark, false);\n  if (border) {\n    draw(strokeContext, baseMark, true);\n  }\n\n  // get canvas buffer, create bitmaps\n  const buffer = getBuffer(context, width, height),\n        baseMarkBuffer = getBuffer(baseMarkContext, width, height),\n        strokeBuffer = border && getBuffer(strokeContext, width, height),\n        layer1 = $.bitmap(),\n        layer2 = border && $.bitmap();\n\n  // populate bitmap layers\n  let x, y, u, v, index, alpha, strokeAlpha, baseMarkAlpha;\n  for (y=0; y < height; ++y) {\n    for (x=0; x < width; ++x) {\n      index = y * width + x;\n\n      alpha = buffer[index] & ALPHA_MASK;\n      baseMarkAlpha = baseMarkBuffer[index] & ALPHA_MASK;\n      strokeAlpha = border && (strokeBuffer[index] & ALPHA_MASK);\n\n      if (alpha || strokeAlpha || baseMarkAlpha) {\n        u = $(x);\n        v = $(y);\n        if (!isGroupArea && (alpha || baseMarkAlpha)) layer1.set(u, v); // update interior bitmap\n        if (border && (alpha || strokeAlpha)) layer2.set(u, v); // update border bitmap\n      }\n    }\n  }\n\n  return [layer1, layer2];\n}\n\nfunction getBuffer(context, width, height) {\n  return new Uint32Array(context.getImageData(0, 0, width, height).data.buffer);\n}\n\nfunction draw(context, items, interior) {\n  if (!items.length) return;\n  const type = items[0].mark.marktype;\n\n  if (type === 'group') {\n    items.forEach(group => {\n      group.items.forEach(mark => draw(context, mark.items, interior));\n    });\n  } else {\n    Marks[type].draw(context, {items: interior ? items.map(prepare) : items});\n  }\n}\n\n/**\n * Prepare item before drawing into canvas (setting stroke and opacity)\n * @param {object} source item to be prepared\n * @returns prepared item\n */\nfunction prepare(source) {\n  const item = rederive(source, {});\n\n  if (\n    (item.stroke && item.strokeOpacity !== 0) ||\n    (item.fill && item.fillOpacity !== 0)\n  ) {\n    return {\n      ...item,\n      strokeOpacity: 1,\n      stroke: '#000',\n      fillOpacity: 0\n    };\n  }\n\n  return item;\n}\n","const DIV = 5,   // bit shift from x, y index to bit vector array index\n      MOD = 31,  // bit mask for index lookup within a bit vector\n      SIZE = 32, // individual bit vector size\n      RIGHT0 = new Uint32Array(SIZE + 1), // left-anchored bit vectors, full -> 0\n      RIGHT1 = new Uint32Array(SIZE + 1); // right-anchored bit vectors, 0 -> full\n\nRIGHT1[0] = 0;\nRIGHT0[0] = ~RIGHT1[0];\nfor (let i=1; i <= SIZE; ++i) {\n  RIGHT1[i] = (RIGHT1[i - 1] << 1) | 1;\n  RIGHT0[i] = ~RIGHT1[i];\n}\n\nexport default function(w, h) {\n  const array = new Uint32Array(~~((w * h + SIZE) / SIZE));\n\n  function _set(index, mask) {\n    array[index] |= mask;\n  }\n\n  function _clear(index, mask) {\n    array[index] &= mask;\n  }\n\n  return {\n    array: array,\n\n    get: (x, y) => {\n      const index = y * w + x;\n      return array[index >>> DIV] & (1 << (index & MOD));\n    },\n\n    set: (x, y) => {\n      const index = y * w + x;\n      _set(index >>> DIV, 1 << (index & MOD));\n    },\n\n    clear: (x, y) => {\n      const index = y * w + x;\n      _clear(index >>> DIV, ~(1 << (index & MOD)));\n    },\n\n    getRange: (x, y, x2, y2) => {\n      let r = y2, start, end, indexStart, indexEnd;\n      for (; r >= y; --r) {\n        start = r * w + x;\n        end = r * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n        if (indexStart === indexEnd) {\n          if (array[indexStart] & RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]) {\n            return true;\n          }\n        } else {\n          if (array[indexStart] & RIGHT0[start & MOD]) return true;\n          if (array[indexEnd] & RIGHT1[(end & MOD) + 1]) return true;\n          for (let i = indexStart + 1; i < indexEnd; ++i) {\n            if (array[i]) return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    setRange: (x, y, x2, y2) => {\n      let start, end, indexStart, indexEnd, i;\n      for (; y <= y2; ++y) {\n        start = y * w + x;\n        end = y * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n        if (indexStart === indexEnd) {\n          _set(indexStart, RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]);\n        } else {\n          _set(indexStart, RIGHT0[start & MOD]);\n          _set(indexEnd, RIGHT1[(end & MOD) + 1]);\n          for (i = indexStart + 1; i < indexEnd; ++i) _set(i, 0xffffffff);\n        }\n      }\n    },\n\n    clearRange: (x, y, x2, y2) => {\n      let start, end, indexStart, indexEnd, i;\n      for (; y <= y2; ++y) {\n        start = y * w + x;\n        end = y * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n        if (indexStart === indexEnd) {\n          _clear(indexStart, RIGHT1[start & MOD] | RIGHT0[(end & MOD) + 1]);\n        } else {\n          _clear(indexStart, RIGHT1[start & MOD]);\n          _clear(indexEnd, RIGHT0[(end & MOD) + 1]);\n          for (i = indexStart + 1; i < indexEnd; ++i) _clear(i, 0);\n        }\n      }\n    },\n\n    outOfBounds: (x, y, x2, y2) => x < 0 || y < 0 || y2 >= h || x2 >= w\n  };\n}","import Bitmap from './Bitmap.js';\n\nexport default function(width, height, padding) {\n  const ratio = Math.max(1, Math.sqrt((width * height) / 1e6)),\n        w = ~~((width + 2 * padding + ratio) / ratio),\n        h = ~~((height + 2 * padding + ratio) / ratio),\n        scale = _ => ~~((_ + padding) / ratio);\n\n  scale.invert = _ => (_ * ratio) - padding;\n  scale.bitmap = () => Bitmap(w, h);\n  scale.ratio = ratio;\n  scale.padding = padding;\n  scale.width = width;\n  scale.height = height;\n\n  return scale;\n}","import {textMetrics} from 'vega-scenegraph';\n\nexport default function($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n      height = $.height;\n\n  // try to place a label within an input area mark\n  return function(d) {\n    const items = d.datum.datum.items[markIndex].items, // area points\n          n = items.length, // number of points\n          textHeight = d.datum.fontSize, // label width\n          textWidth = textMetrics.width(d.datum, d.datum.text); // label height\n\n    let maxAreaWidth = 0,\n        x1, x2, y1, y2, x, y, areaWidth;\n\n    // for each area sample point\n    for (let i=0; i<n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n      x = (x1 + x2) / 2;\n      y = (y1 + y2) / 2;\n\n      areaWidth = Math.abs(x2 - x1 + y2 - y1);\n      if (areaWidth >= maxAreaWidth) {\n        maxAreaWidth = areaWidth;\n        d.x = x;\n        d.y = y;\n      }\n    }\n\n    x = textWidth / 2;\n    y = textHeight / 2;\n    x1 = d.x - x;\n    x2 = d.x + x;\n    y1 = d.y - y;\n    y2 = d.y + y;\n\n    d.align = 'center';\n    if (x1 < 0 && x2 <= width) {\n      d.align = 'left';\n    } else if (0 <= x1 && width < x2) {\n      d.align = 'right';\n    }\n\n    d.baseline = 'middle';\n    if (y1 < 0 && y2 <= height) {\n      d.baseline = 'top';\n    } else if (0 <= y1 && height < y2) {\n      d.baseline = 'bottom';\n    }\n\n    return true;\n  };\n}\n","export function outOfBounds(x, y, textWidth, textHeight, width, height) {\n  let r = textWidth / 2;\n  return x - r < 0\n      || x + r > width\n      || y - (r = textHeight / 2) < 0\n      || y + r > height;\n}\n\nexport function collision($, x, y, textHeight, textWidth, h, bm0, bm1) {\n  const w = (textWidth * h) / (textHeight * 2),\n        x1 = $(x - w),\n        x2 = $(x + w),\n        y1 = $(y - (h = h/2)),\n        y2 = $(y + h);\n\n  return bm0.outOfBounds(x1, y1, x2, y2)\n      || bm0.getRange(x1, y1, x2, y2)\n      || (bm1 && bm1.getRange(x1, y1, x2, y2));\n}","import {textMetrics} from 'vega-scenegraph';\nimport {collision, outOfBounds} from './common.js';\n\nexport default function($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n      height = $.height,\n      bm0 = bitmaps[0], // where labels have been placed\n      bm1 = bitmaps[1]; // area outlines\n\n  function tryLabel(_x, _y, maxSize, textWidth, textHeight) {\n    const x = $.invert(_x),\n          y = $.invert(_y);\n    let lo = maxSize,\n        hi = height,\n        mid;\n    if (\n      !outOfBounds(x, y, textWidth, textHeight, width, height) &&\n      !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) &&\n      !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)\n    ) {\n      // if the label fits at the current sample point,\n      // perform binary search to find the largest font size that fits\n      while (hi - lo >= 1) {\n        mid = (lo + hi) / 2;\n        if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n          hi = mid;\n        } else {\n          lo = mid;\n        }\n      }\n      // place label if current lower bound exceeds prior max font size\n      if (lo > maxSize) {\n        return [x, y, lo, true];\n      }\n    }\n  }\n\n  // try to place a label within an input area mark\n  return function(d) {\n    const items = d.datum.datum.items[markIndex].items, // area points\n          n = items.length, // number of points\n          textHeight = d.datum.fontSize, // label width\n          textWidth = textMetrics.width(d.datum, d.datum.text); // label height\n\n    let maxSize = avoidBaseMark ? textHeight : 0,\n        labelPlaced = false,\n        labelPlaced2 = false,\n        maxAreaWidth = 0,\n        x1, x2, y1, y2, x, y, _x, _y, _x1, _xMid, _x2, _y1, _yMid, _y2, areaWidth, result, swapTmp;\n\n    // for each area sample point\n    for (let i=0; i<n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n\n      if (x1 > x2) {\n        swapTmp = x1;\n        x1 = x2;\n        x2 = swapTmp;\n      }\n\n      if (y1 > y2) {\n        swapTmp = y1;\n        y1 = y2;\n        y2 = swapTmp;\n      }\n\n      _x1 = $(x1);\n      _x2 = $(x2);\n      _xMid = ~~((_x1 + _x2) / 2);\n      _y1 = $(y1);\n      _y2 = $(y2);\n      _yMid = ~~((_y1 + _y2) / 2);\n\n      // search along the line from mid point between the 2 border to lower border\n      for (_x = _xMid; _x >= _x1; --_x) {\n        for (_y = _yMid; _y >= _y1; --_y) {\n          result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n          if (result) {\n            [d.x, d.y, maxSize, labelPlaced] = result;\n          }\n        }\n      }\n\n      // search along the line from mid point between the 2 border to upper border\n      for (_x = _xMid; _x <= _x2; ++_x) {\n        for (_y = _yMid; _y <= _y2; ++_y) {\n          result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n          if (result) {\n            [d.x, d.y, maxSize, labelPlaced] = result;\n          }\n        }\n      }\n\n      // place label at slice center if not placed through other means\n      // and if we're not avoiding overlap with other areas\n      if (!labelPlaced && !avoidBaseMark) {\n        // one span is zero, hence we can add\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2;\n\n        // place label if it fits and improves the max area width\n        if (\n          areaWidth >= maxAreaWidth &&\n          !outOfBounds(x, y, textWidth, textHeight, width, height) &&\n          !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)\n        ) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n          labelPlaced2 = true;\n        }\n      }\n    }\n\n    // record current label placement information, update label bitmap\n    if (labelPlaced || labelPlaced2) {\n      x = textWidth / 2;\n      y = textHeight / 2;\n      bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n      d.align = 'center';\n      d.baseline = 'middle';\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n","import {textMetrics} from 'vega-scenegraph';\nimport {collision, outOfBounds} from './common.js';\n\n// pixel direction offsets for flood fill search\nconst X_DIR = [-1, -1, 1, 1];\nconst Y_DIR = [-1, 1, -1, 1];\n\nexport default function($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n      height = $.height,\n      bm0 = bitmaps[0], // where labels have been placed\n      bm1 = bitmaps[1], // area outlines\n      bm2 = $.bitmap(); // flood-fill visitations\n\n  // try to place a label within an input area mark\n  return function(d) {\n    const items = d.datum.datum.items[markIndex].items, // area points\n          n = items.length, // number of points\n          textHeight = d.datum.fontSize, // label width\n          textWidth = textMetrics.width(d.datum, d.datum.text), // label height\n          stack = []; // flood fill stack\n\n    let maxSize = avoidBaseMark ? textHeight : 0,\n        labelPlaced = false,\n        labelPlaced2 = false,\n        maxAreaWidth = 0,\n        x1, x2, y1, y2, x, y, _x, _y, lo, hi, mid, areaWidth;\n\n    // for each area sample point\n    for (let i=0; i<n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n\n      // add scaled center point to stack\n      stack.push([$((x1 + x2) / 2), $((y1 + y2) / 2)]);\n\n      // perform flood fill, visit points\n      while (stack.length) {\n        [_x, _y] = stack.pop();\n\n        // exit if point already marked\n        if (bm0.get(_x, _y) || bm1.get(_x, _y) || bm2.get(_x, _y)) continue;\n\n        // mark point in flood fill bitmap\n        // add search points for all (in bound) directions\n        bm2.set(_x, _y);\n        for (let j=0; j<4; ++j) {\n          x = _x + X_DIR[j];\n          y = _y + Y_DIR[j];\n          if (!bm2.outOfBounds(x, y, x, y)) stack.push([x, y]);\n        }\n\n        // unscale point back to x, y space\n        x = $.invert(_x);\n        y = $.invert(_y);\n        lo = maxSize;\n        hi = height; // TODO: make this bound smaller\n\n        if (\n          !outOfBounds(x, y, textWidth, textHeight, width, height) &&\n          !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) &&\n          !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)\n        ) {\n          // if the label fits at the current sample point,\n          // perform binary search to find the largest font size that fits\n          while (hi - lo >= 1) {\n            mid = (lo + hi) / 2;\n            if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n              hi = mid;\n            } else {\n              lo = mid;\n            }\n          }\n          // place label if current lower bound exceeds prior max font size\n          if (lo > maxSize) {\n            d.x = x;\n            d.y = y;\n            maxSize = lo;\n            labelPlaced = true;\n          }\n        }\n      }\n\n      // place label at slice center if not placed through other means\n      // and if we're not avoiding overlap with other areas\n      if (!labelPlaced && !avoidBaseMark) {\n        // one span is zero, hence we can add\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2;\n\n        // place label if it fits and improves the max area width\n        if (\n          areaWidth >= maxAreaWidth &&\n          !outOfBounds(x, y, textWidth, textHeight, width, height) &&\n          !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)\n        ) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n          labelPlaced2 = true;\n        }\n      }\n    }\n\n    // record current label placement information, update label bitmap\n    if (labelPlaced || labelPlaced2) {\n      x = textWidth / 2;\n      y = textHeight / 2;\n      bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n      d.align = 'center';\n      d.baseline = 'middle';\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n","import {textMetrics} from 'vega-scenegraph';\n\nconst Aligns = ['right', 'center', 'left'],\n      Baselines = ['bottom', 'middle', 'top'];\n\nexport default function($, bitmaps, anchors, offsets) {\n  const width = $.width,\n        height = $.height,\n        bm0 = bitmaps[0],\n        bm1 = bitmaps[1],\n        n = offsets.length;\n\n  return function(d) {\n    const boundary = d.boundary,\n          textHeight = d.datum.fontSize;\n\n    // can not be placed if the mark is not visible in the graph bound\n    if (boundary[2] < 0 || boundary[5] < 0 || boundary[0] > width || boundary[3] > height) {\n      return false;\n    }\n\n    let textWidth = d.textWidth ?? 0,\n        dx, dy, isInside, sizeFactor, insideFactor,\n        x1, x2, y1, y2, xc, yc,\n        _x1, _x2, _y1, _y2;\n\n    // for each anchor and offset\n    for (let i=0; i<n; ++i) {\n      dx = (anchors[i] & 0x3) - 1;\n      dy = ((anchors[i] >>> 0x2) & 0x3) - 1;\n\n      isInside = (dx === 0 && dy === 0) || offsets[i] < 0;\n      sizeFactor = dx && dy ? Math.SQRT1_2 : 1;\n      insideFactor = offsets[i] < 0 ? -1 : 1;\n\n      x1 = boundary[1 + dx] + offsets[i] * dx * sizeFactor;\n      yc = boundary[4 + dy] + (insideFactor * textHeight * dy) / 2 + offsets[i] * dy * sizeFactor;\n      y1 = yc - textHeight / 2;\n      y2 = yc + textHeight / 2;\n\n      _x1 = $(x1);\n      _y1 = $(y1);\n      _y2 = $(y2);\n\n      if (!textWidth) {\n        // to avoid finding width of text label,\n        if (!test(_x1, _x1, _y1, _y2, bm0, bm1, x1, x1, y1, y2, boundary, isInside)) {\n          // skip this anchor/offset option if we fail to place a label with 1px width\n          continue;\n        } else {\n          // Otherwise, find the label width\n          textWidth = textMetrics.width(d.datum, d.datum.text);\n        }\n      }\n\n      xc = x1 + (insideFactor * textWidth * dx) / 2;\n      x1 = xc - textWidth / 2;\n      x2 = xc + textWidth / 2;\n\n      _x1 = $(x1);\n      _x2 = $(x2);\n\n      if (test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside)) {\n        // place label if the position is placeable\n        d.x = !dx ? xc : dx * insideFactor < 0 ? x2 : x1;\n        d.y = !dy ? yc : dy * insideFactor < 0 ? y2 : y1;\n\n        d.align = Aligns[dx * insideFactor + 1];\n        d.baseline = Baselines[dy * insideFactor + 1];\n\n        bm0.setRange(_x1, _y1, _x2, _y2);\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\n// Test if a label with the given dimensions can be added without overlap\nfunction test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside) {\n  return !(\n    bm0.outOfBounds(_x1, _y1, _x2, _y2) ||\n    ((isInside && bm1) || bm0).getRange(_x1, _y1, _x2, _y2)\n  );\n}\n","import {textMetrics} from 'vega-scenegraph';\nimport {baseBitmaps, markBitmaps} from './util/markBitmaps.js';\nimport scaler from './util/scaler.js';\nimport placeAreaLabelNaive from './util/placeAreaLabel/placeNaive.js';\nimport placeAreaLabelReducedSearch from './util/placeAreaLabel/placeReducedSearch.js';\nimport placeAreaLabelFloodFill from './util/placeAreaLabel/placeFloodFill.js';\nimport placeMarkLabel from './util/placeMarkLabel.js';\n\n// 8-bit representation of anchors\nconst TOP    = 0x0,\n      MIDDLE = 0x4,\n      BOTTOM = 0x8,\n      LEFT   = 0x0,\n      CENTER = 0x1,\n      RIGHT  = 0x2;\n\n// Mapping from text anchor to number representation\nconst anchorCode = {\n  'top-left':     TOP + LEFT,\n  'top':          TOP + CENTER,\n  'top-right':    TOP + RIGHT,\n  'left':         MIDDLE + LEFT,\n  'middle':       MIDDLE + CENTER,\n  'right':        MIDDLE + RIGHT,\n  'bottom-left':  BOTTOM + LEFT,\n  'bottom':       BOTTOM + CENTER,\n  'bottom-right': BOTTOM + RIGHT\n};\n\nconst placeAreaLabel = {\n  'naive': placeAreaLabelNaive,\n  'reduced-search': placeAreaLabelReducedSearch,\n  'floodfill': placeAreaLabelFloodFill\n};\n\nexport default function(texts, size, compare, offset, anchor,\n  avoidMarks, avoidBaseMark, lineAnchor, markIndex, padding, method)\n{\n  // early exit for empty data\n  if (!texts.length) return texts;\n\n  const positions = Math.max(offset.length, anchor.length),\n        offsets = getOffsets(offset, positions),\n        anchors = getAnchors(anchor, positions),\n        marktype = markType(texts[0].datum),\n        grouptype = marktype === 'group' && texts[0].datum.items[markIndex].marktype,\n        isGroupArea = grouptype === 'area',\n        boundary = markBoundary(marktype, grouptype, lineAnchor, markIndex),\n        infPadding = padding === null || padding === Infinity,\n        isNaiveGroupArea = isGroupArea && method === 'naive';\n\n  let maxTextWidth = -1,\n      maxTextHeight = -1;\n\n  // prepare text mark data for placing\n  const data = texts.map(d => {\n    const textWidth = infPadding ? textMetrics.width(d, d.text) : undefined;\n    maxTextWidth = Math.max(maxTextWidth, textWidth);\n    maxTextHeight = Math.max(maxTextHeight, d.fontSize);\n\n    return {\n      datum: d,\n      opacity: 0,\n      x: undefined,\n      y: undefined,\n      align: undefined,\n      baseline: undefined,\n      boundary: boundary(d),\n      textWidth\n    };\n  });\n\n  padding = (padding === null || padding === Infinity)\n    ? Math.max(maxTextWidth, maxTextHeight) + Math.max(...offset)\n    : padding;\n  const $ = scaler(size[0], size[1], padding);\n\n  let bitmaps;\n  if (!isNaiveGroupArea) {\n    // sort labels in priority order, if comparator is provided\n    if (compare) {\n      data.sort((a, b) => compare(a.datum, b.datum));\n    }\n\n    // flag indicating if label can be placed inside its base mark\n    let labelInside = false;\n    for (let i=0; i < anchors.length && !labelInside; ++i) {\n      // label inside if anchor is at center\n      // label inside if offset to be inside the mark bound\n      labelInside = anchors[i] === 0x5 || offsets[i] < 0;\n    }\n\n    // extract data information from base mark when base mark is to be avoided\n    // base mark is implicitly avoided if it is a group area\n    const baseMark = ((marktype && avoidBaseMark) || isGroupArea) && texts.map(d => d.datum);\n\n    // generate bitmaps for layout calculation\n    bitmaps = avoidMarks.length || baseMark\n      ? markBitmaps($, baseMark || [], avoidMarks, labelInside, isGroupArea)\n      : baseBitmaps($, avoidBaseMark && data);\n  }\n\n  // generate label placement function\n  const place = isGroupArea\n    ? placeAreaLabel[method]($, bitmaps, avoidBaseMark, markIndex)\n    : placeMarkLabel($, bitmaps, anchors, offsets);\n\n  // place all labels\n  data.forEach(d => d.opacity = +place(d));\n\n  return data;\n}\n\nfunction getOffsets(_, count) {\n  const offsets = new Float64Array(count),\n        n = _.length;\n  for (let i=0; i<n; ++i) offsets[i] = _[i] || 0;\n  for (let i=n; i<count; ++i) offsets[i] = offsets[n - 1];\n  return offsets;\n}\n\nfunction getAnchors(_, count) {\n  const anchors = new Int8Array(count),\n        n = _.length;\n  for (let i=0; i<n; ++i) anchors[i] |= anchorCode[_[i]];\n  for (let i=n; i<count; ++i) anchors[i] = anchors[n - 1];\n  return anchors;\n}\n\nfunction markType(item) {\n  return item && item.mark && item.mark.marktype;\n}\n\n/**\n * Factory function for function for getting base mark boundary, depending\n * on mark and group type. When mark type is undefined, line or area: boundary\n * is the coordinate of each data point. When base mark is grouped line,\n * boundary is either at the start or end of the line depending on the\n * value of lineAnchor. Otherwise, use bounds of base mark.\n */\nfunction markBoundary(marktype, grouptype, lineAnchor, markIndex) {\n  const xy = d => [d.x, d.x, d.x, d.y, d.y, d.y];\n\n  if (!marktype) {\n    return xy; // no reactive geometry\n  }\n\n  else if (marktype === 'line' || marktype === 'area') {\n    return d => xy(d.datum);\n  }\n\n  else if (grouptype === 'line') {\n    return d => {\n      const items = d.datum.items[markIndex].items;\n      return xy(items.length\n        ? items[lineAnchor === 'start' ? 0 : items.length - 1]\n        : {x: NaN, y: NaN});\n    };\n  }\n\n  else {\n    return d => {\n      const b = d.datum.bounds;\n      return [b.x1, (b.x1 + b.x2) / 2, b.x2, b.y1, (b.y1 + b.y2) / 2, b.y2];\n    };\n  }\n}\n","import labelLayout from './LabelLayout.js';\nimport {Transform} from 'vega-dataflow';\nimport {array, error, inherits, isFunction} from 'vega-util';\n\nconst Output = [\n  'x',\n  'y',\n  'opacity',\n  'align',\n  'baseline'\n];\n\nconst Anchors = [\n  'top-left',\n  'left',\n  'bottom-left',\n  'top',\n  'bottom',\n  'top-right',\n  'right',\n  'bottom-right'\n];\n\n/**\n * Compute text label layout to annotate marks.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The size of the layout, provided as a [width, height] array.\n * @param {function(*,*): number} [params.sort] - An optional\n *   comparator function for sorting label data in priority order.\n * @param {Array<string>} [params.anchor] - Label anchor points relative to the base mark bounding box.\n *   The available options are 'top-left', 'left', 'bottom-left', 'top',\n *   'bottom', 'top-right', 'right', 'bottom-right', 'middle'.\n * @param {Array<number>} [params.offset] - Label offsets (in pixels) from the base mark bounding box.\n *   This parameter is parallel to the list of anchor points.\n * @param {number | null} [params.padding=0] - The amount (in pixels) that a label may exceed the layout size.\n *   If this parameter is null, a label may exceed the layout size without any boundary.\n * @param {string} [params.lineAnchor='end'] - For group line mark labels only, indicates the anchor\n *   position for labels. One of 'start' or 'end'.\n * @param {string} [params.markIndex=0] - For group mark labels only, an index indicating\n *   which mark within the group should be labeled.\n * @param {Array<number>} [params.avoidMarks] - A list of additional mark names for which the label\n *   layout should avoid overlap.\n * @param {boolean} [params.avoidBaseMark=true] - Boolean flag indicating if labels should avoid\n *   overlap with the underlying base mark being labeled.\n * @param {string} [params.method='naive'] - For area make labels only, a method for\n *   place labels. One of 'naive', 'reduced-search', or 'floodfill'.\n * @param {Array<string>} [params.as] - The output fields written by the transform.\n *   The default is ['x', 'y', 'opacity', 'align', 'baseline'].\n */\nexport default function Label(params) {\n  Transform.call(this, null, params);\n}\n\nLabel.Definition = {\n  type: 'Label',\n  metadata: { modifies: true },\n  params: [\n    { name: 'size', type: 'number', array: true, length: 2, required: true },\n    { name: 'sort', type: 'compare' },\n    { name: 'anchor', type: 'string', array: true, default: Anchors },\n    { name: 'offset', type: 'number', array: true, default: [1] },\n    { name: 'padding', type: 'number', default: 0, null: true },\n    { name: 'lineAnchor', type: 'string', values: ['start', 'end'], default: 'end' },\n    { name: 'markIndex', type: 'number', default: 0 },\n    { name: 'avoidBaseMark', type: 'boolean', default: true },\n    { name: 'avoidMarks', type: 'data', array: true },\n    { name: 'method', type: 'string', default: 'naive'},\n    { name: 'as', type: 'string', array: true, length: Output.length, default: Output }\n  ]\n};\n\ninherits(Label, Transform, {\n  transform(_, pulse) {\n    function modp(param) {\n      const p = _[param];\n      return isFunction(p) && pulse.modified(p.fields);\n    }\n\n    const mod = _.modified();\n    if (!(mod || pulse.changed(pulse.ADD_REM) || modp('sort'))) return;\n    if (!_.size || _.size.length !== 2) {\n      error('Size parameter should be specified as a [width, height] array.');\n    }\n\n    const as = _.as || Output;\n\n    // run label layout\n    labelLayout(\n      pulse.materialize(pulse.SOURCE).source || [],\n      _.size,\n      _.sort,\n      array(_.offset == null ? 1 : _.offset),\n      array(_.anchor || Anchors),\n      _.avoidMarks || [],\n      _.avoidBaseMark !== false,\n      _.lineAnchor || 'end',\n      _.markIndex || 0,\n      _.padding === undefined ? 0 : _.padding,\n      _.method || 'naive'\n    ).forEach(l => {\n      // write layout results to data stream\n      const t = l.datum;\n      t[as[0]] = l.x;\n      t[as[1]] = l.y;\n      t[as[2]] = l.opacity;\n      t[as[3]] = l.align;\n      t[as[4]] = l.baseline;\n    });\n\n    return pulse.reflow(mod).modifies(as);\n  }\n});\n"],"names":["ALPHA_MASK","baseBitmaps","$","data","bitmap","forEach","d","set","boundary","undefined","markBitmaps","baseMark","avoidMarks","labelInside","isGroupArea","width","height","border","context","canvas","getContext","baseMarkContext","strokeContext","items","draw","buffer","getBuffer","baseMarkBuffer","strokeBuffer","layer1","layer2","x","y","u","v","index","alpha","strokeAlpha","baseMarkAlpha","Uint32Array","getImageData","interior","length","type","mark","marktype","group","Marks","map","prepare","source","item","rederive","stroke","strokeOpacity","fill","fillOpacity","DIV","MOD","SIZE","RIGHT0","RIGHT1","i","w","h","array","_set","mask","_clear","get","clear","getRange","x2","y2","r","start","end","indexStart","indexEnd","setRange","clearRange","outOfBounds","padding","ratio","Math","max","sqrt","scale","_","invert","Bitmap","bitmaps","avoidBaseMark","markIndex","datum","n","textHeight","fontSize","textWidth","textMetrics","text","maxAreaWidth","x1","y1","areaWidth","abs","align","baseline","collision","bm0","bm1","tryLabel","_x","_y","maxSize","lo","hi","mid","labelPlaced","labelPlaced2","_x1","_xMid","_x2","_y1","_yMid","_y2","result","swapTmp","X_DIR","Y_DIR","bm2","stack","push","pop","j","Aligns","Baselines","anchors","offsets","dx","dy","isInside","sizeFactor","insideFactor","xc","yc","SQRT1_2","test","TOP","MIDDLE","BOTTOM","LEFT","CENTER","RIGHT","anchorCode","placeAreaLabel","placeAreaLabelNaive","placeAreaLabelReducedSearch","placeAreaLabelFloodFill","texts","size","compare","offset","anchor","lineAnchor","method","positions","getOffsets","getAnchors","markType","grouptype","markBoundary","infPadding","Infinity","isNaiveGroupArea","maxTextWidth","maxTextHeight","opacity","scaler","sort","a","b","place","placeMarkLabel","count","Float64Array","Int8Array","xy","NaN","bounds","Output","Anchors","Label","params","Transform","call","Definition","metadata","modifies","name","required","default","null","values","inherits","transform","pulse","modp","param","p","isFunction","modified","fields","mod","changed","ADD_REM","error","as","labelLayout","materialize","SOURCE","l","t","reflow"],"mappings":";;;;;AAIA;AACA,MAAMA,UAAU,GAAG,UAAU;AAEtB,SAASC,WAAWA,CAACC,CAAC,EAAEC,IAAI,EAAE;AACnC,EAAA,MAAMC,MAAM,GAAGF,CAAC,CAACE,MAAM,EAAE;AACzB;AACA,EAAA,CAACD,IAAI,IAAI,EAAE,EAAEE,OAAO,CAACC,CAAC,IAAIF,MAAM,CAACG,GAAG,CAACL,CAAC,CAACI,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEN,CAAC,CAACI,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,EAAA,OAAO,CAACJ,MAAM,EAAEK,SAAS,CAAC;AAC5B;AAEO,SAASC,WAAWA,CAACR,CAAC,EAAES,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAE;AAC7E;AACA,EAAA,MAAMC,KAAK,GAAGb,CAAC,CAACa,KAAK;IACfC,MAAM,GAAGd,CAAC,CAACc,MAAM;IACjBC,MAAM,GAAGJ,WAAW,IAAIC,WAAW;IACnCI,OAAO,GAAGC,MAAM,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAACI,UAAU,CAAC,IAAI,CAAC;IAChDC,eAAe,GAAGF,MAAM,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAACI,UAAU,CAAC,IAAI,CAAC;AACxDE,IAAAA,aAAa,GAAGL,MAAM,IAAIE,MAAM,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAACI,UAAU,CAAC,IAAI,CAAC;;AAEtE;AACAR,EAAAA,UAAU,CAACP,OAAO,CAACkB,KAAK,IAAIC,IAAI,CAACN,OAAO,EAAEK,KAAK,EAAE,KAAK,CAAC,CAAC;AACxDC,EAAAA,IAAI,CAACH,eAAe,EAAEV,QAAQ,EAAE,KAAK,CAAC;AACtC,EAAA,IAAIM,MAAM,EAAE;AACVO,IAAAA,IAAI,CAACF,aAAa,EAAEX,QAAQ,EAAE,IAAI,CAAC;AACrC;;AAEA;EACA,MAAMc,MAAM,GAAGC,SAAS,CAACR,OAAO,EAAEH,KAAK,EAAEC,MAAM,CAAC;IAC1CW,cAAc,GAAGD,SAAS,CAACL,eAAe,EAAEN,KAAK,EAAEC,MAAM,CAAC;IAC1DY,YAAY,GAAGX,MAAM,IAAIS,SAAS,CAACJ,aAAa,EAAEP,KAAK,EAAEC,MAAM,CAAC;AAChEa,IAAAA,MAAM,GAAG3B,CAAC,CAACE,MAAM,EAAE;AACnB0B,IAAAA,MAAM,GAAGb,MAAM,IAAIf,CAAC,CAACE,MAAM,EAAE;;AAEnC;AACA,EAAA,IAAI2B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAEC,WAAW,EAAEC,aAAa;EACxD,KAAKN,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGhB,MAAM,EAAE,EAAEgB,CAAC,EAAE;IACzB,KAAKD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGhB,KAAK,EAAE,EAAEgB,CAAC,EAAE;AACxBI,MAAAA,KAAK,GAAGH,CAAC,GAAGjB,KAAK,GAAGgB,CAAC;AAErBK,MAAAA,KAAK,GAAGX,MAAM,CAACU,KAAK,CAAC,GAAGnC,UAAU;AAClCsC,MAAAA,aAAa,GAAGX,cAAc,CAACQ,KAAK,CAAC,GAAGnC,UAAU;MAClDqC,WAAW,GAAGpB,MAAM,IAAKW,YAAY,CAACO,KAAK,CAAC,GAAGnC,UAAW;AAE1D,MAAA,IAAIoC,KAAK,IAAIC,WAAW,IAAIC,aAAa,EAAE;AACzCL,QAAAA,CAAC,GAAG/B,CAAC,CAAC6B,CAAC,CAAC;AACRG,QAAAA,CAAC,GAAGhC,CAAC,CAAC8B,CAAC,CAAC;AACR,QAAA,IAAI,CAAClB,WAAW,KAAKsB,KAAK,IAAIE,aAAa,CAAC,EAAET,MAAM,CAACtB,GAAG,CAAC0B,CAAC,EAAEC,CAAC,CAAC,CAAC;AAC/D,QAAA,IAAIjB,MAAM,KAAKmB,KAAK,IAAIC,WAAW,CAAC,EAAEP,MAAM,CAACvB,GAAG,CAAC0B,CAAC,EAAEC,CAAC,CAAC,CAAC;AACzD;AACF;AACF;AAEA,EAAA,OAAO,CAACL,MAAM,EAAEC,MAAM,CAAC;AACzB;AAEA,SAASJ,SAASA,CAACR,OAAO,EAAEH,KAAK,EAAEC,MAAM,EAAE;AACzC,EAAA,OAAO,IAAIuB,WAAW,CAACrB,OAAO,CAACsB,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEzB,KAAK,EAAEC,MAAM,CAAC,CAACb,IAAI,CAACsB,MAAM,CAAC;AAC/E;AAEA,SAASD,IAAIA,CAACN,OAAO,EAAEK,KAAK,EAAEkB,QAAQ,EAAE;AACtC,EAAA,IAAI,CAAClB,KAAK,CAACmB,MAAM,EAAE;EACnB,MAAMC,IAAI,GAAGpB,KAAK,CAAC,CAAC,CAAC,CAACqB,IAAI,CAACC,QAAQ;EAEnC,IAAIF,IAAI,KAAK,OAAO,EAAE;AACpBpB,IAAAA,KAAK,CAAClB,OAAO,CAACyC,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACvB,KAAK,CAAClB,OAAO,CAACuC,IAAI,IAAIpB,IAAI,CAACN,OAAO,EAAE0B,IAAI,CAACrB,KAAK,EAAEkB,QAAQ,CAAC,CAAC;AAClE,KAAC,CAAC;AACJ,GAAC,MAAM;AACLM,IAAAA,KAAK,CAACJ,IAAI,CAAC,CAACnB,IAAI,CAACN,OAAO,EAAE;MAACK,KAAK,EAAEkB,QAAQ,GAAGlB,KAAK,CAACyB,GAAG,CAACC,OAAO,CAAC,GAAG1B;AAAK,KAAC,CAAC;AAC3E;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS0B,OAAOA,CAACC,MAAM,EAAE;EACvB,MAAMC,IAAI,GAAGC,QAAQ,CAACF,MAAM,EAAE,EAAE,CAAC;AAEjC,EAAA,IACGC,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACG,aAAa,KAAK,CAAC,IACvCH,IAAI,CAACI,IAAI,IAAIJ,IAAI,CAACK,WAAW,KAAK,CAAE,EACrC;IACA,OAAO;AACL,MAAA,GAAGL,IAAI;AACPG,MAAAA,aAAa,EAAE,CAAC;AAChBD,MAAAA,MAAM,EAAE,MAAM;AACdG,MAAAA,WAAW,EAAE;KACd;AACH;AAEA,EAAA,OAAOL,IAAI;AACb;;ACjGA,MAAMM,GAAG,GAAG,CAAC;AAAI;AACXC,EAAAA,GAAG,GAAG,EAAE;AAAG;AACXC,EAAAA,IAAI,GAAG,EAAE;AAAE;AACXC,EAAAA,MAAM,GAAG,IAAIrB,WAAW,CAACoB,IAAI,GAAG,CAAC,CAAC;AAAE;EACpCE,MAAM,GAAG,IAAItB,WAAW,CAACoB,IAAI,GAAG,CAAC,CAAC,CAAC;;AAEzCE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AACbD,MAAM,CAAC,CAAC,CAAC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;AACtB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAIH,IAAI,EAAE,EAAEG,CAAC,EAAE;AAC5BD,EAAAA,MAAM,CAACC,CAAC,CAAC,GAAID,MAAM,CAACC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAI,CAAC;EACpCF,MAAM,CAACE,CAAC,CAAC,GAAG,CAACD,MAAM,CAACC,CAAC,CAAC;AACxB;AAEe,eAASC,EAAAA,CAAC,EAAEC,CAAC,EAAE;AAC5B,EAAA,MAAMC,KAAK,GAAG,IAAI1B,WAAW,CAAC,CAAC,EAAE,CAACwB,CAAC,GAAGC,CAAC,GAAGL,IAAI,IAAIA,IAAI,CAAC,CAAC;AAExD,EAAA,SAASO,IAAIA,CAAC/B,KAAK,EAAEgC,IAAI,EAAE;AACzBF,IAAAA,KAAK,CAAC9B,KAAK,CAAC,IAAIgC,IAAI;AACtB;AAEA,EAAA,SAASC,MAAMA,CAACjC,KAAK,EAAEgC,IAAI,EAAE;AAC3BF,IAAAA,KAAK,CAAC9B,KAAK,CAAC,IAAIgC,IAAI;AACtB;EAEA,OAAO;AACLF,IAAAA,KAAK,EAAEA,KAAK;AAEZI,IAAAA,GAAG,EAAEA,CAACtC,CAAC,EAAEC,CAAC,KAAK;AACb,MAAA,MAAMG,KAAK,GAAGH,CAAC,GAAG+B,CAAC,GAAGhC,CAAC;AACvB,MAAA,OAAOkC,KAAK,CAAC9B,KAAK,KAAKsB,GAAG,CAAC,GAAI,CAAC,KAAKtB,KAAK,GAAGuB,GAAG,CAAE;KACnD;AAEDnD,IAAAA,GAAG,EAAEA,CAACwB,CAAC,EAAEC,CAAC,KAAK;AACb,MAAA,MAAMG,KAAK,GAAGH,CAAC,GAAG+B,CAAC,GAAGhC,CAAC;MACvBmC,IAAI,CAAC/B,KAAK,KAAKsB,GAAG,EAAE,CAAC,KAAKtB,KAAK,GAAGuB,GAAG,CAAC,CAAC;KACxC;AAEDY,IAAAA,KAAK,EAAEA,CAACvC,CAAC,EAAEC,CAAC,KAAK;AACf,MAAA,MAAMG,KAAK,GAAGH,CAAC,GAAG+B,CAAC,GAAGhC,CAAC;AACvBqC,MAAAA,MAAM,CAACjC,KAAK,KAAKsB,GAAG,EAAE,EAAE,CAAC,KAAKtB,KAAK,GAAGuB,GAAG,CAAC,CAAC,CAAC;KAC7C;IAEDa,QAAQ,EAAEA,CAACxC,CAAC,EAAEC,CAAC,EAAEwC,EAAE,EAAEC,EAAE,KAAK;MAC1B,IAAIC,CAAC,GAAGD,EAAE;QAAEE,KAAK;QAAEC,GAAG;QAAEC,UAAU;QAAEC,QAAQ;AAC5C,MAAA,OAAOJ,CAAC,IAAI1C,CAAC,EAAE,EAAE0C,CAAC,EAAE;AAClBC,QAAAA,KAAK,GAAGD,CAAC,GAAGX,CAAC,GAAGhC,CAAC;AACjB6C,QAAAA,GAAG,GAAGF,CAAC,GAAGX,CAAC,GAAGS,EAAE;QAChBK,UAAU,GAAGF,KAAK,KAAKlB,GAAG;QAC1BqB,QAAQ,GAAGF,GAAG,KAAKnB,GAAG;QACtB,IAAIoB,UAAU,KAAKC,QAAQ,EAAE;UAC3B,IAAIb,KAAK,CAACY,UAAU,CAAC,GAAGjB,MAAM,CAACe,KAAK,GAAGjB,GAAG,CAAC,GAAGG,MAAM,CAAC,CAACe,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,EAAE;AACrE,YAAA,OAAO,IAAI;AACb;AACF,SAAC,MAAM;AACL,UAAA,IAAIO,KAAK,CAACY,UAAU,CAAC,GAAGjB,MAAM,CAACe,KAAK,GAAGjB,GAAG,CAAC,EAAE,OAAO,IAAI;AACxD,UAAA,IAAIO,KAAK,CAACa,QAAQ,CAAC,GAAGjB,MAAM,CAAC,CAACe,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;AAC1D,UAAA,KAAK,IAAII,CAAC,GAAGe,UAAU,GAAG,CAAC,EAAEf,CAAC,GAAGgB,QAAQ,EAAE,EAAEhB,CAAC,EAAE;AAC9C,YAAA,IAAIG,KAAK,CAACH,CAAC,CAAC,EAAE,OAAO,IAAI;AAC3B;AACF;AACF;AACA,MAAA,OAAO,KAAK;KACb;IAEDiB,QAAQ,EAAEA,CAAChD,CAAC,EAAEC,CAAC,EAAEwC,EAAE,EAAEC,EAAE,KAAK;MAC1B,IAAIE,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,QAAQ,EAAEhB,CAAC;AACvC,MAAA,OAAO9B,CAAC,IAAIyC,EAAE,EAAE,EAAEzC,CAAC,EAAE;AACnB2C,QAAAA,KAAK,GAAG3C,CAAC,GAAG+B,CAAC,GAAGhC,CAAC;AACjB6C,QAAAA,GAAG,GAAG5C,CAAC,GAAG+B,CAAC,GAAGS,EAAE;QAChBK,UAAU,GAAGF,KAAK,KAAKlB,GAAG;QAC1BqB,QAAQ,GAAGF,GAAG,KAAKnB,GAAG;QACtB,IAAIoB,UAAU,KAAKC,QAAQ,EAAE;AAC3BZ,UAAAA,IAAI,CAACW,UAAU,EAAEjB,MAAM,CAACe,KAAK,GAAGjB,GAAG,CAAC,GAAGG,MAAM,CAAC,CAACe,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,CAAC;AACjE,SAAC,MAAM;UACLQ,IAAI,CAACW,UAAU,EAAEjB,MAAM,CAACe,KAAK,GAAGjB,GAAG,CAAC,CAAC;AACrCQ,UAAAA,IAAI,CAACY,QAAQ,EAAEjB,MAAM,CAAC,CAACe,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,CAAC;AACvC,UAAA,KAAKI,CAAC,GAAGe,UAAU,GAAG,CAAC,EAAEf,CAAC,GAAGgB,QAAQ,EAAE,EAAEhB,CAAC,EAAEI,IAAI,CAACJ,CAAC,EAAE,UAAU,CAAC;AACjE;AACF;KACD;IAEDkB,UAAU,EAAEA,CAACjD,CAAC,EAAEC,CAAC,EAAEwC,EAAE,EAAEC,EAAE,KAAK;MAC5B,IAAIE,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,QAAQ,EAAEhB,CAAC;AACvC,MAAA,OAAO9B,CAAC,IAAIyC,EAAE,EAAE,EAAEzC,CAAC,EAAE;AACnB2C,QAAAA,KAAK,GAAG3C,CAAC,GAAG+B,CAAC,GAAGhC,CAAC;AACjB6C,QAAAA,GAAG,GAAG5C,CAAC,GAAG+B,CAAC,GAAGS,EAAE;QAChBK,UAAU,GAAGF,KAAK,KAAKlB,GAAG;QAC1BqB,QAAQ,GAAGF,GAAG,KAAKnB,GAAG;QACtB,IAAIoB,UAAU,KAAKC,QAAQ,EAAE;AAC3BV,UAAAA,MAAM,CAACS,UAAU,EAAEhB,MAAM,CAACc,KAAK,GAAGjB,GAAG,CAAC,GAAGE,MAAM,CAAC,CAACgB,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,CAAC;AACnE,SAAC,MAAM;UACLU,MAAM,CAACS,UAAU,EAAEhB,MAAM,CAACc,KAAK,GAAGjB,GAAG,CAAC,CAAC;AACvCU,UAAAA,MAAM,CAACU,QAAQ,EAAElB,MAAM,CAAC,CAACgB,GAAG,GAAGlB,GAAG,IAAI,CAAC,CAAC,CAAC;AACzC,UAAA,KAAKI,CAAC,GAAGe,UAAU,GAAG,CAAC,EAAEf,CAAC,GAAGgB,QAAQ,EAAE,EAAEhB,CAAC,EAAEM,MAAM,CAACN,CAAC,EAAE,CAAC,CAAC;AAC1D;AACF;KACD;IAEDmB,WAAW,EAAEA,CAAClD,CAAC,EAAEC,CAAC,EAAEwC,EAAE,EAAEC,EAAE,KAAK1C,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,IAAIyC,EAAE,IAAIT,CAAC,IAAIQ,EAAE,IAAIT;GACnE;AACH;;AClGe,iBAAShD,KAAK,EAAEC,MAAM,EAAEkE,OAAO,EAAE;AAC9C,EAAA,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAAEvE,KAAK,GAAGC,MAAM,GAAI,GAAG,CAAC,CAAC;AACtD+C,IAAAA,CAAC,GAAG,CAAC,EAAE,CAAChD,KAAK,GAAG,CAAC,GAAGmE,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAAC;AAC7CnB,IAAAA,CAAC,GAAG,CAAC,EAAE,CAAChD,MAAM,GAAG,CAAC,GAAGkE,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAAC;IAC9CI,KAAK,GAAGC,CAAC,IAAI,CAAC,EAAE,CAACA,CAAC,GAAGN,OAAO,IAAIC,KAAK,CAAC;EAE5CI,KAAK,CAACE,MAAM,GAAGD,CAAC,IAAKA,CAAC,GAAGL,KAAK,GAAID,OAAO;EACzCK,KAAK,CAACnF,MAAM,GAAG,MAAMsF,MAAM,CAAC3B,CAAC,EAAEC,CAAC,CAAC;EACjCuB,KAAK,CAACJ,KAAK,GAAGA,KAAK;EACnBI,KAAK,CAACL,OAAO,GAAGA,OAAO;EACvBK,KAAK,CAACxE,KAAK,GAAGA,KAAK;EACnBwE,KAAK,CAACvE,MAAM,GAAGA,MAAM;AAErB,EAAA,OAAOuE,KAAK;AACd;;ACde,4BAAA,EAASrF,CAAC,EAAEyF,OAAO,EAAEC,aAAa,EAAEC,SAAS,EAAE;AAC5D,EAAA,MAAM9E,KAAK,GAAGb,CAAC,CAACa,KAAK;IACjBC,MAAM,GAAGd,CAAC,CAACc,MAAM;;AAErB;EACA,OAAO,UAASV,CAAC,EAAE;AACjB,IAAA,MAAMiB,KAAK,GAAGjB,CAAC,CAACwF,KAAK,CAACA,KAAK,CAACvE,KAAK,CAACsE,SAAS,CAAC,CAACtE,KAAK;AAAE;MAC9CwE,CAAC,GAAGxE,KAAK,CAACmB,MAAM;AAAE;AAClBsD,MAAAA,UAAU,GAAG1F,CAAC,CAACwF,KAAK,CAACG,QAAQ;AAAE;AAC/BC,MAAAA,SAAS,GAAGC,WAAW,CAACpF,KAAK,CAACT,CAAC,CAACwF,KAAK,EAAExF,CAAC,CAACwF,KAAK,CAACM,IAAI,CAAC,CAAC;;IAE3D,IAAIC,YAAY,GAAG,CAAC;MAChBC,EAAE;MAAE9B,EAAE;MAAE+B,EAAE;MAAE9B,EAAE;MAAE1C,CAAC;MAAEC,CAAC;MAAEwE,SAAS;;AAEnC;IACA,KAAK,IAAI1C,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE;AACtBwC,MAAAA,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAAC/B,CAAC;AACfwE,MAAAA,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAAC9B,CAAC;AACfwC,MAAAA,EAAE,GAAGjD,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE,KAAK/D,SAAS,GAAG6F,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE;AACjDC,MAAAA,EAAE,GAAGlD,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE,KAAKhE,SAAS,GAAG8F,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE;AACjD1C,MAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;AACjBxC,MAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;AAEjB+B,MAAAA,SAAS,GAAGpB,IAAI,CAACqB,GAAG,CAACjC,EAAE,GAAG8B,EAAE,GAAG7B,EAAE,GAAG8B,EAAE,CAAC;MACvC,IAAIC,SAAS,IAAIH,YAAY,EAAE;AAC7BA,QAAAA,YAAY,GAAGG,SAAS;QACxBlG,CAAC,CAACyB,CAAC,GAAGA,CAAC;QACPzB,CAAC,CAAC0B,CAAC,GAAGA,CAAC;AACT;AACF;IAEAD,CAAC,GAAGmE,SAAS,GAAG,CAAC;IACjBlE,CAAC,GAAGgE,UAAU,GAAG,CAAC;AAClBM,IAAAA,EAAE,GAAGhG,CAAC,CAACyB,CAAC,GAAGA,CAAC;AACZyC,IAAAA,EAAE,GAAGlE,CAAC,CAACyB,CAAC,GAAGA,CAAC;AACZwE,IAAAA,EAAE,GAAGjG,CAAC,CAAC0B,CAAC,GAAGA,CAAC;AACZyC,IAAAA,EAAE,GAAGnE,CAAC,CAAC0B,CAAC,GAAGA,CAAC;IAEZ1B,CAAC,CAACoG,KAAK,GAAG,QAAQ;AAClB,IAAA,IAAIJ,EAAE,GAAG,CAAC,IAAI9B,EAAE,IAAIzD,KAAK,EAAE;MACzBT,CAAC,CAACoG,KAAK,GAAG,MAAM;KACjB,MAAM,IAAI,CAAC,IAAIJ,EAAE,IAAIvF,KAAK,GAAGyD,EAAE,EAAE;MAChClE,CAAC,CAACoG,KAAK,GAAG,OAAO;AACnB;IAEApG,CAAC,CAACqG,QAAQ,GAAG,QAAQ;AACrB,IAAA,IAAIJ,EAAE,GAAG,CAAC,IAAI9B,EAAE,IAAIzD,MAAM,EAAE;MAC1BV,CAAC,CAACqG,QAAQ,GAAG,KAAK;KACnB,MAAM,IAAI,CAAC,IAAIJ,EAAE,IAAIvF,MAAM,GAAGyD,EAAE,EAAE;MACjCnE,CAAC,CAACqG,QAAQ,GAAG,QAAQ;AACvB;AAEA,IAAA,OAAO,IAAI;GACZ;AACH;;ACxDO,SAAS1B,WAAWA,CAAClD,CAAC,EAAEC,CAAC,EAAEkE,SAAS,EAAEF,UAAU,EAAEjF,KAAK,EAAEC,MAAM,EAAE;AACtE,EAAA,IAAI0D,CAAC,GAAGwB,SAAS,GAAG,CAAC;EACrB,OAAOnE,CAAC,GAAG2C,CAAC,GAAG,CAAC,IACT3C,CAAC,GAAG2C,CAAC,GAAG3D,KAAK,IACbiB,CAAC,IAAI0C,CAAC,GAAGsB,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,IAC5BhE,CAAC,GAAG0C,CAAC,GAAG1D,MAAM;AACvB;AAEO,SAAS4F,SAASA,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAElC,CAAC,EAAE6C,GAAG,EAAEC,GAAG,EAAE;EACrE,MAAM/C,CAAC,GAAImC,SAAS,GAAGlC,CAAC,IAAKgC,UAAU,GAAG,CAAC,CAAC;AACtCM,IAAAA,EAAE,GAAGpG,CAAC,CAAC6B,CAAC,GAAGgC,CAAC,CAAC;AACbS,IAAAA,EAAE,GAAGtE,CAAC,CAAC6B,CAAC,GAAGgC,CAAC,CAAC;IACbwC,EAAE,GAAGrG,CAAC,CAAC8B,CAAC,IAAIgC,CAAC,GAAGA,CAAC,GAAC,CAAC,CAAC,CAAC;AACrBS,IAAAA,EAAE,GAAGvE,CAAC,CAAC8B,CAAC,GAAGgC,CAAC,CAAC;AAEnB,EAAA,OAAO6C,GAAG,CAAC5B,WAAW,CAACqB,EAAE,EAAEC,EAAE,EAAE/B,EAAE,EAAEC,EAAE,CAAC,IAC/BoC,GAAG,CAACtC,QAAQ,CAAC+B,EAAE,EAAEC,EAAE,EAAE/B,EAAE,EAAEC,EAAE,CAAC,IAC3BqC,GAAG,IAAIA,GAAG,CAACvC,QAAQ,CAAC+B,EAAE,EAAEC,EAAE,EAAE/B,EAAE,EAAEC,EAAE,CAAE;AAC9C;;ACfe,oCAAA,EAASvE,CAAC,EAAEyF,OAAO,EAAEC,aAAa,EAAEC,SAAS,EAAE;AAC5D,EAAA,MAAM9E,KAAK,GAAGb,CAAC,CAACa,KAAK;IACjBC,MAAM,GAAGd,CAAC,CAACc,MAAM;AACjB6F,IAAAA,GAAG,GAAGlB,OAAO,CAAC,CAAC,CAAC;AAAE;AAClBmB,IAAAA,GAAG,GAAGnB,OAAO,CAAC,CAAC,CAAC,CAAC;;EAErB,SAASoB,QAAQA,CAACC,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEhB,SAAS,EAAEF,UAAU,EAAE;AACxD,IAAA,MAAMjE,CAAC,GAAG7B,CAAC,CAACuF,MAAM,CAACuB,EAAE,CAAC;AAChBhF,MAAAA,CAAC,GAAG9B,CAAC,CAACuF,MAAM,CAACwB,EAAE,CAAC;IACtB,IAAIE,EAAE,GAAGD,OAAO;AACZE,MAAAA,EAAE,GAAGpG,MAAM;MACXqG,GAAG;IACP,IACE,CAACpC,WAAW,CAAClD,CAAC,EAAEC,CAAC,EAAEkE,SAAS,EAAEF,UAAU,EAAEjF,KAAK,EAAEC,MAAM,CAAC,IACxD,CAAC4F,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEiB,EAAE,EAAEN,GAAG,EAAEC,GAAG,CAAC,IACxD,CAACF,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEa,GAAG,EAAE,IAAI,CAAC,EACjE;AACA;AACA;AACA,MAAA,OAAOO,EAAE,GAAGD,EAAE,IAAI,CAAC,EAAE;AACnBE,QAAAA,GAAG,GAAG,CAACF,EAAE,GAAGC,EAAE,IAAI,CAAC;AACnB,QAAA,IAAIR,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEmB,GAAG,EAAER,GAAG,EAAEC,GAAG,CAAC,EAAE;AAC5DM,UAAAA,EAAE,GAAGC,GAAG;AACV,SAAC,MAAM;AACLF,UAAAA,EAAE,GAAGE,GAAG;AACV;AACF;AACA;MACA,IAAIF,EAAE,GAAGD,OAAO,EAAE;QAChB,OAAO,CAACnF,CAAC,EAAEC,CAAC,EAAEmF,EAAE,EAAE,IAAI,CAAC;AACzB;AACF;AACF;;AAEA;EACA,OAAO,UAAS7G,CAAC,EAAE;AACjB,IAAA,MAAMiB,KAAK,GAAGjB,CAAC,CAACwF,KAAK,CAACA,KAAK,CAACvE,KAAK,CAACsE,SAAS,CAAC,CAACtE,KAAK;AAAE;MAC9CwE,CAAC,GAAGxE,KAAK,CAACmB,MAAM;AAAE;AAClBsD,MAAAA,UAAU,GAAG1F,CAAC,CAACwF,KAAK,CAACG,QAAQ;AAAE;AAC/BC,MAAAA,SAAS,GAAGC,WAAW,CAACpF,KAAK,CAACT,CAAC,CAACwF,KAAK,EAAExF,CAAC,CAACwF,KAAK,CAACM,IAAI,CAAC,CAAC;;AAE3D,IAAA,IAAIc,OAAO,GAAGtB,aAAa,GAAGI,UAAU,GAAG,CAAC;AACxCsB,MAAAA,WAAW,GAAG,KAAK;AACnBC,MAAAA,YAAY,GAAG,KAAK;AACpBlB,MAAAA,YAAY,GAAG,CAAC;MAChBC,EAAE;MAAE9B,EAAE;MAAE+B,EAAE;MAAE9B,EAAE;MAAE1C,CAAC;MAAEC,CAAC;MAAEgF,EAAE;MAAEC,EAAE;MAAEO,GAAG;MAAEC,KAAK;MAAEC,GAAG;MAAEC,GAAG;MAAEC,KAAK;MAAEC,GAAG;MAAErB,SAAS;MAAEsB,MAAM;MAAEC,OAAO;;AAE9F;IACA,KAAK,IAAIjE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE;AACtBwC,MAAAA,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAAC/B,CAAC;AACfwE,MAAAA,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAAC9B,CAAC;AACfwC,MAAAA,EAAE,GAAGjD,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE,KAAK/D,SAAS,GAAG6F,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE;AACjDC,MAAAA,EAAE,GAAGlD,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE,KAAKhE,SAAS,GAAG8F,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE;MAEjD,IAAI6B,EAAE,GAAG9B,EAAE,EAAE;AACXuD,QAAAA,OAAO,GAAGzB,EAAE;AACZA,QAAAA,EAAE,GAAG9B,EAAE;AACPA,QAAAA,EAAE,GAAGuD,OAAO;AACd;MAEA,IAAIxB,EAAE,GAAG9B,EAAE,EAAE;AACXsD,QAAAA,OAAO,GAAGxB,EAAE;AACZA,QAAAA,EAAE,GAAG9B,EAAE;AACPA,QAAAA,EAAE,GAAGsD,OAAO;AACd;AAEAP,MAAAA,GAAG,GAAGtH,CAAC,CAACoG,EAAE,CAAC;AACXoB,MAAAA,GAAG,GAAGxH,CAAC,CAACsE,EAAE,CAAC;MACXiD,KAAK,GAAG,CAAC,EAAE,CAACD,GAAG,GAAGE,GAAG,IAAI,CAAC,CAAC;AAC3BC,MAAAA,GAAG,GAAGzH,CAAC,CAACqG,EAAE,CAAC;AACXsB,MAAAA,GAAG,GAAG3H,CAAC,CAACuE,EAAE,CAAC;MACXmD,KAAK,GAAG,CAAC,EAAE,CAACD,GAAG,GAAGE,GAAG,IAAI,CAAC,CAAC;;AAE3B;MACA,KAAKb,EAAE,GAAGS,KAAK,EAAET,EAAE,IAAIQ,GAAG,EAAE,EAAER,EAAE,EAAE;QAChC,KAAKC,EAAE,GAAGW,KAAK,EAAEX,EAAE,IAAIU,GAAG,EAAE,EAAEV,EAAE,EAAE;AAChCa,UAAAA,MAAM,GAAGf,QAAQ,CAACC,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEhB,SAAS,EAAEF,UAAU,CAAC;AACzD,UAAA,IAAI8B,MAAM,EAAE;AACV,YAAA,CAACxH,CAAC,CAACyB,CAAC,EAAEzB,CAAC,CAAC0B,CAAC,EAAEkF,OAAO,EAAEI,WAAW,CAAC,GAAGQ,MAAM;AAC3C;AACF;AACF;;AAEA;MACA,KAAKd,EAAE,GAAGS,KAAK,EAAET,EAAE,IAAIU,GAAG,EAAE,EAAEV,EAAE,EAAE;QAChC,KAAKC,EAAE,GAAGW,KAAK,EAAEX,EAAE,IAAIY,GAAG,EAAE,EAAEZ,EAAE,EAAE;AAChCa,UAAAA,MAAM,GAAGf,QAAQ,CAACC,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEhB,SAAS,EAAEF,UAAU,CAAC;AACzD,UAAA,IAAI8B,MAAM,EAAE;AACV,YAAA,CAACxH,CAAC,CAACyB,CAAC,EAAEzB,CAAC,CAAC0B,CAAC,EAAEkF,OAAO,EAAEI,WAAW,CAAC,GAAGQ,MAAM;AAC3C;AACF;AACF;;AAEA;AACA;AACA,MAAA,IAAI,CAACR,WAAW,IAAI,CAAC1B,aAAa,EAAE;AAClC;AACAY,QAAAA,SAAS,GAAGpB,IAAI,CAACqB,GAAG,CAACjC,EAAE,GAAG8B,EAAE,GAAG7B,EAAE,GAAG8B,EAAE,CAAC;AACvCxE,QAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;AACjBxC,QAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;;AAEjB;AACA,QAAA,IACE+B,SAAS,IAAIH,YAAY,IACzB,CAACpB,WAAW,CAAClD,CAAC,EAAEC,CAAC,EAAEkE,SAAS,EAAEF,UAAU,EAAEjF,KAAK,EAAEC,MAAM,CAAC,IACxD,CAAC4F,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEa,GAAG,EAAE,IAAI,CAAC,EACjE;AACAR,UAAAA,YAAY,GAAGG,SAAS;UACxBlG,CAAC,CAACyB,CAAC,GAAGA,CAAC;UACPzB,CAAC,CAAC0B,CAAC,GAAGA,CAAC;AACPuF,UAAAA,YAAY,GAAG,IAAI;AACrB;AACF;AACF;;AAEA;IACA,IAAID,WAAW,IAAIC,YAAY,EAAE;MAC/BxF,CAAC,GAAGmE,SAAS,GAAG,CAAC;MACjBlE,CAAC,GAAGgE,UAAU,GAAG,CAAC;AAClBa,MAAAA,GAAG,CAAC9B,QAAQ,CAAC7E,CAAC,CAACI,CAAC,CAACyB,CAAC,GAAGA,CAAC,CAAC,EAAE7B,CAAC,CAACI,CAAC,CAAC0B,CAAC,GAAGA,CAAC,CAAC,EAAE9B,CAAC,CAACI,CAAC,CAACyB,CAAC,GAAGA,CAAC,CAAC,EAAE7B,CAAC,CAACI,CAAC,CAAC0B,CAAC,GAAGA,CAAC,CAAC,CAAC;MAC5D1B,CAAC,CAACoG,KAAK,GAAG,QAAQ;MAClBpG,CAAC,CAACqG,QAAQ,GAAG,QAAQ;AACrB,MAAA,OAAO,IAAI;AACb,KAAC,MAAM;AACL,MAAA,OAAO,KAAK;AACd;GACD;AACH;;AC/HA;AACA,MAAMqB,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5B,MAAMC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAEb,gCAAA,EAAS/H,CAAC,EAAEyF,OAAO,EAAEC,aAAa,EAAEC,SAAS,EAAE;AAC5D,EAAA,MAAM9E,KAAK,GAAGb,CAAC,CAACa,KAAK;IACjBC,MAAM,GAAGd,CAAC,CAACc,MAAM;AACjB6F,IAAAA,GAAG,GAAGlB,OAAO,CAAC,CAAC,CAAC;AAAE;AAClBmB,IAAAA,GAAG,GAAGnB,OAAO,CAAC,CAAC,CAAC;AAAE;AAClBuC,IAAAA,GAAG,GAAGhI,CAAC,CAACE,MAAM,EAAE,CAAC;;AAErB;EACA,OAAO,UAASE,CAAC,EAAE;AACjB,IAAA,MAAMiB,KAAK,GAAGjB,CAAC,CAACwF,KAAK,CAACA,KAAK,CAACvE,KAAK,CAACsE,SAAS,CAAC,CAACtE,KAAK;AAAE;MAC9CwE,CAAC,GAAGxE,KAAK,CAACmB,MAAM;AAAE;AAClBsD,MAAAA,UAAU,GAAG1F,CAAC,CAACwF,KAAK,CAACG,QAAQ;AAAE;AAC/BC,MAAAA,SAAS,GAAGC,WAAW,CAACpF,KAAK,CAACT,CAAC,CAACwF,KAAK,EAAExF,CAAC,CAACwF,KAAK,CAACM,IAAI,CAAC;AAAE;MACtD+B,KAAK,GAAG,EAAE,CAAC;;AAEjB,IAAA,IAAIjB,OAAO,GAAGtB,aAAa,GAAGI,UAAU,GAAG,CAAC;AACxCsB,MAAAA,WAAW,GAAG,KAAK;AACnBC,MAAAA,YAAY,GAAG,KAAK;AACpBlB,MAAAA,YAAY,GAAG,CAAC;MAChBC,EAAE;MAAE9B,EAAE;MAAE+B,EAAE;MAAE9B,EAAE;MAAE1C,CAAC;MAAEC,CAAC;MAAEgF,EAAE;MAAEC,EAAE;MAAEE,EAAE;MAAEC,EAAE;MAAEC,GAAG;MAAEb,SAAS;;AAExD;IACA,KAAK,IAAI1C,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE;AACtBwC,MAAAA,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAAC/B,CAAC;AACfwE,MAAAA,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAAC9B,CAAC;AACfwC,MAAAA,EAAE,GAAGjD,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE,KAAK/D,SAAS,GAAG6F,EAAE,GAAG/E,KAAK,CAACuC,CAAC,CAAC,CAACU,EAAE;AACjDC,MAAAA,EAAE,GAAGlD,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE,KAAKhE,SAAS,GAAG8F,EAAE,GAAGhF,KAAK,CAACuC,CAAC,CAAC,CAACW,EAAE;;AAEjD;MACA0D,KAAK,CAACC,IAAI,CAAC,CAAClI,CAAC,CAAC,CAACoG,EAAE,GAAG9B,EAAE,IAAI,CAAC,CAAC,EAAEtE,CAAC,CAAC,CAACqG,EAAE,GAAG9B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEhD;MACA,OAAO0D,KAAK,CAACzF,MAAM,EAAE;QACnB,CAACsE,EAAE,EAAEC,EAAE,CAAC,GAAGkB,KAAK,CAACE,GAAG,EAAE;;AAEtB;QACA,IAAIxB,GAAG,CAACxC,GAAG,CAAC2C,EAAE,EAAEC,EAAE,CAAC,IAAIH,GAAG,CAACzC,GAAG,CAAC2C,EAAE,EAAEC,EAAE,CAAC,IAAIiB,GAAG,CAAC7D,GAAG,CAAC2C,EAAE,EAAEC,EAAE,CAAC,EAAE;;AAE3D;AACA;AACAiB,QAAAA,GAAG,CAAC3H,GAAG,CAACyG,EAAE,EAAEC,EAAE,CAAC;QACf,KAAK,IAAIqB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAE,EAAEA,CAAC,EAAE;AACtBvG,UAAAA,CAAC,GAAGiF,EAAE,GAAGgB,KAAK,CAACM,CAAC,CAAC;AACjBtG,UAAAA,CAAC,GAAGiF,EAAE,GAAGgB,KAAK,CAACK,CAAC,CAAC;UACjB,IAAI,CAACJ,GAAG,CAACjD,WAAW,CAAClD,CAAC,EAAEC,CAAC,EAAED,CAAC,EAAEC,CAAC,CAAC,EAAEmG,KAAK,CAACC,IAAI,CAAC,CAACrG,CAAC,EAAEC,CAAC,CAAC,CAAC;AACtD;;AAEA;AACAD,QAAAA,CAAC,GAAG7B,CAAC,CAACuF,MAAM,CAACuB,EAAE,CAAC;AAChBhF,QAAAA,CAAC,GAAG9B,CAAC,CAACuF,MAAM,CAACwB,EAAE,CAAC;AAChBE,QAAAA,EAAE,GAAGD,OAAO;QACZE,EAAE,GAAGpG,MAAM,CAAC;;QAEZ,IACE,CAACiE,WAAW,CAAClD,CAAC,EAAEC,CAAC,EAAEkE,SAAS,EAAEF,UAAU,EAAEjF,KAAK,EAAEC,MAAM,CAAC,IACxD,CAAC4F,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEiB,EAAE,EAAEN,GAAG,EAAEC,GAAG,CAAC,IACxD,CAACF,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEa,GAAG,EAAE,IAAI,CAAC,EACjE;AACA;AACA;AACA,UAAA,OAAOO,EAAE,GAAGD,EAAE,IAAI,CAAC,EAAE;AACnBE,YAAAA,GAAG,GAAG,CAACF,EAAE,GAAGC,EAAE,IAAI,CAAC;AACnB,YAAA,IAAIR,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEmB,GAAG,EAAER,GAAG,EAAEC,GAAG,CAAC,EAAE;AAC5DM,cAAAA,EAAE,GAAGC,GAAG;AACV,aAAC,MAAM;AACLF,cAAAA,EAAE,GAAGE,GAAG;AACV;AACF;AACA;UACA,IAAIF,EAAE,GAAGD,OAAO,EAAE;YAChB5G,CAAC,CAACyB,CAAC,GAAGA,CAAC;YACPzB,CAAC,CAAC0B,CAAC,GAAGA,CAAC;AACPkF,YAAAA,OAAO,GAAGC,EAAE;AACZG,YAAAA,WAAW,GAAG,IAAI;AACpB;AACF;AACF;;AAEA;AACA;AACA,MAAA,IAAI,CAACA,WAAW,IAAI,CAAC1B,aAAa,EAAE;AAClC;AACAY,QAAAA,SAAS,GAAGpB,IAAI,CAACqB,GAAG,CAACjC,EAAE,GAAG8B,EAAE,GAAG7B,EAAE,GAAG8B,EAAE,CAAC;AACvCxE,QAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;AACjBxC,QAAAA,CAAC,GAAG,CAACuE,EAAE,GAAG9B,EAAE,IAAI,CAAC;;AAEjB;AACA,QAAA,IACE+B,SAAS,IAAIH,YAAY,IACzB,CAACpB,WAAW,CAAClD,CAAC,EAAEC,CAAC,EAAEkE,SAAS,EAAEF,UAAU,EAAEjF,KAAK,EAAEC,MAAM,CAAC,IACxD,CAAC4F,SAAS,CAAC1G,CAAC,EAAE6B,CAAC,EAAEC,CAAC,EAAEgE,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEa,GAAG,EAAE,IAAI,CAAC,EACjE;AACAR,UAAAA,YAAY,GAAGG,SAAS;UACxBlG,CAAC,CAACyB,CAAC,GAAGA,CAAC;UACPzB,CAAC,CAAC0B,CAAC,GAAGA,CAAC;AACPuF,UAAAA,YAAY,GAAG,IAAI;AACrB;AACF;AACF;;AAEA;IACA,IAAID,WAAW,IAAIC,YAAY,EAAE;MAC/BxF,CAAC,GAAGmE,SAAS,GAAG,CAAC;MACjBlE,CAAC,GAAGgE,UAAU,GAAG,CAAC;AAClBa,MAAAA,GAAG,CAAC9B,QAAQ,CAAC7E,CAAC,CAACI,CAAC,CAACyB,CAAC,GAAGA,CAAC,CAAC,EAAE7B,CAAC,CAACI,CAAC,CAAC0B,CAAC,GAAGA,CAAC,CAAC,EAAE9B,CAAC,CAACI,CAAC,CAACyB,CAAC,GAAGA,CAAC,CAAC,EAAE7B,CAAC,CAACI,CAAC,CAAC0B,CAAC,GAAGA,CAAC,CAAC,CAAC;MAC5D1B,CAAC,CAACoG,KAAK,GAAG,QAAQ;MAClBpG,CAAC,CAACqG,QAAQ,GAAG,QAAQ;AACrB,MAAA,OAAO,IAAI;AACb,KAAC,MAAM;AACL,MAAA,OAAO,KAAK;AACd;GACD;AACH;;ACrHA,MAAM4B,MAAM,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;AACpCC,EAAAA,SAAS,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;AAE9B,uBAAA,EAAStI,CAAC,EAAEyF,OAAO,EAAE8C,OAAO,EAAEC,OAAO,EAAE;AACpD,EAAA,MAAM3H,KAAK,GAAGb,CAAC,CAACa,KAAK;IACfC,MAAM,GAAGd,CAAC,CAACc,MAAM;AACjB6F,IAAAA,GAAG,GAAGlB,OAAO,CAAC,CAAC,CAAC;AAChBmB,IAAAA,GAAG,GAAGnB,OAAO,CAAC,CAAC,CAAC;IAChBI,CAAC,GAAG2C,OAAO,CAAChG,MAAM;EAExB,OAAO,UAASpC,CAAC,EAAE;AACjB,IAAA,MAAME,QAAQ,GAAGF,CAAC,CAACE,QAAQ;AACrBwF,MAAAA,UAAU,GAAG1F,CAAC,CAACwF,KAAK,CAACG,QAAQ;;AAEnC;IACA,IAAIzF,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,GAAGO,KAAK,IAAIP,QAAQ,CAAC,CAAC,CAAC,GAAGQ,MAAM,EAAE;AACrF,MAAA,OAAO,KAAK;AACd;AAEA,IAAA,IAAIkF,SAAS,GAAG5F,CAAC,CAAC4F,SAAS,IAAI,CAAC;MAC5ByC,EAAE;MAAEC,EAAE;MAAEC,QAAQ;MAAEC,UAAU;MAAEC,YAAY;MAC1CzC,EAAE;MAAE9B,EAAE;MAAE+B,EAAE;MAAE9B,EAAE;MAAEuE,EAAE;MAAEC,EAAE;MACtBzB,GAAG;MAAEE,GAAG;MAAEC,GAAG;MAAEE,GAAG;;AAEtB;IACA,KAAK,IAAI/D,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE;MACtB6E,EAAE,GAAG,CAACF,OAAO,CAAC3E,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;MAC3B8E,EAAE,GAAG,CAAEH,OAAO,CAAC3E,CAAC,CAAC,KAAK,GAAG,GAAI,GAAG,IAAI,CAAC;AAErC+E,MAAAA,QAAQ,GAAIF,EAAE,KAAK,CAAC,IAAIC,EAAE,KAAK,CAAC,IAAKF,OAAO,CAAC5E,CAAC,CAAC,GAAG,CAAC;MACnDgF,UAAU,GAAGH,EAAE,IAAIC,EAAE,GAAGxD,IAAI,CAAC8D,OAAO,GAAG,CAAC;MACxCH,YAAY,GAAGL,OAAO,CAAC5E,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAEtCwC,MAAAA,EAAE,GAAG9F,QAAQ,CAAC,CAAC,GAAGmI,EAAE,CAAC,GAAGD,OAAO,CAAC5E,CAAC,CAAC,GAAG6E,EAAE,GAAGG,UAAU;MACpDG,EAAE,GAAGzI,QAAQ,CAAC,CAAC,GAAGoI,EAAE,CAAC,GAAIG,YAAY,GAAG/C,UAAU,GAAG4C,EAAE,GAAI,CAAC,GAAGF,OAAO,CAAC5E,CAAC,CAAC,GAAG8E,EAAE,GAAGE,UAAU;AAC3FvC,MAAAA,EAAE,GAAG0C,EAAE,GAAGjD,UAAU,GAAG,CAAC;AACxBvB,MAAAA,EAAE,GAAGwE,EAAE,GAAGjD,UAAU,GAAG,CAAC;AAExBwB,MAAAA,GAAG,GAAGtH,CAAC,CAACoG,EAAE,CAAC;AACXqB,MAAAA,GAAG,GAAGzH,CAAC,CAACqG,EAAE,CAAC;AACXsB,MAAAA,GAAG,GAAG3H,CAAC,CAACuE,EAAE,CAAC;MAEX,IAAI,CAACyB,SAAS,EAAE;AACd;QACA,IAAI,CAACiD,IAAI,CAAC3B,GAAG,EAAEA,GAAG,EAAEG,GAAG,EAAEE,GAAG,EAAEhB,GAAG,EAAEC,GAAG,EAAER,EAAE,EAAEA,EAAE,EAAEC,EAAE,EAAE9B,EAAE,EAAEjE,QAAQ,EAAEqI,QAAQ,CAAC,EAAE;AAC3E;AACA,UAAA;AACF,SAAC,MAAM;AACL;AACA3C,UAAAA,SAAS,GAAGC,WAAW,CAACpF,KAAK,CAACT,CAAC,CAACwF,KAAK,EAAExF,CAAC,CAACwF,KAAK,CAACM,IAAI,CAAC;AACtD;AACF;MAEA4C,EAAE,GAAG1C,EAAE,GAAIyC,YAAY,GAAG7C,SAAS,GAAGyC,EAAE,GAAI,CAAC;AAC7CrC,MAAAA,EAAE,GAAG0C,EAAE,GAAG9C,SAAS,GAAG,CAAC;AACvB1B,MAAAA,EAAE,GAAGwE,EAAE,GAAG9C,SAAS,GAAG,CAAC;AAEvBsB,MAAAA,GAAG,GAAGtH,CAAC,CAACoG,EAAE,CAAC;AACXoB,MAAAA,GAAG,GAAGxH,CAAC,CAACsE,EAAE,CAAC;MAEX,IAAI2E,IAAI,CAAC3B,GAAG,EAAEE,GAAG,EAAEC,GAAG,EAAEE,GAAG,EAAEhB,GAAG,EAAEC,GAAG,EAAER,EAAE,EAAE9B,EAAE,EAAE+B,EAAE,EAAE9B,EAAE,EAAEjE,QAAQ,EAAEqI,QAAQ,CAAC,EAAE;AAC1E;AACAvI,QAAAA,CAAC,CAACyB,CAAC,GAAG,CAAC4G,EAAE,GAAGK,EAAE,GAAGL,EAAE,GAAGI,YAAY,GAAG,CAAC,GAAGvE,EAAE,GAAG8B,EAAE;AAChDhG,QAAAA,CAAC,CAAC0B,CAAC,GAAG,CAAC4G,EAAE,GAAGK,EAAE,GAAGL,EAAE,GAAGG,YAAY,GAAG,CAAC,GAAGtE,EAAE,GAAG8B,EAAE;QAEhDjG,CAAC,CAACoG,KAAK,GAAG6B,MAAM,CAACI,EAAE,GAAGI,YAAY,GAAG,CAAC,CAAC;QACvCzI,CAAC,CAACqG,QAAQ,GAAG6B,SAAS,CAACI,EAAE,GAAGG,YAAY,GAAG,CAAC,CAAC;QAE7ClC,GAAG,CAAC9B,QAAQ,CAACyC,GAAG,EAAEG,GAAG,EAAED,GAAG,EAAEG,GAAG,CAAC;AAChC,QAAA,OAAO,IAAI;AACb;AACF;AAEA,IAAA,OAAO,KAAK;GACb;AACH;;AAEA;AACA,SAASsB,IAAIA,CAAC3B,GAAG,EAAEE,GAAG,EAAEC,GAAG,EAAEE,GAAG,EAAEhB,GAAG,EAAEC,GAAG,EAAER,EAAE,EAAE9B,EAAE,EAAE+B,EAAE,EAAE9B,EAAE,EAAEjE,QAAQ,EAAEqI,QAAQ,EAAE;AAC9E,EAAA,OAAO,EACLhC,GAAG,CAAC5B,WAAW,CAACuC,GAAG,EAAEG,GAAG,EAAED,GAAG,EAAEG,GAAG,CAAC,IACnC,CAAEgB,QAAQ,IAAI/B,GAAG,IAAKD,GAAG,EAAEtC,QAAQ,CAACiD,GAAG,EAAEG,GAAG,EAAED,GAAG,EAAEG,GAAG,CAAC,CACxD;AACH;;AC7EA;AACA,MAAMuB,GAAG,GAAM,GAAG;AACZC,EAAAA,MAAM,GAAG,GAAG;AACZC,EAAAA,MAAM,GAAG,GAAG;AACZC,EAAAA,IAAI,GAAK,GAAG;AACZC,EAAAA,MAAM,GAAG,GAAG;AACZC,EAAAA,KAAK,GAAI,GAAG;;AAElB;AACA,MAAMC,UAAU,GAAG;EACjB,UAAU,EAAMN,GAAG,GAAGG,IAAI;EAC1B,KAAK,EAAWH,GAAG,GAAGI,MAAM;EAC5B,WAAW,EAAKJ,GAAG,GAAGK,KAAK;EAC3B,MAAM,EAAUJ,MAAM,GAAGE,IAAI;EAC7B,QAAQ,EAAQF,MAAM,GAAGG,MAAM;EAC/B,OAAO,EAASH,MAAM,GAAGI,KAAK;EAC9B,aAAa,EAAGH,MAAM,GAAGC,IAAI;EAC7B,QAAQ,EAAQD,MAAM,GAAGE,MAAM;EAC/B,cAAc,EAAEF,MAAM,GAAGG;AAC3B,CAAC;AAED,MAAME,cAAc,GAAG;AACrB,EAAA,OAAO,EAAEC,mBAAmB;AAC5B,EAAA,gBAAgB,EAAEC,2BAA2B;AAC7C,EAAA,WAAW,EAAEC;AACf,CAAC;AAEc,oBAAA,EAASC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAC1DvJ,UAAU,EAAEgF,aAAa,EAAEwE,UAAU,EAAEvE,SAAS,EAAEX,OAAO,EAAEmF,MAAM,EACnE;AACE;AACA,EAAA,IAAI,CAACN,KAAK,CAACrH,MAAM,EAAE,OAAOqH,KAAK;AAE/B,EAAA,MAAMO,SAAS,GAAGlF,IAAI,CAACC,GAAG,CAAC6E,MAAM,CAACxH,MAAM,EAAEyH,MAAM,CAACzH,MAAM,CAAC;AAClDgG,IAAAA,OAAO,GAAG6B,UAAU,CAACL,MAAM,EAAEI,SAAS,CAAC;AACvC7B,IAAAA,OAAO,GAAG+B,UAAU,CAACL,MAAM,EAAEG,SAAS,CAAC;IACvCzH,QAAQ,GAAG4H,QAAQ,CAACV,KAAK,CAAC,CAAC,CAAC,CAACjE,KAAK,CAAC;AACnC4E,IAAAA,SAAS,GAAG7H,QAAQ,KAAK,OAAO,IAAIkH,KAAK,CAAC,CAAC,CAAC,CAACjE,KAAK,CAACvE,KAAK,CAACsE,SAAS,CAAC,CAAChD,QAAQ;IAC5E/B,WAAW,GAAG4J,SAAS,KAAK,MAAM;IAClClK,QAAQ,GAAGmK,YAAY,CAAC9H,QAAQ,EAAE6H,SAAS,EAAEN,UAAU,EAAEvE,SAAS,CAAC;AACnE+E,IAAAA,UAAU,GAAG1F,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK2F,QAAQ;AACrDC,IAAAA,gBAAgB,GAAGhK,WAAW,IAAIuJ,MAAM,KAAK,OAAO;EAE1D,IAAIU,YAAY,GAAG,EAAE;IACjBC,aAAa,GAAG,EAAE;;AAEtB;AACA,EAAA,MAAM7K,IAAI,GAAG4J,KAAK,CAAC/G,GAAG,CAAC1C,CAAC,IAAI;AAC1B,IAAA,MAAM4F,SAAS,GAAG0E,UAAU,GAAGzE,WAAW,CAACpF,KAAK,CAACT,CAAC,EAAEA,CAAC,CAAC8F,IAAI,CAAC,GAAG3F,SAAS;IACvEsK,YAAY,GAAG3F,IAAI,CAACC,GAAG,CAAC0F,YAAY,EAAE7E,SAAS,CAAC;IAChD8E,aAAa,GAAG5F,IAAI,CAACC,GAAG,CAAC2F,aAAa,EAAE1K,CAAC,CAAC2F,QAAQ,CAAC;IAEnD,OAAO;AACLH,MAAAA,KAAK,EAAExF,CAAC;AACR2K,MAAAA,OAAO,EAAE,CAAC;AACVlJ,MAAAA,CAAC,EAAEtB,SAAS;AACZuB,MAAAA,CAAC,EAAEvB,SAAS;AACZiG,MAAAA,KAAK,EAAEjG,SAAS;AAChBkG,MAAAA,QAAQ,EAAElG,SAAS;AACnBD,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,CAAC,CAAC;AACrB4F,MAAAA;KACD;AACH,GAAC,CAAC;EAEFhB,OAAO,GAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK2F,QAAQ,GAC/CzF,IAAI,CAACC,GAAG,CAAC0F,YAAY,EAAEC,aAAa,CAAC,GAAG5F,IAAI,CAACC,GAAG,CAAC,GAAG6E,MAAM,CAAC,GAC3DhF,OAAO;AACX,EAAA,MAAMhF,CAAC,GAAGgL,MAAM,CAAClB,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAE9E,OAAO,CAAC;AAE3C,EAAA,IAAIS,OAAO;EACX,IAAI,CAACmF,gBAAgB,EAAE;AACrB;AACA,IAAA,IAAIb,OAAO,EAAE;AACX9J,MAAAA,IAAI,CAACgL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKpB,OAAO,CAACmB,CAAC,CAACtF,KAAK,EAAEuF,CAAC,CAACvF,KAAK,CAAC,CAAC;AAChD;;AAEA;IACA,IAAIjF,WAAW,GAAG,KAAK;AACvB,IAAA,KAAK,IAAIiD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG2E,OAAO,CAAC/F,MAAM,IAAI,CAAC7B,WAAW,EAAE,EAAEiD,CAAC,EAAE;AACrD;AACA;AACAjD,MAAAA,WAAW,GAAG4H,OAAO,CAAC3E,CAAC,CAAC,KAAK,GAAG,IAAI4E,OAAO,CAAC5E,CAAC,CAAC,GAAG,CAAC;AACpD;;AAEA;AACA;AACA,IAAA,MAAMnD,QAAQ,GAAG,CAAEkC,QAAQ,IAAI+C,aAAa,IAAK9E,WAAW,KAAKiJ,KAAK,CAAC/G,GAAG,CAAC1C,CAAC,IAAIA,CAAC,CAACwF,KAAK,CAAC;;AAExF;AACAH,IAAAA,OAAO,GAAG/E,UAAU,CAAC8B,MAAM,IAAI/B,QAAQ,GACnCD,WAAW,CAACR,CAAC,EAAES,QAAQ,IAAI,EAAE,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,CAAC,GACpEb,WAAW,CAACC,CAAC,EAAE0F,aAAa,IAAIzF,IAAI,CAAC;AAC3C;;AAEA;EACA,MAAMmL,KAAK,GAAGxK,WAAW,GACrB6I,cAAc,CAACU,MAAM,CAAC,CAACnK,CAAC,EAAEyF,OAAO,EAAEC,aAAa,EAAEC,SAAS,CAAC,GAC5D0F,cAAc,CAACrL,CAAC,EAAEyF,OAAO,EAAE8C,OAAO,EAAEC,OAAO,CAAC;;AAEhD;AACAvI,EAAAA,IAAI,CAACE,OAAO,CAACC,CAAC,IAAIA,CAAC,CAAC2K,OAAO,GAAG,CAACK,KAAK,CAAChL,CAAC,CAAC,CAAC;AAExC,EAAA,OAAOH,IAAI;AACb;AAEA,SAASoK,UAAUA,CAAC/E,CAAC,EAAEgG,KAAK,EAAE;AAC5B,EAAA,MAAM9C,OAAO,GAAG,IAAI+C,YAAY,CAACD,KAAK,CAAC;IACjCzF,CAAC,GAAGP,CAAC,CAAC9C,MAAM;EAClB,KAAK,IAAIoB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE4E,OAAO,CAAC5E,CAAC,CAAC,GAAG0B,CAAC,CAAC1B,CAAC,CAAC,IAAI,CAAC;EAC9C,KAAK,IAAIA,CAAC,GAACiC,CAAC,EAAEjC,CAAC,GAAC0H,KAAK,EAAE,EAAE1H,CAAC,EAAE4E,OAAO,CAAC5E,CAAC,CAAC,GAAG4E,OAAO,CAAC3C,CAAC,GAAG,CAAC,CAAC;AACvD,EAAA,OAAO2C,OAAO;AAChB;AAEA,SAAS8B,UAAUA,CAAChF,CAAC,EAAEgG,KAAK,EAAE;AAC5B,EAAA,MAAM/C,OAAO,GAAG,IAAIiD,SAAS,CAACF,KAAK,CAAC;IAC9BzF,CAAC,GAAGP,CAAC,CAAC9C,MAAM;EAClB,KAAK,IAAIoB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiC,CAAC,EAAE,EAAEjC,CAAC,EAAE2E,OAAO,CAAC3E,CAAC,CAAC,IAAI4F,UAAU,CAAClE,CAAC,CAAC1B,CAAC,CAAC,CAAC;EACtD,KAAK,IAAIA,CAAC,GAACiC,CAAC,EAAEjC,CAAC,GAAC0H,KAAK,EAAE,EAAE1H,CAAC,EAAE2E,OAAO,CAAC3E,CAAC,CAAC,GAAG2E,OAAO,CAAC1C,CAAC,GAAG,CAAC,CAAC;AACvD,EAAA,OAAO0C,OAAO;AAChB;AAEA,SAASgC,QAAQA,CAACtH,IAAI,EAAE;EACtB,OAAOA,IAAI,IAAIA,IAAI,CAACP,IAAI,IAAIO,IAAI,CAACP,IAAI,CAACC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8H,YAAYA,CAAC9H,QAAQ,EAAE6H,SAAS,EAAEN,UAAU,EAAEvE,SAAS,EAAE;AAChE,EAAA,MAAM8F,EAAE,GAAGrL,CAAC,IAAI,CAACA,CAAC,CAACyB,CAAC,EAAEzB,CAAC,CAACyB,CAAC,EAAEzB,CAAC,CAACyB,CAAC,EAAEzB,CAAC,CAAC0B,CAAC,EAAE1B,CAAC,CAAC0B,CAAC,EAAE1B,CAAC,CAAC0B,CAAC,CAAC;EAE9C,IAAI,CAACa,QAAQ,EAAE;IACb,OAAO8I,EAAE,CAAC;GACX,MAEI,IAAI9I,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,MAAM,EAAE;AACnD,IAAA,OAAOvC,CAAC,IAAIqL,EAAE,CAACrL,CAAC,CAACwF,KAAK,CAAC;AACzB,GAAC,MAEI,IAAI4E,SAAS,KAAK,MAAM,EAAE;AAC7B,IAAA,OAAOpK,CAAC,IAAI;MACV,MAAMiB,KAAK,GAAGjB,CAAC,CAACwF,KAAK,CAACvE,KAAK,CAACsE,SAAS,CAAC,CAACtE,KAAK;MAC5C,OAAOoK,EAAE,CAACpK,KAAK,CAACmB,MAAM,GAClBnB,KAAK,CAAC6I,UAAU,KAAK,OAAO,GAAG,CAAC,GAAG7I,KAAK,CAACmB,MAAM,GAAG,CAAC,CAAC,GACpD;AAACX,QAAAA,CAAC,EAAE6J,GAAG;AAAE5J,QAAAA,CAAC,EAAE4J;AAAG,OAAC,CAAC;KACtB;AACH,GAAC,MAEI;AACH,IAAA,OAAOtL,CAAC,IAAI;AACV,MAAA,MAAM+K,CAAC,GAAG/K,CAAC,CAACwF,KAAK,CAAC+F,MAAM;AACxB,MAAA,OAAO,CAACR,CAAC,CAAC/E,EAAE,EAAE,CAAC+E,CAAC,CAAC/E,EAAE,GAAG+E,CAAC,CAAC7G,EAAE,IAAI,CAAC,EAAE6G,CAAC,CAAC7G,EAAE,EAAE6G,CAAC,CAAC9E,EAAE,EAAE,CAAC8E,CAAC,CAAC9E,EAAE,GAAG8E,CAAC,CAAC5G,EAAE,IAAI,CAAC,EAAE4G,CAAC,CAAC5G,EAAE,CAAC;KACtE;AACH;AACF;;AClKA,MAAMqH,MAAM,GAAG,CACb,GAAG,EACH,GAAG,EACH,SAAS,EACT,OAAO,EACP,UAAU,CACX;AAED,MAAMC,OAAO,GAAG,CACd,UAAU,EACV,MAAM,EACN,aAAa,EACb,KAAK,EACL,QAAQ,EACR,WAAW,EACX,OAAO,EACP,cAAc,CACf;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,KAAKA,CAACC,MAAM,EAAE;EACpCC,SAAS,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAEF,MAAM,CAAC;AACpC;AAEAD,KAAK,CAACI,UAAU,GAAG;AACjBzJ,EAAAA,IAAI,EAAE,OAAO;AACb0J,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,QAAQ,EAAE;GAAM;AAC5BL,EAAAA,MAAM,EAAE,CACN;AAAEM,IAAAA,IAAI,EAAE,MAAM;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAEsB,IAAAA,KAAK,EAAE,IAAI;AAAEvB,IAAAA,MAAM,EAAE,CAAC;AAAE8J,IAAAA,QAAQ,EAAE;AAAK,GAAC,EACxE;AAAED,IAAAA,IAAI,EAAE,MAAM;AAAE5J,IAAAA,IAAI,EAAE;AAAU,GAAC,EACjC;AAAE4J,IAAAA,IAAI,EAAE,QAAQ;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAEsB,IAAAA,KAAK,EAAE,IAAI;AAAEwI,IAAAA,OAAO,EAAEV;AAAQ,GAAC,EACjE;AAAEQ,IAAAA,IAAI,EAAE,QAAQ;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAEsB,IAAAA,KAAK,EAAE,IAAI;IAAEwI,OAAO,EAAE,CAAC,CAAC;AAAE,GAAC,EAC7D;AAAEF,IAAAA,IAAI,EAAE,SAAS;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAE8J,IAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAK,GAAC,EAC3D;AAAEH,IAAAA,IAAI,EAAE,YAAY;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAEgK,IAAAA,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;AAAEF,IAAAA,OAAO,EAAE;AAAM,GAAC,EAChF;AAAEF,IAAAA,IAAI,EAAE,WAAW;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAE8J,IAAAA,OAAO,EAAE;AAAE,GAAC,EACjD;AAAEF,IAAAA,IAAI,EAAE,eAAe;AAAE5J,IAAAA,IAAI,EAAE,SAAS;AAAE8J,IAAAA,OAAO,EAAE;AAAK,GAAC,EACzD;AAAEF,IAAAA,IAAI,EAAE,YAAY;AAAE5J,IAAAA,IAAI,EAAE,MAAM;AAAEsB,IAAAA,KAAK,EAAE;AAAK,GAAC,EACjD;AAAEsI,IAAAA,IAAI,EAAE,QAAQ;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAE8J,IAAAA,OAAO,EAAE;AAAO,GAAC,EACnD;AAAEF,IAAAA,IAAI,EAAE,IAAI;AAAE5J,IAAAA,IAAI,EAAE,QAAQ;AAAEsB,IAAAA,KAAK,EAAE,IAAI;IAAEvB,MAAM,EAAEoJ,MAAM,CAACpJ,MAAM;AAAE+J,IAAAA,OAAO,EAAEX;GAAQ;AAEvF,CAAC;AAEDc,QAAQ,CAACZ,KAAK,EAAEE,SAAS,EAAE;AACzBW,EAAAA,SAASA,CAACrH,CAAC,EAAEsH,KAAK,EAAE;IAClB,SAASC,IAAIA,CAACC,KAAK,EAAE;AACnB,MAAA,MAAMC,CAAC,GAAGzH,CAAC,CAACwH,KAAK,CAAC;AAClB,MAAA,OAAOE,UAAU,CAACD,CAAC,CAAC,IAAIH,KAAK,CAACK,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC;AAClD;AAEA,IAAA,MAAMC,GAAG,GAAG7H,CAAC,CAAC2H,QAAQ,EAAE;AACxB,IAAA,IAAI,EAAEE,GAAG,IAAIP,KAAK,CAACQ,OAAO,CAACR,KAAK,CAACS,OAAO,CAAC,IAAIR,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;AAC5D,IAAA,IAAI,CAACvH,CAAC,CAACwE,IAAI,IAAIxE,CAAC,CAACwE,IAAI,CAACtH,MAAM,KAAK,CAAC,EAAE;MAClC8K,KAAK,CAAC,gEAAgE,CAAC;AACzE;AAEA,IAAA,MAAMC,EAAE,GAAGjI,CAAC,CAACiI,EAAE,IAAI3B,MAAM;;AAEzB;IACA4B,WAAW,CACTZ,KAAK,CAACa,WAAW,CAACb,KAAK,CAACc,MAAM,CAAC,CAAC1K,MAAM,IAAI,EAAE,EAC5CsC,CAAC,CAACwE,IAAI,EACNxE,CAAC,CAAC2F,IAAI,EACNlH,KAAK,CAACuB,CAAC,CAAC0E,MAAM,IAAI,IAAI,GAAG,CAAC,GAAG1E,CAAC,CAAC0E,MAAM,CAAC,EACtCjG,KAAK,CAACuB,CAAC,CAAC2E,MAAM,IAAI4B,OAAO,CAAC,EAC1BvG,CAAC,CAAC5E,UAAU,IAAI,EAAE,EAClB4E,CAAC,CAACI,aAAa,KAAK,KAAK,EACzBJ,CAAC,CAAC4E,UAAU,IAAI,KAAK,EACrB5E,CAAC,CAACK,SAAS,IAAI,CAAC,EAChBL,CAAC,CAACN,OAAO,KAAKzE,SAAS,GAAG,CAAC,GAAG+E,CAAC,CAACN,OAAO,EACvCM,CAAC,CAAC6E,MAAM,IAAI,OACd,CAAC,CAAChK,OAAO,CAACwN,CAAC,IAAI;AACb;AACA,MAAA,MAAMC,CAAC,GAAGD,CAAC,CAAC/H,KAAK;MACjBgI,CAAC,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,CAAC9L,CAAC;MACd+L,CAAC,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,CAAC7L,CAAC;MACd8L,CAAC,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,CAAC5C,OAAO;MACpB6C,CAAC,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,CAACnH,KAAK;MAClBoH,CAAC,CAACL,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,CAAClH,QAAQ;AACvB,KAAC,CAAC;IAEF,OAAOmG,KAAK,CAACiB,MAAM,CAACV,GAAG,CAAC,CAACf,QAAQ,CAACmB,EAAE,CAAC;AACvC;AACF,CAAC,CAAC;;;;"}