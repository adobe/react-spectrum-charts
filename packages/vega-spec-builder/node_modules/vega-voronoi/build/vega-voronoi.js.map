{"version":3,"file":"vega-voronoi.js","sources":["../src/Voronoi.js"],"sourcesContent":["import {Transform} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\nimport {Delaunay} from 'd3-delaunay';\n\nexport default function Voronoi(params) {\n  Transform.call(this, null, params);\n}\n\nVoronoi.Definition = {\n  'type': 'Voronoi',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'x', 'type': 'field', 'required': true },\n    { 'name': 'y', 'type': 'field', 'required': true },\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'extent', 'type': 'array', 'array': true, 'length': 2,\n      'default': [[-1e5, -1e5], [1e5, 1e5]],\n      'content': {'type': 'number', 'array': true, 'length': 2} },\n    { 'name': 'as', 'type': 'string', 'default': 'path' }\n  ]\n};\n\nconst defaultExtent = [-1e5, -1e5, 1e5, 1e5];\n\ninherits(Voronoi, Transform, {\n  transform(_, pulse) {\n    const as = _.as || 'path',\n          data = pulse.source;\n\n    // nothing to do if no data\n    if (!data || !data.length) return pulse;\n\n    // configure and construct voronoi diagram\n    let s = _.size;\n    s = s ? [0, 0, s[0], s[1]]\n      : (s = _.extent) ? [s[0][0], s[0][1], s[1][0], s[1][1]]\n      : defaultExtent;\n\n    const voronoi = this.value = Delaunay.from(data, _.x, _.y).voronoi(s);\n\n    // map polygons to paths\n    for (let i=0, n=data.length; i<n; ++i) {\n      const polygon = voronoi.cellPolygon(i);\n      data[i][as] = polygon && !isPoint(polygon) ? toPathString(polygon) : null;\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n});\n\n// suppress duplicated end point vertices\nfunction toPathString(p) {\n  const x = p[0][0],\n        y = p[0][1];\n\n  let n = p.length - 1;\n  for (; p[n][0] === x && p[n][1] === y; --n);\n\n  return 'M' + p.slice(0, n + 1).join('L') + 'Z';\n}\n\nfunction isPoint(p) {\n  return p.length === 2 && p[0][0] === p[1][0] && p[0][1] === p[1][1];\n}\n"],"names":["Voronoi","params","Transform","call","Definition","defaultExtent","inherits","transform","_","pulse","as","data","source","length","s","size","extent","voronoi","value","Delaunay","from","x","y","i","n","polygon","cellPolygon","isPoint","toPathString","reflow","modified","modifies","p","slice","join"],"mappings":"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"}