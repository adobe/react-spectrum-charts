{"version":3,"file":"vega-wordcloud.js","sources":["../src/CloudLayout.js","../src/Wordcloud.js"],"sourcesContent":["import {canvas} from 'vega-canvas';\n\n/*\nCopyright (c) 2013, Jason Davies.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n  * The name Jason Davies may not be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nexport default function() {\n  var size = [256, 256],\n      text,\n      font,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      rotate,\n      padding,\n      spiral = archimedeanSpiral,\n      words = [],\n      random = Math.random,\n      cloud = {};\n\n  cloud.layout = function() {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(d => ({\n          text: text(d),\n          font: font(d),\n          style: fontStyle(d),\n          weight: fontWeight(d),\n          rotate: rotate(d),\n          size: ~~(fontSize(d) + 1e-14),\n          padding: padding(d),\n          xoff: 0,\n          yoff: 0,\n          x1: 0,\n          y1: 0,\n          x0: 0,\n          y0: 0,\n          hasText: false,\n          sprite: null,\n          datum: d\n        })).sort((a, b) => b.size - a.size);\n\n    while (++i < n) {\n      var d = data[i];\n      d.x = (size[0] * (random() + .5)) >> 1;\n      d.y = (size[1] * (random() + .5)) >> 1;\n      cloudSprite(contextAndRatio, d, data, i);\n      if (d.hasText && place(board, d, bounds)) {\n        tags.push(d);\n        if (bounds) cloudBounds(bounds, d);\n        else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n        // Temporary hack\n        d.x -= size[0] >> 1;\n        d.y -= size[1] >> 1;\n      }\n    }\n\n    return tags;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    var context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n\n    return {context: context, ratio: ratio};\n  }\n\n  function place(board, tag, bounds) {\n    var startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.hypot(size[0], size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          tag.sprite = null;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.words = function(_) {\n    if (arguments.length) {\n      words = _;\n      return cloud;\n    } else {\n      return words;\n    }\n  };\n\n  cloud.size = function(_) {\n    if (arguments.length) {\n      size = [+_[0], +_[1]];\n      return cloud;\n    } else {\n      return size;\n    }\n  };\n\n  cloud.font = function(_) {\n    if (arguments.length) {\n      font = functor(_);\n      return cloud;\n    } else {\n      return font;\n    }\n  };\n\n  cloud.fontStyle = function(_) {\n    if (arguments.length) {\n      fontStyle = functor(_);\n      return cloud;\n    } else {\n      return fontStyle;\n    }\n  };\n\n  cloud.fontWeight = function(_) {\n    if (arguments.length) {\n      fontWeight = functor(_);\n      return cloud;\n    } else {\n      return fontWeight;\n    }\n  };\n\n  cloud.rotate = function(_) {\n    if (arguments.length) {\n      rotate = functor(_);\n      return cloud;\n    } else {\n      return rotate;\n    }\n  };\n\n  cloud.text = function(_) {\n    if (arguments.length) {\n      text = functor(_);\n      return cloud;\n    } else {\n      return text;\n    }\n  };\n\n  cloud.spiral = function(_) {\n    if (arguments.length) {\n      spiral = spirals[_] || _;\n      return cloud;\n    } else {\n      return spiral;\n    }\n  };\n\n  cloud.fontSize = function(_) {\n    if (arguments.length) {\n      fontSize = functor(_);\n      return cloud;\n    } else {\n      return fontSize;\n    }\n  };\n\n  cloud.padding = function(_) {\n    if (arguments.length) {\n      padding = functor(_);\n      return cloud;\n    } else {\n      return padding;\n    }\n  };\n\n  cloud.random = function(_) {\n    if (arguments.length) {\n      random = _;\n      return cloud;\n    } else {\n      return random;\n    }\n  };\n\n  return cloud;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length,\n      w, w32, h, i, j;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n    w = c.measureText(d.text + 'm').width * ratio;\n    h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = (w + 0x1f) >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= (cw << 5)) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    w = d.width;\n    w32 = w >> 5;\n    h = d.y1 - d.y0;\n    // Zero the buffer\n    for (i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n    for (j = 0; j < h; j++) {\n      for (i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n          & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function(t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:  x += dx; break;\n      case 1:  y += dy; break;\n      case 2:  x -= dx; break;\n      default: y -= dy; break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\n\nfunction functor(d) {\n  return typeof d === 'function' ? d : function() { return d; };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n","import cloud from './CloudLayout.js';\nimport {Transform} from 'vega-dataflow';\nimport {constant, error, extent, inherits, isFunction} from 'vega-util';\nimport {scale} from 'vega-scale';\nimport {random} from 'vega-statistics';\n\nconst Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\n\nconst Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\n\nexport default function Wordcloud(params) {\n  Transform.call(this, cloud(), params);\n}\n\nWordcloud.Definition = {\n  'type': 'Wordcloud',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'size', 'type': 'number', 'array': true, 'length': 2 },\n    { 'name': 'font', 'type': 'string', 'expr': true, 'default': 'sans-serif' },\n    { 'name': 'fontStyle', 'type': 'string', 'expr': true, 'default': 'normal' },\n    { 'name': 'fontWeight', 'type': 'string', 'expr': true, 'default': 'normal' },\n    { 'name': 'fontSize', 'type': 'number', 'expr': true, 'default': 14 },\n    { 'name': 'fontSizeRange', 'type': 'number', 'array': 'nullable', 'default': [10, 50] },\n    { 'name': 'rotate', 'type': 'number', 'expr': true, 'default': 0 },\n    { 'name': 'text', 'type': 'field' },\n    { 'name': 'spiral', 'type': 'string', 'values': ['archimedean', 'rectangular'] },\n    { 'name': 'padding', 'type': 'number', 'expr': true },\n    { 'name': 'as', 'type': 'string', 'array': true, 'length': 7, 'default': Output }\n  ]\n};\n\ninherits(Wordcloud, Transform, {\n  transform(_, pulse) {\n    if (_.size && !(_.size[0] && _.size[1])) {\n      error('Wordcloud size dimensions must be non-zero.');\n    }\n\n    function modp(param) {\n      const p = _[param];\n      return isFunction(p) && pulse.modified(p.fields);\n    }\n\n    const mod = _.modified();\n    if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n\n    const data = pulse.materialize(pulse.SOURCE).source,\n          layout = this.value,\n          as = _.as || Output;\n\n    let fontSize = _.fontSize || 14,\n        range;\n\n    isFunction(fontSize)\n      ? (range = _.fontSizeRange)\n      : (fontSize = constant(fontSize));\n\n    // create font size scaling function as needed\n    if (range) {\n      const fsize = fontSize,\n            sizeScale = scale('sqrt')()\n              .domain(extent(data, fsize))\n              .range(range);\n      fontSize = x => sizeScale(fsize(x));\n    }\n\n    data.forEach(t => {\n      t[as[0]] = NaN;\n      t[as[1]] = NaN;\n      t[as[3]] = 0;\n    });\n\n    // configure layout\n    const words = layout\n      .words(data)\n      .text(_.text)\n      .size(_.size || [500, 500])\n      .padding(_.padding || 1)\n      .spiral(_.spiral || 'archimedean')\n      .rotate(_.rotate || 0)\n      .font(_.font || 'sans-serif')\n      .fontStyle(_.fontStyle || 'normal')\n      .fontWeight(_.fontWeight || 'normal')\n      .fontSize(fontSize)\n      .random(random)\n      .layout();\n\n    const size = layout.size(),\n        dx = size[0] >> 1,\n        dy = size[1] >> 1,\n        n = words.length;\n\n    for (let i = 0, w, t; i<n; ++i) {\n      w = words[i];\n      t = w.datum;\n      t[as[0]] = w.x + dx;\n      t[as[1]] = w.y + dy;\n      t[as[2]] = w.font;\n      t[as[3]] = w.size;\n      t[as[4]] = w.style;\n      t[as[5]] = w.weight;\n      t[as[6]] = w.rotate;\n    }\n\n    return pulse.reflow(mod).modifies(as);\n  }\n});\n"],"names":["cloudRadians","Math","PI","cw","ch","size","text","font","fontSize","fontStyle","fontWeight","rotate","padding","spiral","archimedeanSpiral","words","random","cloud","layout","contextAndRatio","getContext","canvas","board","zeroArray","bounds","n","length","i","tags","data","map","d","style","weight","xoff","yoff","x1","y1","x0","y0","hasText","sprite","datum","sort","a","b","x","y","cloudSprite","place","push","cloudBounds","width","height","ratio","sqrt","getImageData","context","fillStyle","strokeStyle","textAlign","tag","startX","startY","maxDelta","hypot","s","dt","t","dxdy","dx","dy","min","abs","cloudCollide","collideRects","w","sw","lx","sx","msx","h","last","j","_","arguments","functor","spirals","di","c","clearRect","maxh","w32","save","measureText","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","translate","fillText","lineWidth","strokeText","restore","pixels","seen","seenRow","k","m","slice","b0","b1","e","rectangularSpiral","sign","archimedean","rectangular","Output","Params","Wordcloud","params","Transform","call","Definition","inherits","transform","pulse","error","modp","param","p","isFunction","modified","fields","mod","changed","ADD_REM","some","materialize","SOURCE","source","value","as","range","fontSizeRange","constant","fsize","sizeScale","scale","domain","extent","forEach","NaN","reflow","modifies"],"mappings":"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"}