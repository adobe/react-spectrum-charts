"use strict";(self.webpackChunk_spectrum_charts_docs=self.webpackChunk_spectrum_charts_docs||[]).push([[947],{5083:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction to React Spectrum Charts","href":"/react-spectrum-charts/PR-596-docs/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Installation","href":"/react-spectrum-charts/PR-596-docs/docs/installation","docId":"installation","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Chart Basics","href":"/react-spectrum-charts/PR-596-docs/docs/guides/basic-charts","docId":"guides/basic-charts","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/react-spectrum-charts/PR-596-docs/docs/guides/troubleshooting","docId":"guides/troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","collapsed":false,"items":[{"type":"link","label":"Chart","href":"/react-spectrum-charts/PR-596-docs/docs/api/Chart","docId":"api/Chart","unlisted":false},{"type":"category","label":"Core Visualizations","items":[{"type":"link","label":"Area","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/Area","docId":"api/visualizations/Area","unlisted":false},{"type":"link","label":"Bar","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/Bar","docId":"api/visualizations/Bar","unlisted":false},{"type":"link","label":"BigNumber","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/BigNumber","docId":"api/visualizations/BigNumber","unlisted":false},{"type":"link","label":"Donut","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/Donut","docId":"api/visualizations/Donut","unlisted":false},{"type":"link","label":"Line","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/Line","docId":"api/visualizations/Line","unlisted":false},{"type":"link","label":"Scatter","href":"/react-spectrum-charts/PR-596-docs/docs/api/visualizations/Scatter","docId":"api/visualizations/Scatter","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Analysis","items":[{"type":"link","label":"MetricRange","href":"/react-spectrum-charts/PR-596-docs/docs/api/analysis/MetricRange","docId":"api/analysis/MetricRange","unlisted":false},{"type":"link","label":"Trendline","href":"/react-spectrum-charts/PR-596-docs/docs/api/analysis/Trendline","docId":"api/analysis/Trendline","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Chart Components","items":[{"type":"link","label":"Axis","href":"/react-spectrum-charts/PR-596-docs/docs/api/components/Axis","docId":"api/components/Axis","unlisted":false},{"type":"link","label":"Legend","href":"/react-spectrum-charts/PR-596-docs/docs/api/components/Legend","docId":"api/components/Legend","unlisted":false},{"type":"link","label":"Title","href":"/react-spectrum-charts/PR-596-docs/docs/api/components/Title","docId":"api/components/Title","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Interactivity","items":[{"type":"link","label":"ChartTooltip","href":"/react-spectrum-charts/PR-596-docs/docs/api/interactivity/ChartTooltip","docId":"api/interactivity/ChartTooltip","unlisted":false},{"type":"link","label":"ChartPopover","href":"/react-spectrum-charts/PR-596-docs/docs/api/interactivity/ChartPopover","docId":"api/interactivity/ChartPopover","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsible":true},{"type":"link","label":"Developer Docs","href":"/react-spectrum-charts/PR-596-docs/docs/Developer-Docs","docId":"Developer-Docs","unlisted":false}]},"docs":{"api/analysis/MetricRange":{"id":"api/analysis/MetricRange","title":"MetricRange","description":"The MetricRange component is used to add a custom area mark onto visualizations. MetricRange is only supported for Line components. When creating a MetricRange you define a metricStart and metricEnd for the range that controls the area of the chart it will cover. You can also provide a Metric to create an additional line within the MetricRange. This metric line is not a Trendline and will only display with the data you provide to the Chart.","sidebar":"sidebar"},"api/analysis/Trendline":{"id":"api/analysis/Trendline","title":"Trendline","description":"The Trendline component is used to add average lines, regression (trend) lines as well as moving average lines to a cartesean based plot like Area, Bar or Line. Trendline will add a single line of the provided variant to each series in the chart. Styling of the Trendline is inherited from the mark that it is attached to but it is possible to override these values with static values (for example: change the line type so all moving averages are dashed lines).","sidebar":"sidebar"},"api/Chart":{"id":"api/Chart","title":"Chart","description":"The ` component is a collection component. This is the primary wrapper component for all of react-spectrum-charts`. This component renders the chart visualization based on the children and props passed in.","sidebar":"sidebar"},"api/components/Axis":{"id":"api/components/Axis","title":"Axis","description":"The Axis component is used to display the axis, axis labels and grid marks. An axis is not required if you would like something like a sparkline visualization.","sidebar":"sidebar"},"api/components/Legend":{"id":"api/components/Legend","title":"Legend","description":"The Legend component is used to display a legend for the visualization.","sidebar":"sidebar"},"api/components/Title":{"id":"api/components/Title","title":"Title","description":"The Title component is used to add a title to a chart. Only a single title is supported. In cases where multiple Titles are provided, only the last Title will be used.","sidebar":"sidebar"},"api/interactivity/ChartPopover":{"id":"api/interactivity/ChartPopover","title":"ChartPopover","description":"The ChartPopover component defines the popover that will appear when the user selects a mark on the chart. ChartPopover must be used as a child of Area, Bar, Line, or AxisAnnotation. You should only have one popover defined per Chart visualization.","sidebar":"sidebar"},"api/interactivity/ChartTooltip":{"id":"api/interactivity/ChartTooltip","title":"ChartTooltip","description":"The ChartTooltip component is used to setup hover tooltips for data on the chart. ChartTooltip must be used as a child of another component such as Bar, Area, Line or Trendline.","sidebar":"sidebar"},"api/visualizations/Area":{"id":"api/visualizations/Area","title":"Area","description":"The Area component is used to display area charts. You can specify the type of data that the area is being trended over (linear data, time data or point data) with the scaleType prop. It\'s also possible to define tooltips and on-click popovers for the area using the ChartTooltip and ChartPopover components respectively as children.","sidebar":"sidebar"},"api/visualizations/Bar":{"id":"api/visualizations/Bar","title":"Bar","description":"The Bar component is used to display bar charts. You can do stacked or dodged (grouped) bars as well as vertical or horizontal orientation. It\'s also possible to define tooltips and on-click popovers for the bars using the ChartTooltip and ChartPopover components respectively as children. Trendlines can be added as well using the Trendline component as a child (only average and median methods are supported for bar). Bar annotations can be added using the Annotation component as a child.","sidebar":"sidebar"},"api/visualizations/BigNumber":{"id":"api/visualizations/BigNumber","title":"BigNumber","description":"The BigNumber component calls attention to a specified data metric. A BigNumber gets its data from a parent Chart.","sidebar":"sidebar"},"api/visualizations/Donut":{"id":"api/visualizations/Donut","title":"Donut","description":"RELEASE CANDIDATE","sidebar":"sidebar"},"api/visualizations/Line":{"id":"api/visualizations/Line","title":"Line","description":"The Line component is used to display line charts. You can specify the type of data that the line is being trended over with the scaleType prop. You can add Trendlines and MetricRanges as children to show trends in your data or include a ranged area of data in addition to the line. It\'s also possible to define tooltips and on-click popovers for the line using the ChartTooltip and ChartPopover components respectively as children.","sidebar":"sidebar"},"api/visualizations/Scatter":{"id":"api/visualizations/Scatter","title":"Scatter","description":"The Scatter component is used to display scatter plots. Scatter plots use continuous data for both the x and y axes. They are most useful for comparing two continuous values across many different points.","sidebar":"sidebar"},"Developer-Docs":{"id":"Developer-Docs","title":"Developer Docs","description":"What is react-spectrum-charts?","sidebar":"sidebar"},"guides/basic-charts":{"id":"guides/basic-charts","title":"Chart Basics","description":"React Spectrum Charts provides a flexible and powerful way to create data visualizations. This guide will walk you through the fundamental concepts and components needed to create charts.","sidebar":"sidebar"},"guides/troubleshooting":{"id":"guides/troubleshooting","title":"Troubleshooting","description":"Parcel","sidebar":"sidebar"},"installation":{"id":"installation","title":"Installation","description":"This guide will help you get started with React Spectrum Charts in your project.","sidebar":"sidebar"},"intro":{"id":"intro","title":"Introduction to React Spectrum Charts","description":"React Spectrum Charts is a declarative library for composing Spectrum visualizations in React. It provides a set of React components that make it easy to create beautiful, accessible, and interactive charts that follow Adobe\'s Spectrum design system.","sidebar":"sidebar"}}}}')}}]);