"use strict";(self.webpackChunk_spectrum_charts_docs=self.webpackChunk_spectrum_charts_docs||[]).push([[976],{1184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(4041);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},6405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"intro","title":"Introduction to React Spectrum Charts","description":"React Spectrum Charts is a declarative library for composing Spectrum visualizations in React. It provides a set of React components that make it easy to create beautiful, accessible, and interactive charts that follow Adobe\'s Spectrum design system.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/react-spectrum-charts/PR-596-docs/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/adobe/react-spectrum-charts/tree/main/packages/docs/docs/intro.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Installation","permalink":"/react-spectrum-charts/PR-596-docs/docs/installation"}}');var r=n(1085),a=n(1184);const i={},c="Introduction to React Spectrum Charts",o={},l=[{value:"Features",id:"features",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"introduction-to-react-spectrum-charts",children:"Introduction to React Spectrum Charts"})}),"\n",(0,r.jsx)(t.p,{children:"React Spectrum Charts is a declarative library for composing Spectrum visualizations in React. It provides a set of React components that make it easy to create beautiful, accessible, and interactive charts that follow Adobe's Spectrum design system."}),"\n",(0,r.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\ud83c\udfa8 ",(0,r.jsx)(t.strong,{children:"Spectrum Design System"}),": Built on Adobe's Spectrum design system for consistent and beautiful visualizations"]}),"\n",(0,r.jsxs)(t.li,{children:["\u269b\ufe0f ",(0,r.jsx)(t.strong,{children:"React-First"}),": Fully integrated with React's component model and lifecycle"]}),"\n",(0,r.jsxs)(t.li,{children:["\ud83d\udcca ",(0,r.jsx)(t.strong,{children:"Declarative API"}),": Create complex visualizations with simple, declarative components"]}),"\n",(0,r.jsxs)(t.li,{children:["\u267f\ufe0f ",(0,r.jsx)(t.strong,{children:"Accessibility"}),": Built-in accessibility features following WCAG guidelines"]}),"\n",(0,r.jsxs)(t.li,{children:["\ud83c\udfaf ",(0,r.jsx)(t.strong,{children:"Interactive"}),": Rich interaction capabilities with events and animations"]}),"\n",(0,r.jsxs)(t.li,{children:["\ud83d\udee0\ufe0f ",(0,r.jsx)(t.strong,{children:"Customizable"}),": Extensive theming and customization options"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(t.p,{children:"Install React Spectrum Charts in your project:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"# Using npm\nnpm install @adobe/react-spectrum-charts\n\n# Using yarn\nyarn add @adobe/react-spectrum-charts\n"})}),"\n",(0,r.jsx)(t.p,{children:"Create your first chart:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import { Chart, BarChart } from '@adobe/react-spectrum-charts';\n\nfunction MyChart() {\n  const data = [\n    { category: 'A', value: 10 },\n    { category: 'B', value: 20 },\n    { category: 'C', value: 15 },\n  ];\n\n  return (\n    <Chart data={data}>\n      <BarChart\n        x={d => d.category}\n        y={d => d.value}\n      />\n    </Chart>\n  );\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Check out the ",(0,r.jsx)(t.a,{href:"installation",children:"Installation"})," guide for detailed setup instructions"]}),"\n",(0,r.jsxs)(t.li,{children:["Learn about basic chart types in the ",(0,r.jsx)(t.a,{href:"guides/basic-charts",children:"Basic Charts"})," guide"]}),"\n",(0,r.jsxs)(t.li,{children:["Explore the ",(0,r.jsx)(t.a,{href:"api/Chart",children:"API Reference"})," for detailed component documentation"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);