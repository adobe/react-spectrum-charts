"use strict";(self.webpackChunk_spectrum_charts_docs=self.webpackChunk_spectrum_charts_docs||[]).push([[869],{1184:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var s=r(4041);const n={},d=s.createContext(n);function a(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(d.Provider,{value:t},e.children)}},1223:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_legend_light-e4441fbe4f29538079b8f7b5c1d5ff52.png"},3383:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_legend_dark-f4c571fdd1b2d3e1658d70ec05ed5da4.png"},4105:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api/marks/Donut","title":"Donut","description":"RELEASE CANDIDATE","source":"@site/docs/api/marks/Donut.md","sourceDirName":"api/marks","slug":"/api/marks/Donut","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/Donut","draft":false,"unlisted":false,"editUrl":"https://github.com/adobe/react-spectrum-charts/tree/main/packages/docs/docs/api/marks/Donut.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BigNumber","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/BigNumber"},"next":{"title":"Line","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/Line"}}');var n=r(1085),d=r(1184);const a={},i=void 0,l={},o=[{value:"RELEASE CANDIDATE",id:"release-candidate",level:2},{value:"Data aggregation",id:"data-aggregation",level:2},{value:"Legend vs. direct labels",id:"legend-vs-direct-labels",level:2},{value:"Examples",id:"examples",level:2},{value:"Donut",id:"donut-1",level:3},{value:"Direct labels",id:"direct-labels",level:3},{value:"Props",id:"props",level:2},{value:"Donut Summary",id:"donut-summary",level:2},{value:"Props",id:"props-1",level:3},{value:"Segment Label",id:"segment-label",level:2},{value:"Props",id:"props-2",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"release-candidate",children:"RELEASE CANDIDATE"}),"\n",(0,n.jsxs)(t.p,{children:["Donut is currently in ",(0,n.jsx)(t.code,{children:"rc"}),". This means that the component, behavior and API are all subject to change. To use, you will need to import from ",(0,n.jsx)(t.code,{children:"@adobe/react-spectrum-charts/rc"}),". If your app is bundled with ",(0,n.jsx)(t.code,{children:"parcel"}),", check out the ",(0,n.jsx)(t.a,{href:"https://github.com/adobe/react-spectrum-charts/wiki/Troubleshooting-Guide",children:"troubleshooting guide"})," for details on how to setup your ",(0,n.jsx)(t.code,{children:"package.json"})," so it will accept this style of import."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"import { Chart, ChartProps } from '@adobe/react-spectrum-charts';\nimport { Donut, DonutSummary, SegmentLabel } from '@adobe/react-spectrum-charts/rc';\n"})}),"\n",(0,n.jsx)(t.h1,{id:"donut",children:"Donut"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Donut"})," component is used to display donut and pie charts. The ",(0,n.jsx)(t.code,{children:"holeRatio"})," prop is used to control the size of the hole in the center of the chart. A ",(0,n.jsx)(t.code,{children:"holeRatio"})," of 0 will give you a pie chart."]}),"\n",(0,n.jsx)(t.h2,{id:"data-aggregation",children:"Data aggregation"}),"\n",(0,n.jsxs)(t.p,{children:["Unlike many other chart types, ",(0,n.jsx)(t.code,{children:"Donut"})," only draws a single mark (arc) for a given series. This means that if you pass in multiple data points for the same series, donut will aggregate them together, summing their metric values."]}),"\n",(0,n.jsx)(t.h2,{id:"legend-vs-direct-labels",children:"Legend vs. direct labels"}),"\n",(0,n.jsxs)(t.p,{children:["A donut chart can display series labels directly next to each arc using the ",(0,n.jsx)(t.code,{children:"SegmentLabel"})," component. This is the direct labels method. This method is great when there are fewer than 6 segments in your donut chart. If one of the segments of the pie chart is really thin (sliver), the direct label for that slice will be dropped."]}),"\n",(0,n.jsx)(t.p,{children:"It is also possible to label each series using a legend just like you would on any other chart type."}),"\n",(0,n.jsx)(t.p,{children:"You should not use direct labels and a legend at the same time as the information is redundant."}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.h3,{id:"donut-1",children:"Donut"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'<Chart data={data}>\n    <Donut color="operatingSystem" metric="visitors">\n        <DonutSummary label="Visitors" />\n    </Donut>\n    <Legend title="Operating system" />\n</Chart>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Donut with legend",src:r(1223).A+"#gh-light-mode-only",width:"450",height:"350"}),"\n",(0,n.jsx)(t.img,{alt:"Donut with legend",src:r(3383).A+"#gh-dark-mode-only",width:"450",height:"350"})]}),"\n",(0,n.jsx)(t.h3,{id:"direct-labels",children:"Direct labels"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'<Chart data={data}>\n    <Donut color="operatingSystem" metric="visitors">\n        <DonutSummary label="Visitors" />\n        <SegmentLabel percent value />\n    </Donut>\n</Chart>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Donut with labels on each segment",src:r(6961).A+"#gh-light-mode-only",width:"450",height:"350"}),"\n",(0,n.jsx)(t.img,{alt:"Donut with labels on each segment",src:r(7105).A+"#gh-dark-mode-only",width:"450",height:"350"})]}),"\n",(0,n.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"name"}),(0,n.jsx)("th",{children:"type"}),(0,n.jsx)("th",{children:"default"}),(0,n.jsx)("th",{children:"description"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"children"}),(0,n.jsx)("td",{children:"(ChartTooltip | ChartPopover | DonutSummary | SegmentLabel)[]"}),(0,n.jsx)("td",{children:"\u2013"}),(0,n.jsx)("td",{children:"Defines the extra content associated to the Donut."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"color"}),(0,n.jsx)("td",{children:"string"}),(0,n.jsx)("td",{children:"'series'"}),(0,n.jsxs)("td",{children:["The key in the data that defines what color that arc of the donut will be. This is not a color value itself but rather the key in the data that will map to the colors scale.",(0,n.jsx)("br",{}),"For example: A donut chart that has a different color for each operating system, ",(0,n.jsx)(t.code,{children:"color"}),' would be set to the name of the key in the data that defines which operating system it is (color="operatingSystem").']})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"holeRatio"}),(0,n.jsx)("td",{children:"number"}),(0,n.jsx)("td",{children:"0.85"}),(0,n.jsx)("td",{children:"Ratio of the donut inner radius / donut outer radius. 0 is a piechart."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"isBoolean"}),(0,n.jsx)("td",{children:"boolean"}),(0,n.jsx)("td",{children:"false"}),(0,n.jsx)("td",{children:"Determines if the metric value should be displayed as a percent."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"name"}),(0,n.jsx)("td",{children:"string"}),(0,n.jsx)("td",{children:"\u2013"}),(0,n.jsx)("td",{children:"Donut name. Useful for if you need to traverse the chart object to find this donut."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"metric"}),(0,n.jsx)("td",{children:"string"}),(0,n.jsx)("td",{children:"'value'"}),(0,n.jsx)("td",{children:"The key in the data that is used for the length of the arc."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"startAngle"}),(0,n.jsx)("td",{children:"number"}),(0,n.jsx)("td",{children:"0"}),(0,n.jsx)("td",{children:"The start angle of the donut in radians."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"donut-summary",children:"Donut Summary"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"DonutSummary"})," component can be used to provide a total of the displayed metric in the center of the donut."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'<Chart {...chartProps}>\n    <Donut>\n        <DonutSummary label="Visitors" />\n    </Donut>\n</Chart>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Donut with a metric total and label in the center",src:r(9392).A+"#gh-light-mode-only",width:"350",height:"350"}),"\n",(0,n.jsx)(t.img,{alt:"Donut with a metric total and label in the center",src:r(6750).A+"#gh-dark-mode-only",width:"350",height:"350"})]}),"\n",(0,n.jsx)(t.h3,{id:"props-1",children:"Props"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"name"}),(0,n.jsx)("th",{children:"type"}),(0,n.jsx)("th",{children:"default"}),(0,n.jsx)("th",{children:"description"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"label"}),(0,n.jsx)("td",{children:"string"}),(0,n.jsx)("td",{children:"\u2013"}),(0,n.jsx)("td",{children:"Metric label that gets placed below the metric total."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"numberFormat"}),(0,n.jsx)("td",{children:"'currency' | 'shortCurrency' | 'shortNumber' | 'standardNumber' | string"}),(0,n.jsx)("td",{children:"shortNumber"}),(0,n.jsxs)("td",{children:["Sets the format for the metric total. This format must be a ",(0,n.jsx)("a",{href:"https://d3js.org/d3-format#locale_format",target:"_blank",children:"d3-format specifier"})," (Example: '$.2f' = $5,432.10). ",(0,n.jsx)("a",{href:"https://github.com/adobe/react-spectrum-charts/wiki/Chart-API#locale",target:"_blank",children:"Number locale"})," will be applied to the number format. The following presets are also provided: currency ($2.50), shortCurrency ($20M), shortNumber (3B), standardNumber (2,500)"]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"segment-label",children:"Segment Label"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"SegmentLabel"})," component can be used to add labels to each segment of the donut."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'<Chart {...chartProps}>\n    <Donut>\n        <SegmentLabel percent value valueFormat="shortNumber" />\n    </Donut>\n</Chart>\n'})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Donut with labels on each segment",src:r(8791).A+"#gh-light-mode-only",width:"450",height:"350"}),"\n",(0,n.jsx)(t.img,{alt:"Donut with labels on each segment",src:r(9495).A+"#gh-dark-mode-only",width:"450",height:"350"})]}),"\n",(0,n.jsx)(t.h3,{id:"props-2",children:"Props"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"name"}),(0,n.jsx)("th",{children:"type"}),(0,n.jsx)("th",{children:"default"}),(0,n.jsx)("th",{children:"description"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"labelKey"}),(0,n.jsx)("td",{children:"string"}),(0,n.jsx)("td",{children:"\u2013"}),(0,n.jsxs)("td",{children:["Sets the key in the data that should be used for the label. Defaults to the value of ",(0,n.jsx)(t.code,{children:"color"})," on the parent Donut component."]})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"percent"}),(0,n.jsx)("td",{children:"boolean"}),(0,n.jsx)("td",{children:"false"}),(0,n.jsx)("td",{children:"Displays the percent of the total donut that the segment represents."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"value"}),(0,n.jsx)("td",{children:"boolean"}),(0,n.jsx)("td",{children:"false"}),(0,n.jsx)("td",{children:"Displays the metric value of the donut that the segment represents."})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"valueFormat"}),(0,n.jsx)("td",{children:"'currency' | 'shortCurrency' | 'shortNumber' | 'standardNumber' | string"}),(0,n.jsx)("td",{children:"shortNumber"}),(0,n.jsxs)("td",{children:["Sets the format for the segment metric value. This format must be a ",(0,n.jsx)("a",{href:"https://d3js.org/d3-format#locale_format",target:"_blank",children:"d3-format specifier"})," (Example: '$.2f' = $5,432.10). ",(0,n.jsx)("a",{href:"https://github.com/adobe/react-spectrum-charts/wiki/Chart-API#locale",target:"_blank",children:"Number locale"})," will be applied to the number format. The following presets are also provided: currency ($2.50), shortCurrency ($20M), shortNumber (3B), standardNumber (2,500)"]})]})]})]})]})}function c(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},6750:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_summary_dark-524bdf924d86033e4d6b04b9345020f3.png"},6961:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_segmentLabelSummary_light-3674905890ec9d4f0bfe3f10dfd94b30.png"},7105:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_segmentLabelSummary_dark-70d15868debb6ad95eb89fa49a1fe585.png"},8791:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_segmentLabel_light-ff4f74acb1eb1ab70b99b524e2d02de6.png"},9392:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_summary_light-38708d6f71884c61039e99a1f6e7917e.png"},9495:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/donut_segmentLabel_dark-bdcc2b64e95aa3f94cf6a5dbc0efe954.png"}}]);