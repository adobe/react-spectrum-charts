"use strict";(self.webpackChunk_spectrum_charts_docs=self.webpackChunk_spectrum_charts_docs||[]).push([[310],{1184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(4041);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},9673:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/marks/BigNumber","title":"BigNumber","description":"The BigNumber component calls attention to a specified data metric. A BigNumber gets its data from a parent Chart.","source":"@site/docs/api/marks/BigNumber.md","sourceDirName":"api/marks","slug":"/api/marks/BigNumber","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/BigNumber","draft":false,"unlisted":false,"editUrl":"https://github.com/adobe/react-spectrum-charts/tree/main/packages/docs/docs/api/marks/BigNumber.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Bar","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/Bar"},"next":{"title":"Donut","permalink":"/react-spectrum-charts/PR-596-docs/docs/api/marks/Donut"}}');var i=n(1085),s=n(1184);const a={},c=void 0,d={},l=[{value:"Examples",id:"examples",level:2},{value:"Basic Horizontal",id:"basic-horizontal",level:4},{value:"Vertical with Icon",id:"vertical-with-icon",level:4},{value:"Horizontal with Sparkline",id:"horizontal-with-sparkline",level:4},{value:"Vertical with Icon and Sparkline",id:"vertical-with-icon-and-sparkline",level:4},{value:"Currency Format",id:"currency-format",level:4},{value:"Props",id:"props",level:2}];function o(e){const t={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"BigNumber"})," component calls attention to a specified data metric. A ",(0,i.jsx)(t.code,{children:"BigNumber"})," gets its data from a parent ",(0,i.jsx)(t.code,{children:"Chart"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You can specify which data dimension (",(0,i.jsx)(t.code,{children:"dataKey"}),") a ",(0,i.jsx)(t.code,{children:"BigNumber"})," should display. Also, you can optionally specify a metric aggregation ",(0,i.jsx)(t.code,{children:"method"}),", as well as custom formatting with ",(0,i.jsx)(t.code,{children:"orientation"}),", ",(0,i.jsx)(t.code,{children:"numberType"}),", and/or ",(0,i.jsx)(t.code,{children:"numberFormat"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"BigNumber"}),' can also display an icon and/or "sparkline" (basic line chart) to provide better context for the metric.']}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.h4,{id:"basic-horizontal",children:"Basic Horizontal"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<Chart\n  data=\\{[\\{ x: 20, y: 90 }]}\n  height=\\{100}\n  width=\\{200}\n>\n  <BigNumber\n    dataKey="x"\n    label="Visitors"\n    orientation="horizontal"\n  />\n</Chart>\n'})}),"\n",(0,i.jsx)("img",{width:"200",alt:"20 visitors",src:"https://github.com/adobe/react-spectrum-charts/assets/20342122/d67c68c3-32c5-4b43-bdda-f25da6a11ff9"}),"\n",(0,i.jsx)(t.h4,{id:"vertical-with-icon",children:"Vertical with Icon"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<Chart\n  data=\\{[\\{ x: 20, y: 90 }]}\n  height=\\{100}\n  width=\\{200}\n>\n  <BigNumber\n    dataKey="x"\n    icon=\\{<User />} /* From react-spectrum icons */\n    label="Visitors"\n    orientation="horizontal"\n  />\n</Chart>\n'})}),"\n",(0,i.jsx)("img",{width:"250",alt:"20 visitors",src:"https://github.com/adobe/react-spectrum-charts/assets/20342122/eeb8abd3-513e-4358-82cb-d15f61e7a5e4"}),"\n",(0,i.jsx)(t.h4,{id:"horizontal-with-sparkline",children:"Horizontal with Sparkline"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<Chart\n  data=\\{[\n    /* previous data values omitted for brevity */\n    \\{\n      x: 19,\n      y: 55\n    },\n    \\{\n      x: 20,\n      y: 90\n    }\n  ]}\n  height=\\{100}\n  width=\\{200}\n>\n  <BigNumber\n    dataKey="x"\n    label="Visitors"\n    orientation="horizontal"\n  >\n    <Line\n      dimension="x"\n      metric="y"\n      scaleType="linear"\n    />\n  </BigNumber>\n</Chart>\n'})}),"\n",(0,i.jsx)("img",{width:"450",alt:"20 visitors",src:"https://github.com/adobe/react-spectrum-charts/assets/20342122/488596e4-731d-437b-b94f-d671aea8370f"}),"\n",(0,i.jsx)(t.h4,{id:"vertical-with-icon-and-sparkline",children:"Vertical with Icon and Sparkline"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<Chart\n   data=\\{[\n    /* previous data values omitted for brevity */\n    \\{\n      x: 19,\n      y: 55\n    },\n    \\{\n      x: 20,\n      y: 90\n    }\n  ]}\n  height=\\{100}\n  width=\\{200}\n>\n  <BigNumber\n    dataKey="x"\n    icon=\\{<User />} /* From react-spectrum icons */\n    label="Visitors"\n    orientation="vertical"\n  >\n    <Line\n      dimension="x"\n      metric="y"\n      scaleType="linear"\n    />\n  </BigNumber>\n</Chart>\n'})}),"\n",(0,i.jsx)("img",{width:"350",alt:"20 visitors",src:"https://github.com/adobe/react-spectrum-charts/assets/20342122/5f2c7085-f6e3-4f64-9ec7-acdd4290528c"}),"\n",(0,i.jsx)(t.h4,{id:"currency-format",children:"Currency Format"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'<Chart\n  data=\\{[\\{ value: 255.56 }]}\n  height=\\{600}\n  locale="de-DE"\n  width=\\{600}\n>\n  <BigNumber\n    dataKey="value"\n    label="Ad Spend"\n    numberFormat="$,.2f"\n    orientation="horizontal"\n  />\n</Chart>\n'})}),"\n",(0,i.jsx)("img",{width:"250",alt:"255,56 euros Ad Spend",src:"https://github.com/adobe/react-spectrum-charts/assets/20342122/ffae21d3-adf7-4343-afaa-5829ca3acc9c"}),"\n",(0,i.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"name"}),(0,i.jsx)("th",{children:"type"}),(0,i.jsx)("th",{children:"default"}),(0,i.jsx)("th",{children:"description"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"children"}),(0,i.jsx)("td",{children:"LineElement"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"Optional sparkline element."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"dataKey"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"The key that references the metric this component will display."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"icon"}),(0,i.jsx)("td",{children:"IconElement"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"Optional icon element."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"label"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"\u2013"}),(0,i.jsx)("td",{children:"A custom metric label that titles the data shown."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"method"}),(0,i.jsx)("td",{children:"'sum' | 'avg' | 'last'"}),(0,i.jsx)("td",{children:"'last'"}),(0,i.jsxs)("td",{children:[(0,i.jsx)(t.p,{children:"The aggregation method used before displaying the metric value."}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Last:"})," display only the last metric value of ",(0,i.jsx)("code",{children:"dataKey"})," from the ",(0,i.jsx)("code",{children:"Chart"})," data"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Sum:"})," display the sum of all the ",(0,i.jsx)("code",{children:"dataKey"})," in the ",(0,i.jsx)("code",{children:"Chart"})," data"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Average:"})," display the arithmetic mean of the ",(0,i.jsx)("code",{children:"dataKey"})," in the ",(0,i.jsx)("code",{children:"Chart"})," data"]})]}),(0,i.jsxs)(t.p,{children:["Additionally, the ",(0,i.jsx)("code",{children:"last"})," method adds a visual indicator of the last value on the sparkline (if a sparkline is shown)."]})]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"numberFormat"}),(0,i.jsx)("td",{children:"string"}),(0,i.jsx)("td",{children:"-"}),(0,i.jsxs)("td",{children:["Sets the format for numeric axis labels. This format must be a ",(0,i.jsx)("a",{href:"https://d3js.org/d3-format#locale_format",target:"_blank",children:"d3-format specifier"})," (Example: '$.2f' = $5,432.10). ",(0,i.jsx)("a",{href:"https://github.com/adobe/react-spectrum-charts/wiki/Chart-API#locale",target:"_blank",children:"Number locale"})," will be applied to the number format."]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"numberType"}),(0,i.jsx)("td",{children:"'linear' | 'percentage'"}),(0,i.jsx)("td",{children:"'linear'"}),(0,i.jsxs)("td",{children:["If set to ",(0,i.jsx)("code",{children:"percentage"}),", automatically formats the number as a percentage.  Otherwise, this component relies on the ",(0,i.jsx)("code",{children:"numberFormat"})," prop."]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"orientation"}),(0,i.jsx)("td",{children:"'vertical' | 'horizontal'"}),(0,i.jsx)("td",{children:"'vertical'"}),(0,i.jsx)("td",{children:"Specifies the visual direction for this component's elements.  See visual examples above."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"rscChartProps"}),(0,i.jsx)("td",{children:"RscChartProps"}),(0,i.jsx)("td",{children:"-"}),(0,i.jsxs)("td",{children:["Used internally to drill down props from the parent ",(0,i.jsx)("code",{children:"Chart"})," to the sparkline (if displayed). Modify at your own risk!"]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);