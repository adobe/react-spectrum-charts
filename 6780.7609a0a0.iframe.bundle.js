"use strict";(self.webpackChunkspectrum_charts_monorepo=self.webpackChunkspectrum_charts_monorepo||[]).push([[6780],{"./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./packages/react-spectrum-charts/src/Chart.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* \nthe vega tooltip won\'t pick up spectrum variables\nset all the default styling\n*/\n#vg-tooltip-element.vg-tooltip {\n\tborder-radius: 4px;\n\tfont-family: adobe-clean-ux, adobe-clean, Source Sans Pro, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n\t\tsans-serif;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 21px;\n\tpadding: 12px;\n\tmax-width: 300px;\n}\n/*\nsections sometimes add a 500ms transition but vega tooltips close instantly\nthis removes transitions in the vega tooltip\n*/\n#vg-tooltip-element.vg-tooltip section {\n\ttransition: none;\n}\n/* double scope light-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.light-theme.light-theme {\n\tcolor-scheme: light;\n\tborder: 1px solid #cacaca;\n\tbackground-color: #fff;\n\tcolor: #4b4b4b;\n}\n/* double scope dark-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.dark-theme.dark-theme {\n\tcolor-scheme: dark;\n\tborder: 1px solid #494949;\n\tbackground-color: #000;\n\tcolor: #c8c8c8;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip {\n\tmax-width: 150px;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series {\n\tfont-weight: 700;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series-description {\n\tmargin: 0px;\n}\n.rsc-container {\n\tposition: relative;\n\twidth: auto;\n\theight: 100%;\n}\n',"",{version:3,sources:["webpack://./packages/react-spectrum-charts/src/Chart.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF;;;CAGC;AACD;CACC,kBAAkB;CAClB;YACW;CACX,eAAe;CACf,kBAAkB;CAClB,gBAAgB;CAChB,iBAAiB;CACjB,aAAa;CACb,gBAAgB;AACjB;AACA;;;CAGC;AACD;CACC,gBAAgB;AACjB;AACA,8DAA8D;AAC9D;CACC,mBAAmB;CACnB,yBAAyB;CACzB,sBAAsB;CACtB,cAAc;AACf;AACA,6DAA6D;AAC7D;CACC,kBAAkB;CAClB,yBAAyB;CACzB,sBAAsB;CACtB,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,gBAAgB;AACjB;AACA;CACC,WAAW;AACZ;AACA;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;AACb",sourcesContent:['/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/* \nthe vega tooltip won\'t pick up spectrum variables\nset all the default styling\n*/\n#vg-tooltip-element.vg-tooltip {\n\tborder-radius: 4px;\n\tfont-family: adobe-clean-ux, adobe-clean, Source Sans Pro, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n\t\tsans-serif;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 21px;\n\tpadding: 12px;\n\tmax-width: 300px;\n}\n/*\nsections sometimes add a 500ms transition but vega tooltips close instantly\nthis removes transitions in the vega tooltip\n*/\n#vg-tooltip-element.vg-tooltip section {\n\ttransition: none;\n}\n/* double scope light-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.light-theme.light-theme {\n\tcolor-scheme: light;\n\tborder: 1px solid #cacaca;\n\tbackground-color: #fff;\n\tcolor: #4b4b4b;\n}\n/* double scope dark-theme so that it has higher precedence */\n#vg-tooltip-element.vg-tooltip.dark-theme.dark-theme {\n\tcolor-scheme: dark;\n\tborder: 1px solid #494949;\n\tbackground-color: #000;\n\tcolor: #c8c8c8;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip {\n\tmax-width: 150px;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series {\n\tfont-weight: 700;\n}\n#vg-tooltip-element.vg-tooltip .legend-tooltip .series-description {\n\tmargin: 0px;\n}\n.rsc-container {\n\tposition: relative;\n\twidth: auto;\n\theight: 100%;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.big-number-data {\n\tfont-weight: bold;\n\tmargin: 0;\n\tline-height: 0.9;\n}\n\n.big-number-label {\n\tmargin: 0;\n\talign-self: center;\n\tline-height: 0.9;\n}\n',"",{version:3,sources:["webpack://./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF;CACC,iBAAiB;CACjB,SAAS;CACT,gBAAgB;AACjB;;AAEA;CACC,SAAS;CACT,kBAAkB;CAClB,gBAAgB;AACjB",sourcesContent:['/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.big-number-data {\n\tfont-weight: bold;\n\tmargin: 0;\n\tline-height: 0.9;\n}\n\n.big-number-label {\n\tmargin: 0;\n\talign-self: center;\n\tline-height: 0.9;\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./packages/react-spectrum-charts/src/Chart.css":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{var _node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleDomAPI.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertBySelector.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertStyleElement.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleTagTransform.js"),_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_Chart_css__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./packages/react-spectrum-charts/src/Chart.css"),options={};options.styleTagTransform=_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default(),options.setAttributes=_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default(),options.insert=_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null,"head"),options.domAPI=_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default(),options.insertStyleElement=_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default();_node_modules_storybook_builder_webpack5_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_Chart_css__WEBPACK_IMPORTED_MODULE_6__.A,options),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_Chart_css__WEBPACK_IMPORTED_MODULE_6__.A&&_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_Chart_css__WEBPACK_IMPORTED_MODULE_6__.A.locals&&_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_Chart_css__WEBPACK_IMPORTED_MODULE_6__.A.locals},"./packages/locales/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{JK:()=>getLocale,HW:()=>numberLocales});const numberLocales={"ar-AE":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.إ."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-BH":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ب."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-DJ":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏Fdj ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-DZ":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ج. ",""]}'),"ar-EG":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ج.م."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-IL":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["₪ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-IQ":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ع."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-JO":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.أ."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-KM":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ف.ج.ق."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-KW":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," د.ك."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-LB":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ل.ل."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-LY":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ل. ",""]}'),"ar-MA":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.م. ",""]}'),"ar-OM":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ع."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-PS":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["₪ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-QA":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ق."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SA":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SD":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ج.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SO":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏S ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SS":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["£ ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-SY":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ل.س."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-TD":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":["‏FCFA ",""],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ar-TN":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["د.ت. ",""]}'),"ar-YE":JSON.parse('{"decimal":"٫","thousands":"٬","grouping":[3],"currency":[""," ر.ى."],"numerals":["٠","١","٢","٣","٤","٥","٦","٧","٨","٩"]}'),"ca-ES":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"cs-CZ":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," Kč"]}'),"da-DK":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," kr"]}'),"de-CH":JSON.parse('{"decimal":",","thousands":"\'","grouping":[3],"currency":[""," CHF"]}'),"de-DE":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"en-CA":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"en-GB":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["£",""]}'),"en-IE":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["€",""]}'),"en-IN":JSON.parse('{"decimal":".","thousands":",","grouping":[3,2,2,2,2,2,2,2,2,2],"currency":["₹",""]}'),"en-US":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"es-BO":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["Bs ",""],"percent":" %"}'),"es-ES":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"es-MX":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["$",""]}'),"fi-FI":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"]}'),"fr-CA":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":["","$"]}'),"fr-FR":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"],"percent":" %"}'),"he-IL":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["₪",""]}'),"hu-HU":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," Ft"]}'),"it-IT":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["€",""]}'),"ja-JP":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["","円"]}'),"ko-KR":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["₩",""]}'),"mk-MK":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," ден."]}'),"nl-NL":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["€ ",""]}'),"pl-PL":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["","zł"]}'),"pt-BR":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":["R$",""]}'),"pt-PT":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," €"]}'),"ru-RU":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," ₽"]}'),"sl-SI":JSON.parse('{"decimal":",","thousands":".","grouping":[3],"currency":[""," €"]}'),"sv-SE":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," kr"]}'),"uk-UA":JSON.parse('{"decimal":",","thousands":" ","grouping":[3],"currency":[""," ₴."]}'),"zh-CN":JSON.parse('{"decimal":".","thousands":",","grouping":[3],"currency":["¥",""]}')},timeLocales={"ar-EG":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["ص","م"],"days":["الأحد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"],"shortDays":["أحد","إثنين","ثلاثاء","أربعاء","خميس","جمعة","سبت"],"months":["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"],"shortMonths":["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"]}'),"ar-SY":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["ص","م"],"days":["الأحد","الإثنين","الثلاثاء","الأربعاء","الخميس","الجمعة","السبت"],"shortDays":["أحد","إثنين","ثلاثاء","أربعاء","خميس","جمعة","سبت"],"months":["كانون الثاني","شباط","آذار","نيسان","أيار","حزيران","تموز","آب","أيلول","تشرين الأول","تشرين الثاني","كانون الأول"],"shortMonths":["ك٢","شباط","آذار","نيسان","أيار","حزيران","تموز","آب","أيلول","ت١","ت٢","ك١"]}'),"ca-ES":JSON.parse('{"dateTime":"%A, %e de %B de %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"],"shortDays":["dg.","dl.","dt.","dc.","dj.","dv.","ds."],"months":["gener","febrer","març","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],"shortMonths":["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."]}'),"cs-CZ":JSON.parse('{"dateTime":"%A,%e.%B %Y, %X","date":"%-d.%-m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["neděle","pondělí","úterý","středa","čvrtek","pátek","sobota"],"shortDays":["ne.","po.","út.","st.","čt.","pá.","so."],"months":["leden","únor","březen","duben","květen","červen","červenec","srpen","září","říjen","listopad","prosinec"],"shortMonths":["led","úno","břez","dub","kvě","čer","červ","srp","zář","říj","list","pros"]}'),"da-DK":JSON.parse('{"dateTime":"%A den %d %B %Y %X","date":"%d-%m-%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],"shortDays":["søn","man","tir","ons","tor","fre","lør"],"months":["januar","februar","marts","april","maj","juni","juli","august","september","oktober","november","december"],"shortMonths":["jan","feb","mar","apr","maj","jun","jul","aug","sep","okt","nov","dec"]}'),"de-CH":JSON.parse('{"dateTime":"%A, der %e. %B %Y, %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"shortDays":["So","Mo","Di","Mi","Do","Fr","Sa"],"months":["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"shortMonths":["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}'),"de-DE":JSON.parse('{"dateTime":"%A, der %e. %B %Y, %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"shortDays":["So","Mo","Di","Mi","Do","Fr","Sa"],"months":["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"shortMonths":["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}'),"en-CA":JSON.parse('{"dateTime":"%a %b %e %X %Y","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"en-GB":JSON.parse('{"dateTime":"%a %e %b %X %Y","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"en-US":JSON.parse('{"dateTime":"%x, %X","date":"%-m/%-d/%Y","time":"%-I:%M:%S %p","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}'),"es-ES":JSON.parse('{"dateTime":"%A, %e de %B de %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],"shortDays":["dom","lun","mar","mié","jue","vie","sáb"],"months":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],"shortMonths":["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}'),"es-MX":JSON.parse('{"dateTime":"%x, %X","date":"%d/%m/%Y","time":"%-I:%M:%S %p","periods":["AM","PM"],"days":["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],"shortDays":["dom","lun","mar","mié","jue","vie","sáb"],"months":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],"shortMonths":["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}'),"fa-IR":JSON.parse('{"dateTime":"%x, %X","date":"%-d/%-m/%Y","time":"%-I:%M:%S %p","periods":["صبح","عصر"],"days":["یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پنجشنبه","جمعه","شنبه"],"shortDays":["یکشنبه","دوشنبه","سه شنبه","چهارشنبه","پنجشنبه","جمعه","شنبه"],"months":["ژانویه","فوریه","مارس","آوریل","مه","ژوئن","ژوئیه","اوت","سپتامبر","اکتبر","نوامبر","دسامبر"],"shortMonths":["ژانویه","فوریه","مارس","آوریل","مه","ژوئن","ژوئیه","اوت","سپتامبر","اکتبر","نوامبر","دسامبر"]}'),"fi-FI":JSON.parse('{"dateTime":"%A, %-d. %Bta %Y klo %X","date":"%-d.%-m.%Y","time":"%H:%M:%S","periods":["a.m.","p.m."],"days":["sunnuntai","maanantai","tiistai","keskiviikko","torstai","perjantai","lauantai"],"shortDays":["Su","Ma","Ti","Ke","To","Pe","La"],"months":["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesäkuu","heinäkuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],"shortMonths":["Tammi","Helmi","Maalis","Huhti","Touko","Kesä","Heinä","Elo","Syys","Loka","Marras","Joulu"]}'),"fr-CA":JSON.parse('{"dateTime":"%a %e %b %Y %X","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["",""],"days":["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],"shortDays":["dim","lun","mar","mer","jeu","ven","sam"],"months":["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],"shortMonths":["jan","fév","mar","avr","mai","jui","jul","aoû","sep","oct","nov","déc"]}'),"fr-FR":JSON.parse('{"dateTime":"%A %e %B %Y à %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],"shortDays":["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],"months":["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],"shortMonths":["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."]}'),"he-IL":JSON.parse('{"dateTime":"%A, %e ב%B %Y %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["ראשון","שני","שלישי","רביעי","חמישי","שישי","שבת"],"shortDays":["א׳","ב׳","ג׳","ד׳","ה׳","ו׳","ש׳"],"months":["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],"shortMonths":["ינו׳","פבר׳","מרץ","אפר׳","מאי","יוני","יולי","אוג׳","ספט׳","אוק׳","נוב׳","דצמ׳"]}'),"hr-HR":JSON.parse('{"dateTime":"%A, %e. %B %Y., %X","date":"%d. %m. %Y.","time":"%H:%M:%S","periods":["AM","PM"],"days":["Nedjelja","Ponedjeljak","Utorak","Srijeda","Četvtrak","Petak","Subota"],"shortDays":["Ne","Po","Ut","Sr","Če","Pe","Su"],"months":["Siječanj","Veljača","Ožujak","Travanj","Svibanj","Lipanj","Srpanj","Kolovoz","Rujan","Listopad","Studeni","Prosinac"],"shortMonths":["Sij","Velj","Ožu","Tra","Svi","Lip","Srp","Kol","Ruj","Lis","Stu","Pro"]}'),"hu-HU":JSON.parse('{"dateTime":"%Y. %B %-e., %A %X","date":"%Y. %m. %d.","time":"%H:%M:%S","periods":["de.","du."],"days":["vasárnap","hétfő","kedd","szerda","csütörtök","péntek","szombat"],"shortDays":["V","H","K","Sze","Cs","P","Szo"],"months":["január","február","március","április","május","június","július","augusztus","szeptember","október","november","december"],"shortMonths":["jan.","feb.","már.","ápr.","máj.","jún.","júl.","aug.","szept.","okt.","nov.","dec."]}'),"it-IT":JSON.parse('{"dateTime":"%A %e %B %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"],"shortDays":["Dom","Lun","Mar","Mer","Gio","Ven","Sab"],"months":["Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"],"shortMonths":["Gen","Feb","Mar","Apr","Mag","Giu","Lug","Ago","Set","Ott","Nov","Dic"]}'),"ja-JP":JSON.parse('{"dateTime":"%x %a %X","date":"%Y/%m/%d","time":"%H:%M:%S","periods":["AM","PM"],"days":["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"],"shortDays":["日","月","火","水","木","金","土"],"months":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],"shortMonths":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}'),"ko-KR":JSON.parse('{"dateTime":"%Y/%m/%d %a %X","date":"%Y/%m/%d","time":"%H:%M:%S","periods":["오전","오후"],"days":["일요일","월요일","화요일","수요일","목요일","금요일","토요일"],"shortDays":["일","월","화","수","목","금","토"],"months":["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],"shortMonths":["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"]}'),"mk-MK":JSON.parse('{"dateTime":"%A, %e %B %Y г. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["недела","понеделник","вторник","среда","четврток","петок","сабота"],"shortDays":["нед","пон","вто","сре","чет","пет","саб"],"months":["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],"shortMonths":["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"]}'),"nb-NO":JSON.parse('{"dateTime":"%A den %d. %B %Y %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],"shortDays":["søn","man","tir","ons","tor","fre","lør"],"months":["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],"shortMonths":["jan","feb","mars","apr","mai","juni","juli","aug","sep","okt","nov","des"]}'),"nl-BE":JSON.parse('{"dateTime":"%a %e %B %Y %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],"shortDays":["zo","ma","di","wo","do","vr","za"],"months":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],"shortMonths":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}'),"nl-NL":JSON.parse('{"dateTime":"%a %e %B %Y %X","date":"%d-%m-%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],"shortDays":["zo","ma","di","wo","do","vr","za"],"months":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],"shortMonths":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}'),"pl-PL":JSON.parse('{"dateTime":"%A, %e %B %Y, %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],"shortDays":["Niedz.","Pon.","Wt.","Śr.","Czw.","Pt.","Sob."],"months":["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],"shortMonths":["Stycz.","Luty","Marz.","Kwie.","Maj","Czerw.","Lipc.","Sierp.","Wrz.","Paźdz.","Listop.","Grudz."]}'),"pt-BR":JSON.parse('{"dateTime":"%A, %e de %B de %Y. %X","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],"shortDays":["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],"months":["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],"shortMonths":["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}'),"ru-RU":JSON.parse('{"dateTime":"%A, %e %B %Y г. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],"shortDays":["вс","пн","вт","ср","чт","пт","сб"],"months":["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],"shortMonths":["янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"]}'),"sv-SE":JSON.parse('{"dateTime":"%A den %d %B %Y %X","date":"%Y-%m-%d","time":"%H:%M:%S","periods":["fm","em"],"days":["Söndag","Måndag","Tisdag","Onsdag","Torsdag","Fredag","Lördag"],"shortDays":["Sön","Mån","Tis","Ons","Tor","Fre","Lör"],"months":["Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"]}'),"tr-TR":JSON.parse('{"dateTime":"%a %e %b %X %Y","date":"%d/%m/%Y","time":"%H:%M:%S","periods":["AM","PM"],"days":["Pazar","Pazartesi","Salı","Çarşamba","Perşembe","Cuma","Cumartesi"],"shortDays":["Paz","Pzt","Sal","Çar","Per","Cum","Cmt"],"months":["Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"],"shortMonths":["Oca","Şub","Mar","Nis","May","Haz","Tem","Ağu","Eyl","Eki","Kas","Ara"]}'),"uk-UA":JSON.parse('{"dateTime":"%A, %e %B %Y р. %X","date":"%d.%m.%Y","time":"%H:%M:%S","periods":["дп","пп"],"days":["неділя","понеділок","вівторок","середа","четвер","п\'ятниця","субота"],"shortDays":["нд","пн","вт","ср","чт","пт","сб"],"months":["січня","лютого","березня","квітня","травня","червня","липня","серпня","вересня","жовтня","листопада","грудня"],"shortMonths":["січ.","лют.","бер.","квіт.","трав.","черв.","лип.","серп.","вер.","жовт.","лист.","груд."]}'),"zh-CN":JSON.parse('{"dateTime":"%x %A %X","date":"%Y年%-m月%-d日","time":"%H:%M:%S","periods":["上午","下午"],"days":["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],"shortDays":["周日","周一","周二","周三","周四","周五","周六"],"months":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],"shortMonths":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]}'),"zh-TW":JSON.parse('{"dateTime":"%x %A %X","date":"%Y年%-m月%-d日","time":"%H:%M:%S","periods":["上午","下午"],"days":["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],"shortDays":["日","一","二","三","四","五","六"],"months":["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],"shortMonths":["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}')},getLocale=(locale="en-US")=>"string"==typeof locale?{number:numberLocales[locale]??numberLocales["en-US"],time:timeLocales[locale]??timeLocales["en-US"]}:{number:getNumberLocale(locale.number),time:getTimeLocale(locale.time)},getNumberLocale=locale=>"string"==typeof locale?numberLocales[locale]??numberLocales["en-US"]:locale,getTimeLocale=locale=>"string"==typeof locale?timeLocales[locale]??timeLocales["en-US"]:locale},"./packages/react-spectrum-charts/src/Chart.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>Chart_Chart});var react=__webpack_require__("./node_modules/react/index.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),dist_import=__webpack_require__("./node_modules/@react-spectrum/theme-default/dist/import.mjs"),provider_dist_import=__webpack_require__("./node_modules/@react-spectrum/provider/dist/import.mjs"),constants=__webpack_require__("./packages/constants/index.ts"),themes=__webpack_require__("./packages/themes/index.ts"),RscChart=(__webpack_require__("./packages/react-spectrum-charts/src/Chart.css"),__webpack_require__("./packages/react-spectrum-charts/src/RscChart.tsx")),components=__webpack_require__("./packages/react-spectrum-charts/src/components/index.ts"),layout_dist_import=__webpack_require__("./node_modules/@react-spectrum/layout/dist/import.mjs"),progress_dist_import=__webpack_require__("./node_modules/@react-spectrum/progress/dist/import.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const LoadingState=props=>(0,jsx_runtime.jsx)(layout_dist_import.so,{direction:"column",justifyContent:"center",alignItems:"center",...props,children:(0,jsx_runtime.jsx)(progress_dist_import.a3,{isIndeterminate:!0,size:"L"})});LoadingState.displayName="LoadingState";try{LoadingState.displayName="LoadingState",LoadingState.__docgenInfo={description:"",displayName:"LoadingState",props:{height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/components/LoadingState/LoadingState.tsx#LoadingState"]={docgenInfo:LoadingState.__docgenInfo,name:"LoadingState",path:"packages/react-spectrum-charts/src/components/LoadingState/LoadingState.tsx#LoadingState"})}catch(__react_docgen_typescript_loader_error){}var RscChartContext=__webpack_require__("./packages/react-spectrum-charts/src/context/RscChartContext.tsx");var useChartImperativeHandle=__webpack_require__("./packages/react-spectrum-charts/src/hooks/useChartImperativeHandle.tsx");const useResizeObserver=callback=>{const ref=(0,react.useRef)(null);return(0,react.useLayoutEffect)((()=>{const element=ref?.current;if(!element)return;if("undefined"==typeof ResizeObserver)return void callback(element,{contentRect:{width:500,height:500}});const observer=new ResizeObserver((entries=>{callback(element,entries[0])}));return observer.observe(element),()=>{observer.disconnect()}}),[callback,ref]),ref};try{useResizeObserver.displayName="useResizeObserver",useResizeObserver.__docgenInfo={description:"",displayName:"useResizeObserver",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useResizeObserver.tsx#useResizeObserver"]={docgenInfo:useResizeObserver.__docgenInfo,name:"useResizeObserver",path:"packages/react-spectrum-charts/src/hooks/useResizeObserver.tsx#useResizeObserver"})}catch(__react_docgen_typescript_loader_error){}var BigNumber=__webpack_require__("./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.tsx"),utils=__webpack_require__("./packages/react-spectrum-charts/src/utils/index.ts");const Chart_Chart=(0,react.forwardRef)((({backgroundColor=constants.z6,data,colors="categorical12",colorScheme=constants.gb,dataTestId,debug=!1,emptyStateText="No data found",height=300,hiddenSeries=constants.rl,idKey=constants.i4,lineTypes=constants.R9,lineWidths=constants.$G,loading,locale=constants.Xn,minHeight=100,maxHeight=1/0,minWidth=100,maxWidth=1/0,padding=0,renderer="svg",theme=dist_import.w,title,tooltipAnchor="cursor",tooltipPlacement="top",width="auto",UNSAFE_vegaSpec,...props},forwardedRef)=>{const chartId=(0,react.useRef)(`rsc-${(0,v4.A)()}`),chartView=(0,react.useRef)(),[containerWidth,setContainerWidth]=(0,react.useState)(0),[containerHeight,setContainerHeight]=(0,react.useState)(0);(0,useChartImperativeHandle.A)(forwardedRef,{chartView,title});const containerRef=useResizeObserver(((_target,entry)=>{"number"!=typeof width&&setContainerWidth(entry.contentRect.width),"number"!=typeof height&&setContainerHeight(entry.contentRect.height)})),chartWidth=function useChartWidth(containerWidth,maxWidth,minWidth,width){return(0,react.useMemo)((()=>{let targetWidth=minWidth;return"number"==typeof width?Math.round(width):("auto"===width?targetWidth=containerWidth:/^\d+%$/.exec(width)?targetWidth=containerWidth*Number(width.slice(0,-1))/100:console.error(`width of ${width} is not a valid width. Please provide a valid number, 'auto' or percentage ex. 75%`),0===targetWidth?0:Math.round(Math.min(maxWidth,Math.max(minWidth,targetWidth))))}),[containerWidth,maxWidth,minWidth,width])}(containerWidth,maxWidth,minWidth,width),chartHeight=function useChartHeight(containerHeight,maxHeight,minHeight,height){return(0,react.useMemo)((()=>{let targetHeight=minHeight;return"number"==typeof height?Math.round(height):(/^\d+%$/.exec(height)?targetHeight=containerHeight*Number(height.slice(0,-1))/100:console.error(`height of ${height} is not a valid height. Please provide a valid number or percentage ex. 75%`),0===targetHeight?0:Math.round(Math.min(maxHeight,Math.max(minHeight,targetHeight))))}),[containerHeight,maxHeight,minHeight,height])}(containerHeight,maxHeight,minHeight,height),showPlaceholderContent=(0,react.useMemo)((()=>Boolean(loading??!data.length)),[loading,data]);if((0,react.useEffect)((()=>{showPlaceholderContent&&(chartView.current=void 0)}),[showPlaceholderContent]),props.children&&UNSAFE_vegaSpec)throw new Error("Chart cannot accept both children and `UNSAFE_vegaSpec` prop. Please choose one or the other.");if(!props.children&&!UNSAFE_vegaSpec)throw new Error("No children in the <Chart/> component. Chart is a collection components and requires children to draw correctly.");const rscChartProps={data,backgroundColor,colors,colorScheme,debug,hiddenSeries,idKey,lineTypes,lineWidths,locale,padding,renderer,title,tooltipAnchor,tooltipPlacement,chartWidth,chartHeight,UNSAFE_vegaSpec,...props},bigNumberElements=(0,utils.Wg)(props.children),bigNumberProps=bigNumberElements.length?bigNumberElements[0].props:void 0,childrenCount=(0,utils.$r)(props.children).length;bigNumberProps&&childrenCount>1&&console.warn(`Detected ${childrenCount-1} children in the chart that are not the first BigNumber. Only the first BigNumber will be displayed. All other elements will be ignored`);const chartContent=bigNumberProps?(0,jsx_runtime.jsx)(BigNumber.Ve,{...bigNumberProps,rscChartProps}):(0,jsx_runtime.jsx)(RscChart.P,{...rscChartProps,children:props.children});return(0,jsx_runtime.jsx)(provider_dist_import.Kq,{colorScheme,theme:isValidTheme(theme)?theme:dist_import.w,UNSAFE_style:{backgroundColor:"transparent"},height:"100%",children:(0,jsx_runtime.jsx)("div",{ref:containerRef,id:chartId.current,"data-testid":dataTestId,className:"rsc-container",children:(0,jsx_runtime.jsx)("div",{style:{backgroundColor:(0,themes.FH)(backgroundColor,colorScheme)},children:showPlaceholderContent?(0,jsx_runtime.jsx)(PlaceholderContent,{loading,data,height:chartHeight,emptyStateText}):(0,jsx_runtime.jsx)(RscChartContext._,{chartId:chartId.current,chartView,children:chartContent})})})})}));Chart_Chart.displayName="Chart";const PlaceholderContent=({data,emptyStateText,loading,...layoutProps})=>loading?(0,jsx_runtime.jsx)(LoadingState,{...layoutProps}):data.length?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}):(0,jsx_runtime.jsx)(components.pp,{...layoutProps,text:emptyStateText}),isValidTheme=theme=>"object"==typeof theme&&null!==theme&&"light"in theme&&"dark"in theme;try{Chart_Chart.displayName="Chart",Chart_Chart.__docgenInfo={description:"",displayName:"Chart",props:{dataTestId:{defaultValue:null,description:"Test id",name:"dataTestId",required:!1,type:{name:"string"}},emptyStateText:{defaultValue:{value:"No data found"},description:"Optional text to display when the data set is empty and loading is complete.",name:"emptyStateText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"Loading state. If true, a spinner will render in place of the chart.",name:"loading",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"Maximum chart width",name:"maxWidth",required:!1,type:{name:"number"}},minWidth:{defaultValue:{value:"100"},description:"Minimum chart width.",name:"minWidth",required:!1,type:{name:"number"}},height:{defaultValue:{value:"300"},description:"Chart height",name:"height",required:!1,type:{name:"Height"}},maxHeight:{defaultValue:null,description:"Maximum height of the chart",name:"maxHeight",required:!1,type:{name:"number"}},minHeight:{defaultValue:{value:"100"},description:"Minimum height of the chart",name:"minHeight",required:!1,type:{name:"number"}},theme:{defaultValue:null,description:"react-spectrum theme. This sets the react-spectrum theming on tooltips and popovers.",name:"theme",required:!1,type:{name:"Theme"}},width:{defaultValue:{value:"auto"},description:"Chart width",name:"width",required:!1,type:{name:"Width"}},config:{defaultValue:null,description:"Vega config that can be used to tweak the style of the chart.\n@see https://vega.github.io/vega/docs/config/",name:"config",required:!1,type:{name:"Config"}},data:{defaultValue:null,description:"Chart data array.",name:"data",required:!0,type:{name:"ChartData[]"}},debug:{defaultValue:{value:"false"},description:"Enables debug mode which will console log things like the generated vega spec and the datums for tooltips.",name:"debug",required:!1,type:{name:"boolean"}},locale:{defaultValue:{value:"en-US"},description:"Number and time locales to use",name:"locale",required:!1,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 12 more ...'}},padding:{defaultValue:{value:"0"},description:"Chart padding",name:"padding",required:!1,type:{name:"Padding"}},renderer:{defaultValue:{value:"svg"},description:"Method to use for rendering the chart. 'canvas' is ideal for large data sets.",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'}]}},tooltipAnchor:{defaultValue:{value:"cursor"},description:"Sets what the tooltip should be anchored to. Defaults to `cursor`.",name:"tooltipAnchor",required:!1,type:{name:"enum",value:[{value:'"cursor"'},{value:'"mark"'}]}},tooltipPlacement:{defaultValue:{value:"top"},description:"The placement of the tooltip with respect to the mark. Only applicable if `tooltipAnchor = 'mark'`.",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}},backgroundColor:{defaultValue:{value:"transparent"},description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:{value:"categorical12"},description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:{value:"light"},description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},lineTypes:{defaultValue:{value:"DEFAULT_LINE_TYPES as LineType[]"},description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:{value:"DEFAULT_LINE_WIDTHS as LineWidth[]"},description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},hiddenSeries:{defaultValue:{value:"[]"},description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},idKey:{defaultValue:{value:"rscMarkId"},description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/Chart.tsx#Chart"]={docgenInfo:Chart_Chart.__docgenInfo,name:"Chart",path:"packages/react-spectrum-charts/src/Chart.tsx#Chart"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/RscChart.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>RscChart});var react=__webpack_require__("./node_modules/react/index.js"),dist_import=__webpack_require__("./node_modules/@react-spectrum/dialog/dist/import.mjs"),button_dist_import=__webpack_require__("./node_modules/@react-spectrum/button/dist/import.mjs"),view_dist_import=__webpack_require__("./node_modules/@react-spectrum/view/dist/import.mjs"),constants=__webpack_require__("./packages/constants/index.ts"),vega_spec_builder=__webpack_require__("./packages/vega-spec-builder/index.ts"),vega_embed_module=(__webpack_require__("./packages/react-spectrum-charts/src/Chart.css"),__webpack_require__("./node_modules/vega-embed/build/vega-embed.module.js")),locales=__webpack_require__("./packages/locales/index.ts"),utils=__webpack_require__("./packages/react-spectrum-charts/src/utils/index.ts");var themes=__webpack_require__("./packages/themes/index.ts"),alpha=__webpack_require__("./packages/react-spectrum-charts/src/alpha/index.ts"),Annotation=__webpack_require__("./packages/react-spectrum-charts/src/components/Annotation/index.ts"),Area=__webpack_require__("./packages/react-spectrum-charts/src/components/Area/index.ts"),Axis=__webpack_require__("./packages/react-spectrum-charts/src/components/Axis/index.ts"),AxisAnnotation=__webpack_require__("./packages/react-spectrum-charts/src/components/AxisAnnotation/index.ts"),Bar=__webpack_require__("./packages/react-spectrum-charts/src/components/Bar/index.ts"),ChartPopover=__webpack_require__("./packages/react-spectrum-charts/src/components/ChartPopover/index.ts"),ChartTooltip=__webpack_require__("./packages/react-spectrum-charts/src/components/ChartTooltip/index.ts"),Legend=__webpack_require__("./packages/react-spectrum-charts/src/components/Legend/index.ts"),Line=__webpack_require__("./packages/react-spectrum-charts/src/components/Line/index.ts"),MetricRange=__webpack_require__("./packages/react-spectrum-charts/src/components/MetricRange/index.ts"),ReferenceLine=__webpack_require__("./packages/react-spectrum-charts/src/components/ReferenceLine/index.ts"),Scatter=__webpack_require__("./packages/react-spectrum-charts/src/components/Scatter/index.ts"),ScatterPath=__webpack_require__("./packages/react-spectrum-charts/src/components/ScatterPath/index.ts"),Title=__webpack_require__("./packages/react-spectrum-charts/src/components/Title/index.ts"),Trendline=__webpack_require__("./packages/react-spectrum-charts/src/components/Trendline/index.ts"),TrendlineAnnotation=__webpack_require__("./packages/react-spectrum-charts/src/components/TrendlineAnnotation/index.ts"),rc=__webpack_require__("./packages/react-spectrum-charts/src/rc/index.ts");const getLineOptions=({children,onClick,...lineProps})=>{const{chartPopovers,chartTooltips,metricRanges,trendlines}=childrenToOptions(children);return{...lineProps,chartPopovers,chartTooltips,hasOnClick:Boolean(onClick),markType:"line",metricRanges,trendlines}},childrenToOptions=children=>{const axes=[],axisAnnotations=[],barAnnotations=[],chartPopovers=[],chartTooltips=[],donutSummaries=[],legends=[],lines=[],marks=[],metricRanges=[],referenceLines=[],segmentLabels=[],scatterPaths=[],titles=[],trendlineAnnotations=[],trendlines=[];return(0,utils.j1)(children).forEach((child=>{if("displayName"in child.type)switch(child.type.displayName){case Area.G.displayName:marks.push((({children,...areaProps})=>{const{chartPopovers,chartTooltips}=childrenToOptions(children);return{...areaProps,chartPopovers,chartTooltips,markType:"area"}})(child.props));break;case Annotation.Y.displayName:barAnnotations.push(child.props);break;case Axis._.displayName:axes.push((({children,...axisProps})=>{const{axisAnnotations,referenceLines}=childrenToOptions(children);return{...axisProps,axisAnnotations,referenceLines}})(child.props));break;case AxisAnnotation.b.displayName:axisAnnotations.push((({children,...axisAnnotationProps})=>{const{chartPopovers,chartTooltips}=childrenToOptions(children);return{...axisAnnotationProps,chartPopovers,chartTooltips}})(child.props));break;case Bar.y.displayName:marks.push((({children,onClick,...barProps})=>{const{barAnnotations,chartPopovers,chartTooltips,trendlines}=childrenToOptions(children);return{...barProps,barAnnotations,chartPopovers,chartTooltips,hasOnClick:Boolean(onClick),markType:"bar",trendlines}})(child.props));break;case alpha.D.displayName:marks.push({...child.props,markType:"bullet"});break;case ChartPopover.k.displayName:chartPopovers.push((({children:_,...chartPopoverOptions})=>chartPopoverOptions)(child.props));break;case ChartTooltip.I.displayName:chartTooltips.push((({children:_,...chartTooltipOptions})=>chartTooltipOptions)(child.props));break;case alpha.x.displayName:marks.push((({children,...comboProps})=>({...comboProps,marks:childrenToOptions(children).marks,markType:"combo"}))(child.props));break;case rc.RJ.displayName:marks.push((({children,...donutProps})=>{const{chartPopovers,chartTooltips,donutSummaries,segmentLabels}=childrenToOptions(children);return{...donutProps,chartPopovers,chartTooltips,donutSummaries,markType:"donut",segmentLabels}})(child.props));break;case rc.Ri.displayName:donutSummaries.push(child.props);break;case MetricRange.u.displayName:metricRanges.push(child.props);break;case Legend.s.displayName:legends.push((({children,titleLimit,onClick,onMouseOut,onMouseOver,...legendProps})=>{const{chartPopovers}=childrenToOptions(children);return{...legendProps,...void 0!==titleLimit?{titleLimit}:{},hasOnClick:Boolean(onClick),hasMouseInteraction:Boolean(onMouseOut||onMouseOver),chartPopovers}})(child.props));break;case Line.N.displayName:marks.push(getLineOptions(child.props)),lines.push(getLineOptions(child.props));break;case ReferenceLine.e.displayName:referenceLines.push(child.props);break;case Scatter.X.displayName:marks.push((({children,...scatterProps})=>{const{chartPopovers,chartTooltips,scatterPaths,trendlines}=childrenToOptions(children);return{...scatterProps,chartPopovers,chartTooltips,markType:"scatter",scatterPaths,trendlines}})(child.props));break;case ScatterPath.Y.displayName:scatterPaths.push(child.props);break;case rc.o5.displayName:segmentLabels.push(child.props);break;case Title.h.displayName:titles.push(child.props);break;case Trendline.c.displayName:trendlines.push((({children,...trendlineProps})=>{const{chartTooltips,trendlineAnnotations}=childrenToOptions(children);return{...trendlineProps,chartTooltips,trendlineAnnotations}})(child.props));break;case TrendlineAnnotation.$.displayName:trendlineAnnotations.push(child.props);break;default:console.error("Invalid component type: ",child.type.displayName)}else console.error("Invalid component type. Component is missing display name.")})),{axes,axisAnnotations,barAnnotations,chartTooltips,chartPopovers,donutSummaries,legends,lines,marks,metricRanges,referenceLines,scatterPaths,segmentLabels,titles,trendlines,trendlineAnnotations}};function useSpec({backgroundColor,children,colors,colorScheme,data,description,hiddenSeries,highlightedItem,highlightedSeries,idKey,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title,UNSAFE_vegaSpec}){return(0,react.useMemo)((()=>{if(UNSAFE_vegaSpec){const vegaSpecWithDefaults=initializeSpec(UNSAFE_vegaSpec,{backgroundColor,colorScheme,data,description,title});return JSON.parse(JSON.stringify(vegaSpecWithDefaults))}const chartOptions=(({children,...specProps})=>{const{axes,marks,legends,titles}=childrenToOptions(children);return{...specProps,axes,marks,legends,titles}})({backgroundColor,children,colors,colorScheme,description,hiddenSeries,highlightedItem,highlightedSeries,idKey,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title});return(0,vega_spec_builder.m)(chartOptions)}),[UNSAFE_vegaSpec,backgroundColor,children,colors,colorScheme,description,hiddenSeries,highlightedItem,highlightedSeries,idKey,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes,title,data])}const initializeSpec=(spec={},chartOptions={})=>{const{backgroundColor,colorScheme="light",data,description,title}=chartOptions;return{...{title:title||void 0,description,autosize:{type:"fit",contains:"padding",resize:!0},data:isVegaData(data)?data:vega_spec_builder.cv,background:backgroundColor?(0,themes.FH)(backgroundColor,colorScheme):void 0},...spec||{}}},isVegaValuesDataset=dataset=>Array.isArray(dataset.values),isVegaData=data=>data?.length&&isVegaValuesDataset(data[0]),extractValues=data=>data.reduce(((memo,dataset)=>{if(isVegaValuesDataset(dataset)){const{name,values}=dataset;memo[name]=values}return memo}),{});try{useSpec.displayName="useSpec",useSpec.__docgenInfo={description:"",displayName:"useSpec",props:{children:{defaultValue:null,description:"Children with all non-RSC components removed",name:"children",required:!0,type:{name:"ChartChildElement[]"}},data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"ChartData[]"}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},backgroundColor:{defaultValue:null,description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:null,description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:null,description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},lineTypes:{defaultValue:null,description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:null,description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},hiddenSeries:{defaultValue:null,description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},idKey:{defaultValue:null,description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useSpec.tsx#useSpec"]={docgenInfo:useSpec.__docgenInfo,name:"useSpec",path:"packages/react-spectrum-charts/src/hooks/useSpec.tsx#useSpec"})}catch(__react_docgen_typescript_loader_error){}try{isVegaData.displayName="isVegaData",isVegaData.__docgenInfo={description:"Check to see if the data array is an array of Vega datasets instead of an array of values.",displayName:"isVegaData",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useSpec.tsx#isVegaData"]={docgenInfo:isVegaData.__docgenInfo,name:"isVegaData",path:"packages/react-spectrum-charts/src/hooks/useSpec.tsx#isVegaData"})}catch(__react_docgen_typescript_loader_error){}try{extractValues.displayName="extractValues",extractValues.__docgenInfo={description:"The inverse of `mergeValuesIntoData`. Given an array of Vega datasets, extract the values from\neach dataset and return an object of key/value pairs where the key is the dataset name and the\nvalue is the array of values.",displayName:"extractValues",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useSpec.tsx#extractValues"]={docgenInfo:extractValues.__docgenInfo,name:"extractValues",path:"packages/react-spectrum-charts/src/hooks/useSpec.tsx#extractValues"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const VegaChart=({config,data,debug,height,locale,onNewView,padding,renderer="svg",signals,spec,tooltip,width})=>{const containerRef=(0,react.useRef)(null),chartView=(0,react.useRef)(),{number:numberLocale,time:timeLocale}=(0,react.useMemo)((()=>(0,locales.JK)(locale)),[locale]),chartData=(0,react.useMemo)((()=>{const clonedData=JSON.parse(JSON.stringify(data));return isVegaData(clonedData)?extractValues(clonedData):{[constants.Bt]:clonedData}}),[data]);return((debug,spec,chartData,chartWidth,height,config)=>{(0,react.useEffect)((()=>{if(debug){const data=JSON.parse(JSON.stringify(spec.data)),combinedData=(0,vega_spec_builder.JH)(data,chartData);(0,utils.cY)(debug,{title:"react-spectrum-charts Vega Spec",contents:{width:chartWidth,height,config,...spec,data:combinedData}})}}),[debug,spec,chartData,chartWidth,height,config])})(debug,spec,chartData,width,height,config),(0,react.useEffect)((()=>{if(width&&height&&containerRef.current){const specCopy=JSON.parse(JSON.stringify(spec)),tableData=specCopy.data?.find((d=>d.name===constants.Bt));tableData&&"values"in tableData&&(tableData.values=chartData.table),signals&&(specCopy.signals=specCopy.signals?.map((signal=>(signal.name in signals&&void 0!==signals[signal.name]&&"value"in signal&&(signal.value=signals[signal.name]),signal)))),(0,vega_embed_module.Ay)(containerRef.current,specCopy,{...(0,vega_spec_builder.He)({locale,height,width,padding,renderer,config}),tooltip}).then((({view})=>{chartView.current=view,onNewView(view),view.resize(),view.runAsync(),setTimeout((()=>view.runAsync()),0)}))}return()=>{chartView.current&&(chartView.current.finalize(),chartView.current=void 0)}}),[chartData.table,config,data,height,numberLocale,timeLocale,onNewView,padding,renderer,signals,spec,tooltip,width,locale]),(0,jsx_runtime.jsx)("div",{ref:containerRef,className:"rsc"})};try{VegaChart.displayName="VegaChart",VegaChart.__docgenInfo={description:"",displayName:"VegaChart",props:{config:{defaultValue:null,description:"",name:"config",required:!0,type:{name:"Config"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"ChartData[]"}},debug:{defaultValue:null,description:"",name:"debug",required:!0,type:{name:"boolean"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}},locale:{defaultValue:null,description:"",name:"locale",required:!0,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 12 more ... | undefined'}},onNewView:{defaultValue:null,description:"",name:"onNewView",required:!0,type:{name:"(view: View) => void"}},padding:{defaultValue:null,description:"",name:"padding",required:!0,type:{name:"Padding"}},renderer:{defaultValue:{value:"svg"},description:"",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'},{value:'"none"'},{value:'"hybrid"'}]}},signals:{defaultValue:null,description:"",name:"signals",required:!1,type:{name:"Record<string, unknown>"}},spec:{defaultValue:null,description:"",name:"spec",required:!0,type:{name:"Spec"}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!0,type:{name:"Options"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/VegaChart.tsx#VegaChart"]={docgenInfo:VegaChart.__docgenInfo,name:"VegaChart",path:"packages/react-spectrum-charts/src/VegaChart.tsx#VegaChart"})}catch(__react_docgen_typescript_loader_error){}var RscChartContext=__webpack_require__("./packages/react-spectrum-charts/src/context/RscChartContext.tsx"),useChartImperativeHandle=__webpack_require__("./packages/react-spectrum-charts/src/hooks/useChartImperativeHandle.tsx");const ChartContainer=({children})=>(0,jsx_runtime.jsx)("div",{children});function useLegend(children){const legend=(0,react.useMemo)((()=>(0,utils.V6)((0,react.createElement)(ChartContainer,void 0,children),Legend.s)),[children]),[legendHiddenSeries,setLegendHiddenSeries]=(0,react.useState)(legend?.props?.defaultHiddenSeries??[]);if(!legend)return{legendHiddenSeries,setLegendHiddenSeries};const{descriptions,isToggleable,onClick,onMouseOut,onMouseOver}=legend.props;return{legendHiddenSeries,setLegendHiddenSeries,descriptions,isToggleable,onClick,onMouseOut,onMouseOver}}ChartContainer.displayName="ChartContainer";try{ChartContainer.displayName="ChartContainer",ChartContainer.__docgenInfo={description:"",displayName:"ChartContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useLegend.tsx#ChartContainer"]={docgenInfo:ChartContainer.__docgenInfo,name:"ChartContainer",path:"packages/react-spectrum-charts/src/hooks/useLegend.tsx#ChartContainer"})}catch(__react_docgen_typescript_loader_error){}var vega_tooltip_module=__webpack_require__("./node_modules/vega-tooltip/build/vega-tooltip.module.js"),components=__webpack_require__("./packages/react-spectrum-charts/src/components/index.ts"),src=__webpack_require__("./packages/react-spectrum-charts/src/index.ts");function useMarkMouseInputDetails(children){const markElements=(0,react.useMemo)((()=>[...(0,utils.yH)((0,react.createElement)(src.t1,{data:[]},children),src.yP,[])]),[children]);return(0,react.useMemo)((()=>markElements.filter((mark=>{const barProps=mark.element.props;return barProps.onMouseOver||barProps.onMouseOut})).map((mark=>{const barProps=mark.element.props;return{markName:mark.name,onMouseOver:barProps.onMouseOver,onMouseOut:barProps.onMouseOut}}))),[markElements])}try{useMarkMouseInputDetails.displayName="useMarkMouseInputDetails",useMarkMouseInputDetails.__docgenInfo={description:"",displayName:"useMarkMouseInputDetails",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useMarkMouseInputDetails.tsx#useMarkMouseInputDetails"]={docgenInfo:useMarkMouseInputDetails.__docgenInfo,name:"useMarkMouseInputDetails",path:"packages/react-spectrum-charts/src/hooks/useMarkMouseInputDetails.tsx#useMarkMouseInputDetails"})}catch(__react_docgen_typescript_loader_error){}function useMarkOnClickDetails(children){const markElements=(0,react.useMemo)((()=>[...(0,utils.yH)((0,react.createElement)(src.t1,{data:[]},children),src.yP,[]),...(0,utils.yH)((0,react.createElement)(src.t1,{data:[]},children),src.N1,[])]),[children]);return(0,react.useMemo)((()=>markElements.filter((mark=>mark.element.props.onClick)).map((mark=>({markName:mark.name,onClick:mark.element.props.onClick})))),[markElements])}try{useMarkOnClickDetails.displayName="useMarkOnClickDetails",useMarkOnClickDetails.__docgenInfo={description:"",displayName:"useMarkOnClickDetails",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useMarkOnClickDetails.tsx#useMarkOnClickDetails"]={docgenInfo:useMarkOnClickDetails.__docgenInfo,name:"useMarkOnClickDetails",path:"packages/react-spectrum-charts/src/hooks/useMarkOnClickDetails.tsx#useMarkOnClickDetails"})}catch(__react_docgen_typescript_loader_error){}const usePopovers_ChartContainer=({children})=>(0,jsx_runtime.jsx)("div",{children});function usePopovers(children){const popoverElements=(0,react.useMemo)((()=>(0,utils.fI)((0,react.createElement)(usePopovers_ChartContainer,void 0,children),ChartPopover.k,[],void 0,"Chart")),[children]);return(0,react.useMemo)((()=>popoverElements.filter((popover=>popover.element.props.children)).map(((popover,index)=>({chartPopoverProps:popover.element.props,key:`${popover.name}Popover${index}`,name:popover.name,UNSAFE_highlightBy:popover.element.props.UNSAFE_highlightBy,parent:popover.parent})))),[popoverElements])}usePopovers_ChartContainer.displayName="ChartContainer";try{usePopovers_ChartContainer.displayName="ChartContainer",usePopovers_ChartContainer.__docgenInfo={description:"",displayName:"ChartContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/usePopovers.tsx#ChartContainer"]={docgenInfo:usePopovers_ChartContainer.__docgenInfo,name:"ChartContainer",path:"packages/react-spectrum-charts/src/hooks/usePopovers.tsx#ChartContainer"})}catch(__react_docgen_typescript_loader_error){}const hooks_useNewChartView=({idKey},sanitizedChildren,tooltipOptions)=>{const{chartView,selectedData,selectedDataBounds,selectedDataName,chartId}=(0,RscChartContext.N)(),popovers=usePopovers(sanitizedChildren),{legendHiddenSeries,setLegendHiddenSeries,isToggleable:legendIsToggleable,onClick:onLegendClick,onMouseOut:onLegendMouseOut,onMouseOver:onLegendMouseOver}=useLegend(sanitizedChildren),markClickDetails=useMarkOnClickDetails(sanitizedChildren),markMouseInputDetails=useMarkMouseInputDetails(sanitizedChildren),legendHasPopover=(0,react.useMemo)((()=>popovers.some((p=>p.parent===components.s$.displayName&&!p.chartPopoverProps.rightClick))),[popovers]),legendHasRightClickPopover=(0,react.useMemo)((()=>popovers.some((p=>p.parent===components.s$.displayName&&p.chartPopoverProps.rightClick))),[popovers]);return(0,react.useCallback)((view=>{let tooltipTimeout;if(chartView.current=view,view.tooltip(((viewRef,event,item,value)=>{const tooltipHandler=new vega_tooltip_module.hR(tooltipOptions);tooltipTimeout&&(clearTimeout(tooltipTimeout),tooltipTimeout=void 0),event&&"pointermove"===event.type&&itemIsLegendItem(item)&&"tooltip"in item?tooltipTimeout=setTimeout((()=>{tooltipHandler.call(viewRef,event,item,value),tooltipTimeout=void 0}),constants.mm):tooltipHandler.call(viewRef,event,item,value)})),(popovers.length||legendIsToggleable||onLegendClick)&&(legendIsToggleable&&view.signal("hiddenSeries",legendHiddenSeries),(0,utils.zO)({idKey,selectedData:selectedData.current,view}),view.addEventListener("click",(0,utils.eH)({chartView,hiddenSeries:legendHiddenSeries,chartId,selectedData,selectedDataBounds,selectedDataName,setHiddenSeries:setLegendHiddenSeries,legendIsToggleable,legendHasPopover,onLegendClick,trigger:"click"})),popovers.some((p=>p.chartPopoverProps.rightClick)))){const chartContainer=document.querySelector(`#${chartId}`);chartContainer&&chartContainer.addEventListener("contextmenu",(e=>e.preventDefault())),view.addEventListener("contextmenu",(0,utils.eH)({chartView,hiddenSeries:legendHiddenSeries,chartId,selectedData,selectedDataBounds,selectedDataName,setHiddenSeries:setLegendHiddenSeries,legendHasPopover:legendHasRightClickPopover,legendIsToggleable,onLegendClick,trigger:"contextmenu"}))}view.addEventListener("click",(0,utils.wm)(chartView,markClickDetails)),view.addEventListener("mouseover",(0,utils.uk)(onLegendMouseOver,markMouseInputDetails)),view.addEventListener("mouseout",(0,utils.uk)(onLegendMouseOut,markMouseInputDetails))}),[chartId,chartView,idKey,legendHasPopover,legendHasRightClickPopover,legendHiddenSeries,legendIsToggleable,markClickDetails,markMouseInputDetails,onLegendClick,onLegendMouseOut,onLegendMouseOver,popovers,selectedData,selectedDataBounds,selectedDataName,setLegendHiddenSeries,tooltipOptions])},itemIsLegendItem=item=>"name"in item.mark&&"string"==typeof item.mark.name&&item.mark.name.includes("legend");function usePopoverAnchorStyle(padding){const{chartView,selectedDataBounds,isPopoverOpen}=(0,RscChartContext.N)(),bounds=selectedDataBounds.current,view=chartView.current;return(0,react.useMemo)((()=>{if(isPopoverOpen&&bounds&&view){const{x1,x2,y1,y2}=bounds,leftPadding=("number"==typeof padding?padding:padding.left)??0,topPadding=("number"==typeof padding?padding:padding.top)??0;return{position:"absolute",width:x2-x1,height:y2-y1,left:x1+leftPadding+view.origin()[0],top:y1+topPadding+view.origin()[1]}}return{display:"none"}}),[isPopoverOpen,view,bounds,padding])}try{usePopoverAnchorStyle.displayName="usePopoverAnchorStyle",usePopoverAnchorStyle.__docgenInfo={description:"",displayName:"usePopoverAnchorStyle",props:{top:{defaultValue:null,description:"",name:"top",required:!1,type:{name:"number"}},bottom:{defaultValue:null,description:"",name:"bottom",required:!1,type:{name:"number"}},left:{defaultValue:null,description:"",name:"left",required:!1,type:{name:"number"}},right:{defaultValue:null,description:"",name:"right",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/usePopoverAnchorStyle.tsx#usePopoverAnchorStyle"]={docgenInfo:usePopoverAnchorStyle.__docgenInfo,name:"usePopoverAnchorStyle",path:"packages/react-spectrum-charts/src/hooks/usePopoverAnchorStyle.tsx#usePopoverAnchorStyle"})}catch(__react_docgen_typescript_loader_error){}var server_browser=__webpack_require__("./node_modules/react-dom/server.browser.js");const useTooltips_ChartContainer=({children})=>(0,jsx_runtime.jsx)("div",{children});useTooltips_ChartContainer.displayName="ChartContainer";try{useTooltips_ChartContainer.displayName="ChartContainer",useTooltips_ChartContainer.__docgenInfo={description:"",displayName:"ChartContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useTooltips.tsx#ChartContainer"]={docgenInfo:useTooltips_ChartContainer.__docgenInfo,name:"ChartContainer",path:"packages/react-spectrum-charts/src/hooks/useTooltips.tsx#ChartContainer"})}catch(__react_docgen_typescript_loader_error){}const hooks_useTooltipInteractions=(props,sanitizedChildren)=>{const{chartView,controlledHoveredIdSignal,controlledHoveredGroupSignal}=(0,RscChartContext.N)(),{debug,colorScheme,idKey,tooltipAnchor,tooltipPlacement}=props,tooltips=function useTooltips(children){const tooltipElements=(0,react.useMemo)((()=>(0,utils.fI)((0,react.createElement)(useTooltips_ChartContainer,void 0,children),ChartTooltip.I,[])),[children]);return(0,react.useMemo)((()=>tooltipElements.filter((tooltip=>tooltip.element.props.children)).map((tooltip=>({name:tooltip.name,callback:tooltip.element.props.children,highlightBy:tooltip.element.props.highlightBy})))),[tooltipElements])}(sanitizedChildren),{descriptions:legendDescriptions}=useLegend(sanitizedChildren),tooltipOptions=getTooltipOptions(colorScheme,tooltipAnchor,tooltipPlacement);return(tooltips.length||legendDescriptions)&&(tooltipOptions.formatTooltip=value=>{if((0,utils.cY)(debug,{title:"Tooltip datum",contents:value}),value[constants.EA]?.startsWith("legend")&&legendDescriptions&&"index"in value)return(0,utils.cY)(debug,{title:"Legend descriptions",contents:legendDescriptions}),(0,server_browser.qV)((0,jsx_runtime.jsx)(LegendTooltip,{value,descriptions:legendDescriptions,domain:chartView.current?.scale("legend0Entries").domain()}));const tooltip=tooltips.find((t=>t.name===value[constants.EA]));if(tooltip?.callback&&!("index"in value)){if(controlledHoveredIdSignal.current&&chartView.current?.signal(controlledHoveredIdSignal.current.name,value?.[idKey]??null),controlledHoveredGroupSignal.current){const key=Object.keys(value).find((k=>k.endsWith("_highlightGroupId")));key&&chartView.current?.signal(controlledHoveredGroupSignal.current.name,value[key])}if(tooltip.highlightBy&&"item"!==tooltip.highlightBy){const tableData=chartView.current?.data(constants.H5),groupId=`${tooltip.name}_highlightGroupId`;value[constants.dm]=tableData?.filter((d=>d[groupId]===value[groupId]))}return(0,server_browser.qV)((0,jsx_runtime.jsx)("div",{className:"rsc-tooltip","data-testid":"rsc-tooltip",children:tooltip.callback(value)}))}return""}),{tooltipOptions}},getTooltipOptions=(colorScheme,tooltipAnchor,tooltipPlacement)=>{const offset="cursor"===tooltipAnchor?10:6;return{theme:colorScheme,anchor:tooltipAnchor,position:"mark"===tooltipAnchor?{top:["top","bottom","right","left","top-right","top-left","bottom-right","bottom-left"],bottom:["bottom","top","right","left","bottom-right","bottom-left","top-right","top-left"],right:["right","left","top","bottom","top-right","bottom-right","top-left","bottom-left"],left:["left","right","top","bottom","top-left","bottom-left","top-right","bottom-right"]}[tooltipPlacement]:void 0,offsetX:offset,offsetY:offset}},LegendTooltip=({value,descriptions,domain})=>{const series=domain[value.index],description=descriptions.find((d=>d.seriesName===series));return description?(0,jsx_runtime.jsxs)("div",{className:"rsc-tooltip legend-tooltip","data-testid":"rsc-tooltip",children:[(0,jsx_runtime.jsx)("div",{className:"series",children:description.title??series}),(0,jsx_runtime.jsx)("p",{className:"series-description",children:description.description})]}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{})};try{useTooltipInteractions.displayName="useTooltipInteractions",useTooltipInteractions.__docgenInfo={description:"",displayName:"useTooltipInteractions",props:{chartWidth:{defaultValue:null,description:"",name:"chartWidth",required:!0,type:{name:"number"}},chartHeight:{defaultValue:null,description:"",name:"chartHeight",required:!0,type:{name:"number"}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},config:{defaultValue:null,description:"Vega config that can be used to tweak the style of the chart.\n@see https://vega.github.io/vega/docs/config/",name:"config",required:!1,type:{name:"Config"}},data:{defaultValue:null,description:"Chart data array.",name:"data",required:!0,type:{name:"ChartData[]"}},backgroundColor:{defaultValue:null,description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:null,description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:null,description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},lineTypes:{defaultValue:null,description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:null,description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},hiddenSeries:{defaultValue:null,description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},idKey:{defaultValue:null,description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}},debug:{defaultValue:null,description:"Enables debug mode which will console log things like the generated vega spec and the datums for tooltips.",name:"debug",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Number and time locales to use",name:"locale",required:!1,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 11 more ... | { ...; }'}},padding:{defaultValue:null,description:"Chart padding",name:"padding",required:!1,type:{name:"Padding"}},renderer:{defaultValue:null,description:"Method to use for rendering the chart. 'canvas' is ideal for large data sets.",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'}]}},tooltipAnchor:{defaultValue:null,description:"Sets what the tooltip should be anchored to. Defaults to `cursor`.",name:"tooltipAnchor",required:!1,type:{name:"enum",value:[{value:'"cursor"'},{value:'"mark"'}]}},tooltipPlacement:{defaultValue:null,description:"The placement of the tooltip with respect to the mark. Only applicable if `tooltipAnchor = 'mark'`.",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useTooltipInteractions.tsx#useTooltipInteractions"]={docgenInfo:useTooltipInteractions.__docgenInfo,name:"useTooltipInteractions",path:"packages/react-spectrum-charts/src/hooks/useTooltipInteractions.tsx#useTooltipInteractions"})}catch(__react_docgen_typescript_loader_error){}const useChartInteractions=(props,sanitizedChildren)=>{const{selectedData}=(0,RscChartContext.N)(),{tooltipOptions}=hooks_useTooltipInteractions(props,sanitizedChildren),{legendHiddenSeries,isToggleable:legendIsToggleable}=useLegend(sanitizedChildren),targetStyle=usePopoverAnchorStyle(props.padding);return{signals:(0,react.useMemo)((()=>{const signals={backgroundColor:(0,themes.FH)("gray-50",props.colorScheme)};return legendIsToggleable&&(signals.hiddenSeries=legendHiddenSeries),signals[constants.sk]=selectedData.current?.[props.idKey]??null,signals[constants.uW]=selectedData.current?.[constants.y4]??null,signals}),[legendHiddenSeries,legendIsToggleable,props.colorScheme,props.idKey,selectedData]),targetStyle,tooltipOptions,onNewView:hooks_useNewChartView(props,sanitizedChildren,tooltipOptions)}};try{useChartInteractions.displayName="useChartInteractions",useChartInteractions.__docgenInfo={description:"",displayName:"useChartInteractions",props:{chartWidth:{defaultValue:null,description:"",name:"chartWidth",required:!0,type:{name:"number"}},chartHeight:{defaultValue:null,description:"",name:"chartHeight",required:!0,type:{name:"number"}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},config:{defaultValue:null,description:"Vega config that can be used to tweak the style of the chart.\n@see https://vega.github.io/vega/docs/config/",name:"config",required:!1,type:{name:"Config"}},data:{defaultValue:null,description:"Chart data array.",name:"data",required:!0,type:{name:"ChartData[]"}},backgroundColor:{defaultValue:null,description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:null,description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:null,description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},lineTypes:{defaultValue:null,description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:null,description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},hiddenSeries:{defaultValue:null,description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},idKey:{defaultValue:null,description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}},debug:{defaultValue:null,description:"Enables debug mode which will console log things like the generated vega spec and the datums for tooltips.",name:"debug",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Number and time locales to use",name:"locale",required:!1,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 11 more ... | { ...; }'}},padding:{defaultValue:null,description:"Chart padding",name:"padding",required:!1,type:{name:"Padding"}},renderer:{defaultValue:null,description:"Method to use for rendering the chart. 'canvas' is ideal for large data sets.",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'}]}},tooltipAnchor:{defaultValue:null,description:"Sets what the tooltip should be anchored to. Defaults to `cursor`.",name:"tooltipAnchor",required:!1,type:{name:"enum",value:[{value:'"cursor"'},{value:'"mark"'}]}},tooltipPlacement:{defaultValue:null,description:"The placement of the tooltip with respect to the mark. Only applicable if `tooltipAnchor = 'mark'`.",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useChartInteractions.tsx#useChartInteractions"]={docgenInfo:useChartInteractions.__docgenInfo,name:"useChartInteractions",path:"packages/react-spectrum-charts/src/hooks/useChartInteractions.tsx#useChartInteractions"})}catch(__react_docgen_typescript_loader_error){}function useSpecProps(spec){const{controlledHoveredIdSignal,controlledHoveredGroupSignal}=(0,RscChartContext.N)();controlledHoveredIdSignal.current=spec.signals?.find((signal=>signal.name.includes("controlledHoveredId"))),controlledHoveredGroupSignal.current=spec.signals?.find((signal=>signal.name.includes("controlledHoveredGroup")))}try{useSpecProps.displayName="useSpecProps",useSpecProps.__docgenInfo={description:"",displayName:"useSpecProps",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useSpecProps.tsx#useSpecProps"]={docgenInfo:useSpecProps.__docgenInfo,name:"useSpecProps",path:"packages/react-spectrum-charts/src/hooks/useSpecProps.tsx#useSpecProps"})}catch(__react_docgen_typescript_loader_error){}const RscChart=(0,react.forwardRef)(((props,forwardedRef)=>{const{backgroundColor,data,chartWidth,chartHeight,colors,colorScheme,config,description,debug,hiddenSeries,highlightedItem,highlightedSeries,lineTypes,lineWidths,locale,opacities,padding,renderer,symbolShapes=constants.wM,symbolSizes=constants._$,title,UNSAFE_vegaSpec,idKey}=props,{chartView,chartId,selectedData,popoverAnchorRef,isPopoverOpen,setIsPopoverOpen}=(0,RscChartContext.N)(),sanitizedChildren=(0,react.useMemo)((()=>(0,utils.F0)(props.children)),[props.children]),spec=useSpec({backgroundColor,children:sanitizedChildren,colors,data,description,idKey,hiddenSeries,highlightedItem,highlightedSeries,symbolShapes,symbolSizes,lineTypes,lineWidths,opacities,colorScheme,title,UNSAFE_vegaSpec});useSpecProps(spec);const{signals,targetStyle,tooltipOptions,onNewView}=useChartInteractions(props,sanitizedChildren),chartConfig=(0,react.useMemo)((()=>(0,vega_spec_builder.NJ)(config,colorScheme)),[config,colorScheme]);(0,react.useEffect)((()=>{const tooltipElement=document.getElementById("vg-tooltip-element");tooltipElement&&(tooltipElement.hidden=isPopoverOpen,isPopoverOpen||(selectedData.current=null))}),[isPopoverOpen,selectedData]),(0,useChartImperativeHandle.A)(forwardedRef,{chartView,title});const popovers=usePopovers(sanitizedChildren);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{id:`${chartId}-popover-anchor`,"data-testid":"rsc-popover-anchor",ref:popoverAnchorRef,style:targetStyle}),(0,jsx_runtime.jsx)(VegaChart,{spec,config:chartConfig,data,debug,renderer,width:chartWidth,height:chartHeight,locale,padding,signals,tooltip:tooltipOptions,onNewView}),popovers.map((popover=>(0,jsx_runtime.jsx)(ChartDialog,{datum:selectedData.current,targetElement:popoverAnchorRef,setIsPopoverOpen,popover},popover.key)))]})}));RscChart.displayName="RscChart";const ChartDialog=({datum,popover,setIsPopoverOpen,targetElement})=>{const{chartPopoverProps,name}=popover,{children,onOpenChange,containerPadding,rightClick,...dialogProps}=chartPopoverProps,minWidth=dialogProps.minWidth??0;return(0,jsx_runtime.jsxs)(dist_import.zM,{type:"popover",mobileType:"tray",targetRef:targetElement,onOpenChange:isOpen=>{onOpenChange?.(isOpen),setIsPopoverOpen(isOpen)},placement:"top",hideArrow:!0,containerPadding,children:[(0,jsx_runtime.jsx)(button_dist_import.rA,{id:`${name}-${rightClick?"contextmenu":"popover"}-button`,UNSAFE_style:{display:"none"},children:rightClick?"launch chart context menu":"launch chart popover"}),close=>(0,jsx_runtime.jsx)(dist_import.lG,{"data-testid":"rsc-popover",UNSAFE_className:"rsc-popover",...dialogProps,minWidth,children:(0,jsx_runtime.jsx)(view_dist_import.Ss,{gridColumn:"1/-1",gridRow:"1/-1",margin:12,children:datum&&datum[constants.EA]===name&&children?.(datum,close)})})]})};try{RscChart.displayName="RscChart",RscChart.__docgenInfo={description:"",displayName:"RscChart",props:{chartWidth:{defaultValue:null,description:"",name:"chartWidth",required:!0,type:{name:"number"}},chartHeight:{defaultValue:null,description:"",name:"chartHeight",required:!0,type:{name:"number"}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},config:{defaultValue:null,description:"Vega config that can be used to tweak the style of the chart.\n@see https://vega.github.io/vega/docs/config/",name:"config",required:!1,type:{name:"Config"}},data:{defaultValue:null,description:"Chart data array.",name:"data",required:!0,type:{name:"ChartData[]"}},backgroundColor:{defaultValue:null,description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:null,description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:null,description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},lineTypes:{defaultValue:null,description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:null,description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},hiddenSeries:{defaultValue:null,description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},idKey:{defaultValue:null,description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}},debug:{defaultValue:null,description:"Enables debug mode which will console log things like the generated vega spec and the datums for tooltips.",name:"debug",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Number and time locales to use",name:"locale",required:!1,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 11 more ... | { ...; }'}},padding:{defaultValue:null,description:"Chart padding",name:"padding",required:!1,type:{name:"Padding"}},renderer:{defaultValue:null,description:"Method to use for rendering the chart. 'canvas' is ideal for large data sets.",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'}]}},tooltipAnchor:{defaultValue:null,description:"Sets what the tooltip should be anchored to. Defaults to `cursor`.",name:"tooltipAnchor",required:!1,type:{name:"enum",value:[{value:'"cursor"'},{value:'"mark"'}]}},tooltipPlacement:{defaultValue:null,description:"The placement of the tooltip with respect to the mark. Only applicable if `tooltipAnchor = 'mark'`.",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/RscChart.tsx#RscChart"]={docgenInfo:RscChart.__docgenInfo,name:"RscChart",path:"packages/react-spectrum-charts/src/RscChart.tsx#RscChart"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/alpha/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>Bullet,x:()=>Combo});var constants=__webpack_require__("./packages/constants/index.ts");const Bullet=({name="bullet0",metric="currentAmount",dimension="graphLabel",target="target",direction=constants.xu,numberFormat="",showTarget=!0,showTargetValue=!1,labelPosition=constants.VT,scaleType=constants._K,maxScaleValue=constants.Vi,thresholdBarColor=!1})=>null;Bullet.displayName="Bullet";try{Bullet.displayName="Bullet",Bullet.__docgenInfo={description:"",displayName:"Bullet",props:{name:{defaultValue:{value:"bullet0"},description:"Sets the name of the component.",name:"name",required:!1,type:{name:"string"}},track:{defaultValue:null,description:"Color regions that sit behind the bullet bar",name:"track",required:!1,type:{name:"boolean"}},numberFormat:{defaultValue:{value:""},description:"d3 number format specifier.\nSets the number format for the summary value.\n\nsee {@link https://d3js.org/d3-format#locale_format}",name:"numberFormat",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Key in the data that is used as the color facet",name:"color",required:!1,type:{name:"string"}},metric:{defaultValue:{value:"currentAmount"},description:"Key in the data that is used as the metric",name:"metric",required:!1,type:{name:"string"}},dimension:{defaultValue:{value:"graphLabel"},description:"Data field that the metric is trended against (x-axis for horizontal orientation)",name:"dimension",required:!1,type:{name:"string"}},scaleType:{defaultValue:{value:"normal"},description:"Specifies if the scale should be normal, fixed, or flexible.\n\nIn normal mode the maximum scale value will be calculated using the maximum value of the metric and target data fields.\n\nIn fixed mode the maximum scale value will be set as the maxScaleValue prop.\n\nIn flexible mode the maximum scale value will be calculated using the maximum value of either the maxScaleValue prop or maximum value of the metric and target data fields.\nThis means that the scale max will be set to be the maxScaleValue prop until the data values overtake it.",name:"scaleType",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"fixed"'},{value:'"flexible"'}]}},metricAxis:{defaultValue:null,description:"Adds an axis that follows the max target in basic mode",name:"metricAxis",required:!1,type:{name:"boolean"}},direction:{defaultValue:{value:"column"},description:"Specifies the direction the bars should be ordered (row/column)",name:"direction",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},labelPosition:{defaultValue:{value:"top"},description:"Specifies if the labels should be in top of the bullet chart or to the side. Side labels are not supported in row mode.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"side"'}]}},maxScaleValue:{defaultValue:{value:"100"},description:"Maximum value for the scale. This value must be greater than zero.",name:"maxScaleValue",required:!1,type:{name:"number"}},showTarget:{defaultValue:{value:"true"},description:"Flag to control whether the target is shown",name:"showTarget",required:!1,type:{name:"boolean"}},showTargetValue:{defaultValue:{value:"false"},description:"Flag to control whether the target value is shown.",name:"showTargetValue",required:!1,type:{name:"boolean"}},target:{defaultValue:{value:"target"},description:"Target line",name:"target",required:!1,type:{name:"string"}},thresholdBarColor:{defaultValue:{value:"false"},description:"If true, the metric bar will be colored according to the thresholds.",name:"thresholdBarColor",required:!1,type:{name:"boolean"}},thresholds:{defaultValue:null,description:"Array of threshold definitions to be rendered as background bands on the bullet chart.\n\nEach threshold object supports:\n`thresholdMin` (optional): The lower bound of the threshold. If undefined, the threshold starts from the beginning of the x-scale.\n\n`thresholdMax` (optional): The upper bound of the threshold. If undefined, the threshold extends to the end of the x-scale.\n\n`fill` : The fill color to use for the threshold background.",name:"thresholds",required:!1,type:{name:"ThresholdBackground[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/alpha/components/Bullet/Bullet.tsx#Bullet"]={docgenInfo:Bullet.__docgenInfo,name:"Bullet",path:"packages/react-spectrum-charts/src/alpha/components/Bullet/Bullet.tsx#Bullet"})}catch(__react_docgen_typescript_loader_error){}const Combo=({name="combo0",dimension=constants.Lr})=>null;Combo.displayName="Combo";try{Combo.displayName="Combo",Combo.__docgenInfo={description:"",displayName:"Combo",props:{name:{defaultValue:{value:"combo0"},description:"Sets the name of the component.",name:"name",required:!1,type:{name:"string"}},dimension:{defaultValue:{value:"datetime"},description:"Data field that the metrics are trended against (x-axis for horizontal orientation)",name:"dimension",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/alpha/components/Combo/Combo.tsx#Combo"]={docgenInfo:Combo.__docgenInfo,name:"Combo",path:"packages/react-spectrum-charts/src/alpha/components/Combo/Combo.tsx#Combo"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/context/RscChartContext.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>useChartContext,_:()=>ChartProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const ChartContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null),ChartProvider=({children,chartId,chartView})=>{const controlledHoveredIdSignal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),controlledHoveredGroupSignal=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),popoverAnchorRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),selectedData=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),selectedDataName=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(""),selectedDataBounds=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({x1:0,x2:0,y1:0,y2:0}),[isPopoverOpen,setIsPopoverOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({chartView,chartId,selectedData,selectedDataName,selectedDataBounds,controlledHoveredIdSignal,controlledHoveredGroupSignal,isPopoverOpen,setIsPopoverOpen,popoverAnchorRef})),[chartId,chartView,isPopoverOpen]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ChartContext.Provider,{value,children})},useChartContext=()=>{const context=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ChartContext);if(!context)throw new Error("useChartContext must be used within a ChartProvider");return context};try{ChartProvider.displayName="ChartProvider",ChartProvider.__docgenInfo={description:"",displayName:"ChartProvider",props:{chartId:{defaultValue:null,description:"",name:"chartId",required:!0,type:{name:"string"}},chartView:{defaultValue:null,description:"",name:"chartView",required:!0,type:{name:"MutableRefObject<View | undefined>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/context/RscChartContext.tsx#ChartProvider"]={docgenInfo:ChartProvider.__docgenInfo,name:"ChartProvider",path:"packages/react-spectrum-charts/src/context/RscChartContext.tsx#ChartProvider"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/hooks/useChartImperativeHandle.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useChartImperativeHandle});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useChartImperativeHandle(forwardedRef,props){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(forwardedRef,(()=>({copy:()=>copy(props),download:customFileName=>download(props,customFileName),getBase64Png:()=>getBase64Png(props),getSvg:()=>getSvg(props)})))}const copy=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toImageURL("png").then((async url=>{try{const response=await fetch(url),blob=await response.blob();navigator.clipboard.write([new ClipboardItem({"image/png":blob})]).then((()=>resolve("Chart copied to clipboard")),(()=>reject(new Error("Error occurred while writing to clipboard, copy to clipboard failed"))))}catch(error){reject(new Error("Error occurred while fetching image, copy to clipboard failed"))}}),(()=>reject(new Error("Error occurred while converting image to URL, copy to clipboard failed")))):reject(new Error("There isn't a chart to copy, copy to clipboard failed"))})),download=({chartView,title},customFileName)=>new Promise(((resolve,reject)=>{if(chartView.current){const filename=`${customFileName??title??"chart_export"}.png`;chartView.current.toImageURL("png").then((url=>{const link=document.createElement("a");link.setAttribute("href",url),link.setAttribute("target","_blank"),link.setAttribute("download",filename),link.dispatchEvent(new MouseEvent("click")),resolve(`Chart downloaded as ${filename}`)}),(()=>reject(new Error("Error occurred while converting image to URL, download failed"))))}else reject(new Error("There isn't a chart to download, download failed"))})),getBase64Png=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toImageURL("png").then((async url=>{try{const response=await fetch(url),blob=await response.blob(),base64Png=await blobToBase64(blob);"string"==typeof base64Png?resolve(base64Png):reject(new Error("Error occurred while converting image to base64, get base64 PNG failed"))}catch(error){reject(new Error("Error occurred while fetching image, get base64 PNG failed"))}}),(()=>reject(new Error("Error occurred while converting image to URL, get base64 PNG failed")))):reject(new Error("There isn't a chart to get the PNG from, get base64 PNG failed"))})),blobToBase64=blob=>new Promise((resolve=>{const reader=new FileReader;reader.onloadend=()=>resolve(reader.result),reader.readAsDataURL(blob)})),getSvg=({chartView})=>new Promise(((resolve,reject)=>{chartView.current?chartView.current.toSVG().then((value=>resolve(value)),(()=>reject(new Error("Error occurred while converting chart to SVG")))):reject(new Error("There isn't a chart to get the SVG from, get SVG failed"))}))},"./packages/react-spectrum-charts/src/hooks/useChartProps.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useChartProps});var storybook_dark_mode__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/storybook-dark-mode/dist/esm/index.js");function useChartProps(props){return{colorScheme:(0,storybook_dark_mode__WEBPACK_IMPORTED_MODULE_0__.D2)()?"dark":"light",...props}}try{useChartProps.displayName="useChartProps",useChartProps.__docgenInfo={description:"",displayName:"useChartProps",props:{dataTestId:{defaultValue:null,description:"Test id",name:"dataTestId",required:!1,type:{name:"string"}},emptyStateText:{defaultValue:null,description:"Optional text to display when the data set is empty and loading is complete.",name:"emptyStateText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"Loading state. If true, a spinner will render in place of the chart.",name:"loading",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:null,description:"Maximum chart width",name:"maxWidth",required:!1,type:{name:"number"}},minWidth:{defaultValue:null,description:"Minimum chart width.",name:"minWidth",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"Chart height",name:"height",required:!1,type:{name:"Height"}},maxHeight:{defaultValue:null,description:"Maximum height of the chart",name:"maxHeight",required:!1,type:{name:"number"}},minHeight:{defaultValue:null,description:"Minimum height of the chart",name:"minHeight",required:!1,type:{name:"number"}},theme:{defaultValue:null,description:"react-spectrum theme. This sets the react-spectrum theming on tooltips and popovers.",name:"theme",required:!1,type:{name:"Theme"}},width:{defaultValue:null,description:"Chart width",name:"width",required:!1,type:{name:"Width"}},config:{defaultValue:null,description:"Vega config that can be used to tweak the style of the chart.\n@see https://vega.github.io/vega/docs/config/",name:"config",required:!1,type:{name:"Config"}},data:{defaultValue:null,description:"Chart data array.",name:"data",required:!0,type:{name:"ChartData[]"}},debug:{defaultValue:null,description:"Enables debug mode which will console log things like the generated vega spec and the datums for tooltips.",name:"debug",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Number and time locales to use",name:"locale",required:!1,type:{name:'Locale | "ar-EG" | "ar-SY" | "ca-ES" | "cs-CZ" | "da-DK" | "de-CH" | "de-DE" | "en-CA" | "en-GB" | "en-US" | "es-ES" | "es-MX" | "fi-FI" | "fr-CA" | "fr-FR" | "he-IL" | "hu-HU" | ... 12 more ...'}},padding:{defaultValue:null,description:"Chart padding",name:"padding",required:!1,type:{name:"Padding"}},renderer:{defaultValue:null,description:"Method to use for rendering the chart. 'canvas' is ideal for large data sets.",name:"renderer",required:!1,type:{name:"enum",value:[{value:'"svg"'},{value:'"canvas"'}]}},tooltipAnchor:{defaultValue:null,description:"Sets what the tooltip should be anchored to. Defaults to `cursor`.",name:"tooltipAnchor",required:!1,type:{name:"enum",value:[{value:'"cursor"'},{value:'"mark"'}]}},tooltipPlacement:{defaultValue:null,description:"The placement of the tooltip with respect to the mark. Only applicable if `tooltipAnchor = 'mark'`.",name:"tooltipPlacement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"left"'},{value:'"right"'}]}},backgroundColor:{defaultValue:null,description:"Background color of the chart.",name:"backgroundColor",required:!1,type:{name:"string"}},colors:{defaultValue:null,description:"Color scale. Defaults to the `categorical16' color scale.",name:"colors",required:!1,type:{name:"ChartColors"}},colorScheme:{defaultValue:null,description:"react-spectrum color scheme.\n@see https://react-spectrum.adobe.com/react-spectrum/Provider.html#props",name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},description:{defaultValue:null,description:"Chart description. Sets the aria-label attribute for the chart container.\n@see https://vega.github.io/vega/docs/specification/",name:"description",required:!1,type:{name:"string"}},symbolShapes:{defaultValue:null,description:"Symbol shape scale.",name:"symbolShapes",required:!1,type:{name:"SymbolShapes"}},symbolSizes:{defaultValue:null,description:"Symbol size scale. Values define the min and max size in that order.",name:"symbolSizes",required:!1,type:{name:"[SymbolSize, SymbolSize]"}},lineTypes:{defaultValue:null,description:"Line type scale.",name:"lineTypes",required:!1,type:{name:"LineTypes"}},lineWidths:{defaultValue:null,description:"Line width scale.",name:"lineWidths",required:!1,type:{name:"LineWidth[]"}},opacities:{defaultValue:null,description:"Opacity scale",name:"opacities",required:!1,type:{name:"Opacities"}},title:{defaultValue:null,description:"Chart title. If the `Title` component is provided as a child, the component will override this prop.",name:"title",required:!1,type:{name:"string"}},UNSAFE_vegaSpec:{defaultValue:null,description:"Vega spec to be used instead of generating one using the component API.",name:"UNSAFE_vegaSpec",required:!1,type:{name:"Spec"}},hiddenSeries:{defaultValue:null,description:"Series names to hide from the chart (controlled).",name:"hiddenSeries",required:!1,type:{name:"string[]"}},highlightedItem:{defaultValue:null,description:"Data item id or ids that should be highlighted on the chart (controlled). Be sure to supply an `idKey` where each data point has a unique ID if you are using controlled highlighting of items.",name:"highlightedItem",required:!1,type:{name:"HighlightedItem"}},highlightedSeries:{defaultValue:null,description:"Series name to highlight on the chart (controlled).",name:"highlightedSeries",required:!1,type:{name:"string | number"}},idKey:{defaultValue:null,description:"Data key that contains a unique ID for each data point in the array.",name:"idKey",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/hooks/useChartProps.tsx#useChartProps"]={docgenInfo:useChartProps.__docgenInfo,name:"useChartProps",path:"packages/react-spectrum-charts/src/hooks/useChartProps.tsx#useChartProps"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gk:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Gk,II:()=>_components__WEBPACK_IMPORTED_MODULE_0__.II,N1:()=>_components__WEBPACK_IMPORTED_MODULE_0__.N1,_0:()=>_components__WEBPACK_IMPORTED_MODULE_0__._0,cY:()=>_components__WEBPACK_IMPORTED_MODULE_0__.cY,hE:()=>_components__WEBPACK_IMPORTED_MODULE_0__.hE,kZ:()=>_components__WEBPACK_IMPORTED_MODULE_0__.kZ,s$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.s$,t1:()=>_Chart__WEBPACK_IMPORTED_MODULE_1__.t,uU:()=>_spectrum_charts_themes__WEBPACK_IMPORTED_MODULE_3__.uU,yP:()=>_components__WEBPACK_IMPORTED_MODULE_0__.yP});var _components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/react-spectrum-charts/src/components/index.ts"),_Chart__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react-spectrum-charts/src/Chart.tsx"),_spectrum_charts_themes__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./packages/locales/index.ts"),__webpack_require__("./packages/themes/index.ts"));__webpack_require__("./packages/vega-spec-builder/index.ts")},"./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gH:()=>BigNumber_BigNumber_BigNumber,Ve:()=>BigNumberInternal});var react=__webpack_require__("./node_modules/react/index.js"),dist_import=__webpack_require__("./node_modules/@react-spectrum/layout/dist/import.mjs"),locales=__webpack_require__("./packages/locales/index.ts"),RscChart=__webpack_require__("./packages/react-spectrum-charts/src/RscChart.tsx"),components=__webpack_require__("./packages/react-spectrum-charts/src/components/index.ts"),utils=__webpack_require__("./packages/react-spectrum-charts/src/utils/index.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),BigNumber=__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(BigNumber.A,options);BigNumber.A&&BigNumber.A.locals&&BigNumber.A.locals;var vega_format_module=__webpack_require__("./node_modules/vega-format/build/vega-format.module.js"),constants=__webpack_require__("./packages/constants/index.ts");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BigNumber_BigNumber_BigNumber=()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{}),BigNumberInternal=({dataKey,label,numberFormat,children,icon,orientation,rscChartProps,numberType="linear",method="last"})=>{const{chartWidth,chartHeight,locale,data}=rscChartProps,bigNumberValue=function getBigNumberValue(data,dataKey,method="last"){if("last"===method){const value=data[data.length-1][dataKey];return"number"==typeof value?value:0}{const value=data.reduce(((sum,cur)=>{const curValue=cur[dataKey];return"number"==typeof curValue?sum+curValue:sum}),0);return"avg"===method?value/data.length:value}}(data,dataKey,method),formattedValue=((value,numberType,numberFormat,numberLocale)=>{const formatter=numberLocale?(0,vega_format_module.NK)(numberLocale):(0,vega_format_module.NK)((0,locales.JK)(constants.Xn).number);return"percentage"===numberType?formatter.format("~%")(value):numberFormat?formatter.format(numberFormat)(value):formatter.format("")(value)})(bigNumberValue,numberType,numberFormat,(0,locales.JK)(locale).number),lineElements=(0,utils.iT)(children);let lineProps;lineElements.length>0&&(lineProps=lineElements[0].props);const bigNumberSize=getBigNumberSize(chartWidth,chartHeight),{iconSize,labelSize,valueSize}=function getIconAndFontSizes(bigNumberSize,lineProps,orientation){const fontSizes=function getFontSize(bigNumberSize){if("small"===bigNumberSize)return{labelSize:"medium",valueSize:"large"};if("medium"===bigNumberSize)return{labelSize:"large",valueSize:"x-large"};if("large"===bigNumberSize)return{labelSize:"x-large",valueSize:"xx-large"};return{labelSize:"xx-large",valueSize:"xxx-large"}}(bigNumberSize),labelSize=fontSizes.labelSize,valueSize=fontSizes.valueSize,fontSize="vertical"===orientation?labelSize:valueSize,iconSize=void 0!==lineProps?function getIconSizeWithChart(textSize){if("medium"===textSize)return"XXS";if("large"===textSize)return"XS";if("x-large"===textSize)return"S";return"M"}(fontSize):function getIconSize(textSize){if("medium"===textSize)return"M";if("large"===textSize)return"L";if("x-large"===textSize)return"XL";return"XXL"}(fontSize);return{iconSize,labelSize,valueSize}}(bigNumberSize,lineProps,orientation),{textAlign,direction,iconDirection}=function getLayoutSettings(orientation){return"vertical"===orientation?{textAlign:"center",direction:"column",iconDirection:"row"}:{textAlign:"start",direction:"row",iconDirection:"column"}}(orientation),labelStyle={fontSize:labelSize,textAlign},valueStyle={fontSize:valueSize,textAlign};return(0,jsx_runtime.jsx)(dist_import.so,{alignItems:"center",justifyContent:"center",direction,children:(0,jsx_runtime.jsxs)(dist_import.so,{columnGap:"size-100",justifyContent:"center",direction,width:chartWidth,height:chartHeight,children:[lineProps&&(0,jsx_runtime.jsx)(BigNumberChart,{rscChartProps,lineProps,method,orientation}),icon&&!lineProps&&(0,jsx_runtime.jsx)(dist_import.so,{direction:iconDirection,justifyContent:"center",children:(0,react.cloneElement)(icon,{size:iconSize,marginTop:"1px"})}),(0,jsx_runtime.jsx)(dist_import.so,{direction:"column",justifyContent:"center",children:icon&&lineProps?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("p",{style:valueStyle,className:"big-number-data",children:formattedValue}),(0,jsx_runtime.jsxs)(dist_import.so,{gap:"size-50",justifyContent:"center",children:[(0,jsx_runtime.jsx)(dist_import.so,{direction:"column",justifyContent:"center",children:(0,react.cloneElement)(icon,{size:iconSize,marginTop:"1px"})}),(0,jsx_runtime.jsx)("p",{style:labelStyle,className:"big-number-label",children:label})]})]}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("p",{style:valueStyle,className:"big-number-data",children:formattedValue}),(0,jsx_runtime.jsx)("p",{style:labelStyle,className:"big-number-label",children:label})]})})]})})},BigNumberChart=({rscChartProps,lineProps,method,orientation})=>{const isVertical="vertical"===orientation,{chartWidth,chartHeight}=rscChartProps,bigNumberSize=getBigNumberSize(chartWidth,chartHeight),{cWidth,cHeight}=getBigNumberChartDimensions(bigNumberSize);return(0,jsx_runtime.jsx)(dist_import.so,{justifySelf:"center",alignSelf:"center",marginTop:"5px",children:(0,jsx_runtime.jsx)(RscChart.P,{...rscChartProps,chartWidth:cWidth,chartHeight:cHeight,children:(0,jsx_runtime.jsx)(components.N1,{...lineProps,isSparkline:!0,isMethodLast:"last"===method,padding:isVertical?0:10,pointSize:getPointSize(cWidth)})})})};function getBigNumberSize(chartWidth,chartHeight){return chartWidth<=100||chartHeight<=100?"small":chartWidth<=266||chartHeight<=200?"medium":chartWidth<=466||chartHeight<=300?"large":"x-large"}function getBigNumberChartDimensions(bigNumberSize){let cWidth=200,cHeight=100;return"small"===bigNumberSize?(cWidth=75,cHeight=35):"medium"===bigNumberSize?(cWidth=100,cHeight=50):"large"===bigNumberSize&&(cWidth=150,cHeight=75),{cWidth,cHeight}}function getPointSize(availableSpace){return availableSpace<=150?50:100}BigNumber_BigNumber_BigNumber.displayName="BigNumber",BigNumberInternal.displayName="BigNumberInternal";try{getBigNumberChartDimensions.displayName="BigNumber",getBigNumberChartDimensions.__docgenInfo={description:"",displayName:"BigNumber",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.tsx#BigNumber"]={docgenInfo:BigNumber_BigNumber_BigNumber.__docgenInfo,name:"BigNumber",path:"packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.tsx#BigNumber"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react-spectrum-charts/src/rc/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gH:()=>BigNumber.gH,RJ:()=>Donut,Ri:()=>DonutSummary,o5:()=>SegmentLabel});var constants=__webpack_require__("./packages/constants/index.ts");const Donut=({children,color=constants.OT,holeRatio=.85,isBoolean=!1,metric=constants.bA,name,startAngle=0})=>null;Donut.displayName="Donut";try{Donut.displayName="Donut",Donut.__docgenInfo={description:"",displayName:"Donut",props:{name:{defaultValue:null,description:"Sets the name of the component.",name:"name",required:!1,type:{name:"string"}},color:{defaultValue:{value:"series"},description:"Key in the data that is used as the color facet",name:"color",required:!1,type:{name:"string"}},metric:{defaultValue:{value:"value"},description:"Key in the data that is used as the metric",name:"metric",required:!1,type:{name:"string"}},holeRatio:{defaultValue:{value:"0.85"},description:"Ratio of the donut inner radius / donut outer radius. 0 is a pie chart. 0.85 is the default.",name:"holeRatio",required:!1,type:{name:"number"}},isBoolean:{defaultValue:{value:"false"},description:"Determines if the center metric should be displayed as a percent. if true, data should only be two data points, which sum to 1\nAlso, if true, will display the first datapoint as a percent",name:"isBoolean",required:!1,type:{name:"boolean"}},startAngle:{defaultValue:{value:"0"},description:"Start angle of the donut in radians (0 is top dead center, and default)",name:"startAngle",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/rc/components/Donut/Donut.tsx#Donut"]={docgenInfo:Donut.__docgenInfo,name:"Donut",path:"packages/react-spectrum-charts/src/rc/components/Donut/Donut.tsx#Donut"})}catch(__react_docgen_typescript_loader_error){}const DonutSummary=({numberFormat="shortNumber",label})=>null;DonutSummary.displayName="DonutSummary";try{DonutSummary.displayName="DonutSummary",DonutSummary.__docgenInfo={description:"",displayName:"DonutSummary",props:{numberFormat:{defaultValue:{value:"shortNumber"},description:"d3 number format specifier.\nSets the number format for the summary value.\n\nsee {@link https://d3js.org/d3-format#locale_format}",name:"numberFormat",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Label for the metric summary",name:"label",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/rc/components/DonutSummary/DonutSummary.tsx#DonutSummary"]={docgenInfo:DonutSummary.__docgenInfo,name:"DonutSummary",path:"packages/react-spectrum-charts/src/rc/components/DonutSummary/DonutSummary.tsx#DonutSummary"})}catch(__react_docgen_typescript_loader_error){}const SegmentLabel=({labelKey,percent=!1,value=!1,valueFormat="standardNumber"})=>null;SegmentLabel.displayName="SegmentLabel";try{SegmentLabel.displayName="SegmentLabel",SegmentLabel.__docgenInfo={description:"",displayName:"SegmentLabel",props:{labelKey:{defaultValue:null,description:"Sets the key in the data that has the segment label. Defaults to the `color` key set on the `Donut` is undefined.",name:"labelKey",required:!1,type:{name:"string"}},percent:{defaultValue:{value:"false"},description:"Shows the donut segment percentage",name:"percent",required:!1,type:{name:"boolean"}},value:{defaultValue:{value:"false"},description:"Shows the donut segment metric value",name:"value",required:!1,type:{name:"boolean"}},valueFormat:{defaultValue:{value:"standardNumber"},description:"d3 number format specifier.\nSets the number format for the segment metric value.",name:"valueFormat",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react-spectrum-charts/src/rc/components/SegmentLabel/SegmentLabel.tsx#SegmentLabel"]={docgenInfo:SegmentLabel.__docgenInfo,name:"SegmentLabel",path:"packages/react-spectrum-charts/src/rc/components/SegmentLabel/SegmentLabel.tsx#SegmentLabel"})}catch(__react_docgen_typescript_loader_error){}var BigNumber=__webpack_require__("./packages/react-spectrum-charts/src/rc/components/BigNumber/BigNumber.tsx")},"./packages/react-spectrum-charts/src/utils/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cY:()=>debugLog,fI:()=>getAllElements,yH:()=>getAllMarkElements,Wg:()=>getBigNumberElementsFromChildren,V6:()=>getElement,wm:()=>getOnChartMarkClickCallback,eH:()=>getOnMarkClickCallback,uk:()=>getOnMouseInputCallback,iT:()=>sanitizeBigNumberChildren,j1:()=>sanitizeChildren,F0:()=>sanitizeRscChartChildren,zO:()=>setSelectedSignals,$r:()=>toArray,eh:()=>toggleStringArrayValue});var react=__webpack_require__("./node_modules/react/index.js"),constants=__webpack_require__("./packages/constants/index.ts"),utils=__webpack_require__("./packages/utils/src/utils.ts"),alpha=__webpack_require__("./packages/react-spectrum-charts/src/alpha/index.ts"),components=__webpack_require__("./packages/react-spectrum-charts/src/components/index.ts"),rc=__webpack_require__("./packages/react-spectrum-charts/src/rc/index.ts");function toArray(children){return void 0===children?[]:Array.isArray(children)?children:[children]}const getElementDisplayName=element=>element&&"object"==typeof element&&"type"in element&&element.type&&("object"==typeof element.type||"function"==typeof element.type)&&"displayName"in element.type&&"string"==typeof element.type.displayName?element.type.displayName:"no-display-name",sanitizeChildren=children=>{const validDisplayNames=[components.YH.displayName,components.Gk.displayName,components._0.displayName,components.bl.displayName,components.yP.displayName,alpha.D.displayName,components.kZ.displayName,components.II.displayName,alpha.x.displayName,rc.RJ.displayName,rc.Ri.displayName,components.s$.displayName,components.N1.displayName,components.uz.displayName,components.e_.displayName,components.Xl.displayName,components.Yc.displayName,rc.o5.displayName,components.hE.displayName,components.cY.displayName,components.$M.displayName];return toArray(children).flat().filter((child=>validDisplayNames.includes(getElementDisplayName(child))))},sanitizeRscChartChildren=children=>{const chartChildDisplyNames=[components.Gk.displayName,components._0.displayName,components.yP.displayName,rc.RJ.displayName,components.s$.displayName,components.N1.displayName,components.Xl.displayName,components.hE.displayName,alpha.x.displayName,alpha.D.displayName];return toArray(children).flat().filter((child=>chartChildDisplyNames.includes(getElementDisplayName(child))))},sanitizeBigNumberChildren=children=>toArray(children).flat().filter((child=>getElementDisplayName(child)===components.N1.displayName)),getBigNumberElementsFromChildren=children=>toArray(children).flat().filter((child=>getElementDisplayName(child)===rc.gH.displayName)),toggleStringArrayValue=(target,value)=>target.includes(value)?target.filter((item=>item!==value)):[...target,value];function getElement(element,type){if(element&&"object"==typeof element&&"type"in element&&element.type!==react.Fragment){if(element.type===type)return element;if("children"in element.props)for(const child of toArray(element.props.children)){const desiredElement=getElement(child,type);if(desiredElement)return desiredElement}}}const getAllMarkElements=(target,source,elements=[],name="",parent)=>{if(!target||"object"!=typeof target||!("type"in target)||!target.type||"object"!=typeof target.type&&"function"!=typeof target.type||!("displayName"in target.type)||"string"!=typeof target.type.displayName)return elements;if(target.type===source)return[...elements,{name,element:target,parent}];if(!("props"in target)||"object"!=typeof target.props||!target.props||!("children"in target.props))return elements;const elementCounts=initElementCounts(),desiredElements=[];for(const child of toArray(target.props.children)){const childName=getElementName(child,elementCounts);desiredElements.push(...getAllMarkElements(child,source,elements,(0,utils.q)(name,childName),target.type.displayName))}return[...elements,...desiredElements]},getAllElements=(target,source,elements=[],name="",parent)=>{if(!target||"object"!=typeof target||!("type"in target)||!target.type||"object"!=typeof target.type&&"function"!=typeof target.type||!("displayName"in target.type)||"string"!=typeof target.type.displayName)return elements;if(target.type===source)return[...elements,{name,element:target,parent}];if(!("props"in target)||"object"!=typeof target.props||!target.props||!("children"in target.props))return elements;const elementCounts=initElementCounts(),desiredElements=[];for(const child of toArray(target.props.children)){const childName=getElementName(child,elementCounts);desiredElements.push(...getAllElements(child,source,elements,(0,utils.q)(name,childName),target.type.displayName))}return[...elements,...desiredElements]},getElementName=(element,elementCounts)=>{if(!element||"object"!=typeof element||!("type"in element)||!element.type||"object"!=typeof element.type&&"function"!=typeof element.type||!("displayName"in element.type)||"string"!=typeof element.type.displayName)return"";switch(element.type.displayName){case components.Gk.displayName:return elementCounts.area++,getComponentName(element,`area${elementCounts.area}`);case components._0.displayName:return elementCounts.axis++,getComponentName(element,`axis${elementCounts.axis}`);case components.bl.displayName:return elementCounts.axisAnnotation++,getComponentName(element,`Annotation${elementCounts.axisAnnotation}`);case components.yP.displayName:return elementCounts.bar++,getComponentName(element,`bar${elementCounts.bar}`);case rc.RJ.displayName:return elementCounts.donut++,getComponentName(element,`donut${elementCounts.donut}`);case alpha.D.displayName:return elementCounts.bullet++,getComponentName(element,`bullet${elementCounts.bullet}`);case components.s$.displayName:return elementCounts.legend++,getComponentName(element,`legend${elementCounts.legend}`);case components.N1.displayName:return elementCounts.line++,getComponentName(element,`line${elementCounts.line}`);case components.Xl.displayName:return elementCounts.scatter++,getComponentName(element,`scatter${elementCounts.scatter}`);case components.cY.displayName:return getComponentName(element,"Trendline");case alpha.x.displayName:return elementCounts.combo++,getComponentName(element,`combo${elementCounts.combo}`);default:return""}},getComponentName=(element,defaultName)=>"object"==typeof element&&"props"in element&&"name"in element.props&&element.props.name?(0,utils.C)(element.props.name):defaultName,initElementCounts=()=>({area:-1,axis:-1,axisAnnotation:-1,bar:-1,donut:-1,bullet:-1,legend:-1,line:-1,scatter:-1,combo:-1});function debugLog(debug,{title="",contents}){if(debug){const rainbow=String.fromCodePoint(127752);console.log(`%c${rainbow} ${title}`,"color: #2780eb",contents)}}const setSelectedSignals=({idKey,selectedData,view})=>{view.signal(constants.sk,selectedData?.[idKey]??null),view.signal(constants.uW,selectedData?.[constants.y4]??null);const selectedGroupKey=Object.keys(selectedData??{}).find((k=>k.endsWith("_selectedGroupId")));selectedGroupKey&&view.signal(constants.U3,selectedData?.[selectedGroupKey]??null)},getOnMarkClickCallback=args=>(_event,item)=>{item&&("contextmenu"===args.trigger&&"contextmenu"!==_event.type||(isLegendItem(item)?handleLegendItemClick(item,args):handleMarkClick(item,args)))},handleMarkClick=(item,{chartView,selectedData,selectedDataBounds,selectedDataName,chartId,trigger})=>{if(!chartView.current)return;item=getGroupOrAreaMarkItemFromItem(item);const itemName=getItemName(item);selectedData.current={[constants.EA]:itemName,...item.datum},selectedDataBounds.current=getItemBounds(item),selectedDataName.current=itemName,triggerPopover(chartId,itemName,trigger)},triggerPopover=(chartId,itemName,trigger)=>{itemName&&document.querySelector(`#${chartId} > div > #${itemName}-${"contextmenu"===trigger?"contextmenu":"popover"}-button`)?.click()},getOnChartMarkClickCallback=(chartView,onClickMarkDetails)=>(_event,item)=>{if(item&&onClickMarkDetails?.length&&!isLegendItem(item)&&chartView.current&&(item=getGroupOrAreaMarkItemFromItem(item),userDidNotClickOnLegend(item)&&chartView.current)){const itemName=getItemName(item);onClickMarkDetails.find((details=>details.markName===itemName))?.onClick?.(item.datum)}},getGroupOrAreaMarkItemFromItem=item=>(isGroupMarkItem(item)&&(item=item.datum),isAreaMarkItem(item)&&(item=getItemForAreaMark(item)),item),userDidNotClickOnLegend=item=>isItemSceneItem(item)&&"group"!==item.mark.marktype,getOnMouseInputCallback=(onLegendMouseInput,markMouseInputDetails)=>(event,item)=>{item&&(isLegendItem(item)?((item,onLegendMouseInput)=>{const legendItemValue=getLegendItemValue(item);legendItemValue&&onLegendMouseInput?.(legendItemValue)})(item,onLegendMouseInput):markMouseInputDetails?.length&&((event,item,markMouseInputDetails)=>{if(!item)return;item=getGroupOrAreaMarkItemFromItem(item);const itemName=getItemName(item),markDetail=markMouseInputDetails.find((details=>details.markName===itemName));"mouseover"===event.type&&markDetail?.onMouseOver?markDetail.onMouseOver(item.datum):"mouseout"===event.type&&markDetail?.onMouseOut&&markDetail.onMouseOut(item.datum)})(event,item,markMouseInputDetails))},isLegendItem=item=>!!isSceneGroup(item)||isItemSceneItem(item)&&"legend-symbol"===item.mark.role,handleLegendItemClick=(item,{chartView,hiddenSeries,chartId,selectedData,selectedDataBounds,selectedDataName,setHiddenSeries,legendHasPopover,legendIsToggleable,onLegendClick,trigger})=>{const legendItemValue=getLegendItemValue(item);if(void 0!==legendItemValue){if(chartView.current&&legendHasPopover){const itemName=getItemName(item);selectedData.current={[constants.EA]:itemName,value:legendItemValue,[constants.y4]:legendItemValue},selectedDataBounds.current=getItemBounds(item),selectedDataName.current=itemName,triggerPopover(chartId,itemName,trigger)}"click"===trigger&&(onLegendClick?.(legendItemValue),legendIsToggleable&&!legendHasPopover&&setHiddenSeries(toggleStringArrayValue(hiddenSeries,legendItemValue)))}},getLegendItemValue=item=>{if(isSceneGroup(item)){const labelItem=item.items.find((mark=>"role"in mark&&"legend-label"===mark.role));if(!isScene(labelItem))return;if(!labelItem.items[0])return;if(!("datum"in labelItem.items[0]))return;return labelItem.items[0].datum.value}if(isItemSceneItem(item))return item.datum.value},isGroupMarkItem=item=>isItemSceneItem(item.datum),isAreaMarkItem=item=>"area"===item?.mark.marktype,getItemForAreaMark=item=>{const pointMark=item?.mark.group.items.find((mark=>mark.name.includes("_anchorPoint")));if(pointMark&&1===pointMark.items.length){const point=pointMark.items[0];if(isItemSceneItem(point))return point}return item},getItemBounds=item=>{if(isItemSceneItem(item)){const groupOffset=getGroupOffset(item);return{x1:item.bounds.x1+groupOffset.x,x2:item.bounds.x2+groupOffset.x,y1:item.bounds.y1+groupOffset.y,y2:item.bounds.y2+groupOffset.y}}return{x1:0,x2:0,y1:0,y2:0}},getItemName=item=>{if(isItemSceneItem(item)){const itemName=item.mark.name;if(!itemName)return;return itemName.split("_")[0]}},getGroupOffset=item=>{if(isItemSceneItem(item)){const{x,y}=getGroupOffset(item.mark.group);return{x:(item.mark.group.x||0)+x,y:(item.mark.group.y||0)+y}}return{x:0,y:0}};function isItemSceneItem(item){return"object"==typeof item&&null!==item&&("bounds"in item&&"datum"in item)}const isSceneGroup=item=>"object"==typeof item&&null!==item&&("context"in item&&"items"in item&&"height"in item&&"width"in item),isScene=item=>"object"==typeof item&&null!==item&&("bounds"in item&&"clip"in item)},"./packages/themes/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Yw:()=>ADOBE_CLEAN_FONT,u0:()=>categorical12,uU:()=>categorical16,JB:()=>categorical6,yM:()=>colorSchemes,FH:()=>getColorValue,Xw:()=>getSpectrumVegaConfig,YA:()=>spectrumColors});const spectrumColors={light:{"gray-50":"rgb(255, 255, 255)","gray-75":"rgb(253, 253, 253)","gray-100":"rgb(248, 248, 248)","gray-200":"rgb(230, 230, 230)","gray-300":"rgb(213, 213, 213)","gray-400":"rgb(177, 177, 177)","gray-500":"rgb(144, 144, 144)","gray-600":"rgb(109, 109, 109)","gray-700":"rgb(70, 70, 70)","gray-800":"rgb(34, 34, 34)","gray-900":"rgb(0, 0, 0)","blue-100":"rgb(224, 242, 255)","blue-200":"rgb(202, 232, 255)","blue-300":"rgb(181, 222, 255)","blue-400":"rgb(150, 206, 253)","blue-500":"rgb(120, 187, 250)","blue-600":"rgb(89, 167, 246)","blue-700":"rgb(56, 146, 243)","blue-800":"rgb(20, 122, 243)","blue-900":"rgb(2, 101, 220)","blue-1000":"rgb(0, 84, 182)","blue-1100":"rgb(0, 68, 145)","blue-1200":"rgb(0, 53, 113)","blue-1300":"rgb(0, 39, 84)","green-100":"rgb(206, 248, 224)","green-200":"rgb(173, 244, 206)","green-300":"rgb(137, 236, 188)","green-400":"rgb(103, 222, 168)","green-500":"rgb(73, 204, 147)","green-600":"rgb(47, 184, 128)","green-700":"rgb(21, 164, 110)","green-800":"rgb(0, 143, 93)","green-900":"rgb(0, 122, 77)","green-1000":"rgb(0, 101, 62)","green-1100":"rgb(0, 81, 50)","green-1200":"rgb(5, 63, 39)","green-1300":"rgb(10, 46, 29)","orange-100":"rgb(255, 236, 204)","orange-200":"rgb(255, 223, 173)","orange-300":"rgb(253, 210, 145)","orange-400":"rgb(255, 187, 99)","orange-500":"rgb(255, 160, 55)","orange-600":"rgb(246, 133, 17)","orange-700":"rgb(228, 111, 0)","orange-800":"rgb(203, 93, 0)","orange-900":"rgb(177, 76, 0)","orange-1000":"rgb(149, 61, 0)","orange-1100":"rgb(122, 47, 0)","orange-1200":"rgb(97, 35, 0)","orange-1300":"rgb(73, 25, 1)","red-100":"rgb(255, 235, 231)","red-200":"rgb(255, 221, 214)","red-300":"rgb(255, 205, 195)","red-400":"rgb(255, 183, 169)","red-500":"rgb(255, 155, 136)","red-600":"rgb(255, 124, 101)","red-700":"rgb(247, 92, 70)","red-800":"rgb(234, 56, 41)","red-900":"rgb(211, 21, 16)","red-1000":"rgb(180, 0, 0)","red-1100":"rgb(147, 0, 0)","red-1200":"rgb(116, 0, 0)","red-1300":"rgb(89, 0, 0)","celery-100":"rgb(205, 252, 191)","celery-200":"rgb(174, 246, 157)","celery-300":"rgb(150, 238, 133)","celery-400":"rgb(114, 224, 106)","celery-500":"rgb(78, 207, 80)","celery-600":"rgb(39, 187, 54)","celery-700":"rgb(7, 167, 33)","celery-800":"rgb(0, 145, 18)","celery-900":"rgb(0, 124, 15)","celery-1000":"rgb(0, 103, 15)","celery-1100":"rgb(0, 83, 13)","celery-1200":"rgb(0, 64, 10)","celery-1300":"rgb(0, 48, 7)","chartreuse-100":"rgb(219, 252, 110)","chartreuse-200":"rgb(203, 244, 67)","chartreuse-300":"rgb(188, 233, 42)","chartreuse-400":"rgb(170, 216, 22)","chartreuse-500":"rgb(152, 197, 10)","chartreuse-600":"rgb(135, 177, 3)","chartreuse-700":"rgb(118, 156, 0)","chartreuse-800":"rgb(103, 136, 0)","chartreuse-900":"rgb(87, 116, 0)","chartreuse-1000":"rgb(72, 96, 0)","chartreuse-1100":"rgb(58, 77, 0)","chartreuse-1200":"rgb(44, 59, 0)","chartreuse-1300":"rgb(33, 44, 0)","cyan-100":"rgb(197, 248, 255)","cyan-200":"rgb(164, 240, 255)","cyan-300":"rgb(136, 231, 250)","cyan-400":"rgb(96, 216, 243)","cyan-500":"rgb(51, 197, 232)","cyan-600":"rgb(18, 176, 218)","cyan-700":"rgb(1, 156, 200)","cyan-800":"rgb(0, 134, 180)","cyan-900":"rgb(0, 113, 159)","cyan-1000":"rgb(0, 93, 137)","cyan-1100":"rgb(0, 74, 115)","cyan-1200":"rgb(0, 57, 93)","cyan-1300":"rgb(0, 42, 70)","fuchsia-100":"rgb(255, 233, 252)","fuchsia-200":"rgb(255, 218, 250)","fuchsia-300":"rgb(254, 199, 248)","fuchsia-400":"rgb(251, 174, 246)","fuchsia-500":"rgb(245, 146, 243)","fuchsia-600":"rgb(237, 116, 237)","fuchsia-700":"rgb(224, 85, 226)","fuchsia-800":"rgb(205, 58, 206)","fuchsia-900":"rgb(182, 34, 183)","fuchsia-1000":"rgb(157, 3, 158)","fuchsia-1100":"rgb(128, 0, 129)","fuchsia-1200":"rgb(100, 6, 100)","fuchsia-1300":"rgb(71, 14, 70)","indigo-100":"rgb(237, 238, 255)","indigo-200":"rgb(224, 226, 255)","indigo-300":"rgb(211, 213, 255)","indigo-400":"rgb(193, 196, 255)","indigo-500":"rgb(172, 175, 255)","indigo-600":"rgb(149, 153, 255)","indigo-700":"rgb(126, 132, 252)","indigo-800":"rgb(104, 109, 244)","indigo-900":"rgb(82, 88, 228)","indigo-1000":"rgb(64, 70, 202)","indigo-1100":"rgb(50, 54, 168)","indigo-1200":"rgb(38, 41, 134)","indigo-1300":"rgb(27, 30, 100)","magenta-100":"rgb(255, 234, 241)","magenta-200":"rgb(255, 220, 232)","magenta-300":"rgb(255, 202, 221)","magenta-400":"rgb(255, 178, 206)","magenta-500":"rgb(255, 149, 189)","magenta-600":"rgb(250, 119, 170)","magenta-700":"rgb(239, 90, 152)","magenta-800":"rgb(222, 61, 130)","magenta-900":"rgb(200, 34, 105)","magenta-1000":"rgb(173, 9, 85)","magenta-1100":"rgb(142, 0, 69)","magenta-1200":"rgb(112, 0, 55)","magenta-1300":"rgb(84, 3, 42)","purple-100":"rgb(246, 235, 255)","purple-200":"rgb(238, 221, 255)","purple-300":"rgb(230, 208, 255)","purple-400":"rgb(219, 187, 254)","purple-500":"rgb(204, 164, 253)","purple-600":"rgb(189, 139, 252)","purple-700":"rgb(174, 114, 249)","purple-800":"rgb(157, 87, 244)","purple-900":"rgb(137, 61, 231)","purple-1000":"rgb(115, 38, 211)","purple-1100":"rgb(93, 19, 183)","purple-1200":"rgb(71, 12, 148)","purple-1300":"rgb(51, 16, 106)","seafoam-100":"rgb(206, 247, 243)","seafoam-200":"rgb(170, 241, 234)","seafoam-300":"rgb(140, 233, 226)","seafoam-400":"rgb(101, 218, 210)","seafoam-500":"rgb(63, 201, 193)","seafoam-600":"rgb(15, 181, 174)","seafoam-700":"rgb(0, 161, 154)","seafoam-800":"rgb(0, 140, 135)","seafoam-900":"rgb(0, 119, 114)","seafoam-1000":"rgb(0, 99, 95)","seafoam-1100":"rgb(12, 79, 76)","seafoam-1200":"rgb(18, 60, 58)","seafoam-1300":"rgb(18, 44, 43)","yellow-100":"rgb(251, 241, 152)","yellow-200":"rgb(248, 231, 80)","yellow-300":"rgb(248, 217, 4)","yellow-400":"rgb(232, 198, 0)","yellow-500":"rgb(215, 179, 0)","yellow-600":"rgb(196, 159, 0)","yellow-700":"rgb(176, 140, 0)","yellow-800":"rgb(155, 120, 0)","yellow-900":"rgb(133, 102, 0)","yellow-1000":"rgb(112, 83, 0)","yellow-1100":"rgb(91, 67, 0)","yellow-1200":"rgb(72, 51, 0)","yellow-1300":"rgb(54, 37, 0)","static-white":"rgba(255, 255, 255)","static-black":"rgba(0, 0, 0)","static-blue":"rgb(20, 115, 230)","static-gray-50":"rgba(254, 254, 254)","static-gray-75":"rgba(254, 254, 254)","static-gray-100":"rgba(254, 254, 254)","static-gray-200":"rgba(235, 235, 235)","static-gray-300":"rgba(217, 217, 217)","static-gray-400":"rgba(179, 179, 179)","static-gray-500":"rgba(146, 146, 146)","static-gray-600":"rgba(110, 110, 110)","static-gray-700":"rgba(71, 71, 71)","static-gray-800":"rgba(34, 34, 34)","static-gray-900":"rgba(0, 0, 0)","static-red-100":"rgba(255, 242, 240)","static-red-200":"rgba(255, 230, 225)","static-red-300":"rgba(255, 214, 206)","static-red-400":"rgba(255, 191, 178)","static-red-500":"rgba(255, 164, 147)","static-red-600":"rgba(255, 133, 111)","static-red-700":"rgba(250, 100, 78)","static-red-800":"rgba(237, 64, 48)","static-red-900":"rgba(217, 28, 21)","static-red-1000":"rgba(187, 2, 2)","static-red-1100":"rgba(154, 0, 0)","static-red-1200":"rgba(124, 0, 0)","static-red-1300":"rgba(97, 0, 0)","static-red-1400":"rgba(77, 0, 0)","static-orange-100":"rgba(255, 245, 227)","static-orange-200":"rgba(255, 233, 197)","static-orange-300":"rgba(254, 218, 162)","static-orange-400":"rgba(255, 195, 114)","static-orange-500":"rgba(255, 168, 68)","static-orange-600":"rgba(250, 139, 26)","static-orange-700":"rgba(233, 117, 0)","static-orange-800":"rgba(209, 97, 0)","static-orange-900":"rgba(182, 80, 0)","static-orange-1000":"rgba(155, 64, 0)","static-orange-1100":"rgba(128, 50, 0)","static-orange-1200":"rgba(103, 38, 0)","static-orange-1300":"rgba(80, 28, 0)","static-orange-1400":"rgba(62, 21, 1)","static-yellow-100":"rgba(253, 247, 196)","static-yellow-200":"rgba(250, 237, 123)","static-yellow-300":"rgba(250, 224, 23)","static-yellow-400":"rgba(238, 205, 0)","static-yellow-500":"rgba(221, 185, 0)","static-yellow-600":"rgba(201, 164, 0)","static-yellow-700":"rgba(181, 144, 0)","static-yellow-800":"rgba(160, 125, 0)","static-yellow-900":"rgba(138, 106, 0)","static-yellow-1000":"rgba(116, 87, 0)","static-yellow-1100":"rgba(96, 70, 0)","static-yellow-1200":"rgba(77, 54, 0)","static-yellow-1300":"rgba(60, 41, 0)","static-yellow-1400":"rgba(47, 30, 0)","static-chartreuse-100":"rgba(235, 255, 170)","static-chartreuse-200":"rgba(211, 249, 88)","static-chartreuse-300":"rgba(195, 239, 54)","static-chartreuse-400":"rgba(176, 222, 27)","static-chartreuse-500":"rgba(157, 203, 13)","static-chartreuse-600":"rgba(139, 182, 4)","static-chartreuse-700":"rgba(122, 162, 0)","static-chartreuse-800":"rgba(106, 141, 0)","static-chartreuse-900":"rgba(90, 120, 0)","static-chartreuse-1000":"rgba(75, 100, 0)","static-chartreuse-1100":"rgba(61, 81, 0)","static-chartreuse-1200":"rgba(48, 64, 0)","static-chartreuse-1300":"rgba(36, 49, 0)","static-chartreuse-1400":"rgba(28, 37, 0)","static-celery-100":"rgba(226, 253, 218)","static-celery-200":"rgba(192, 250, 176)","static-celery-300":"rgba(164, 243, 146)","static-celery-400":"rgba(126, 229, 114)","static-celery-500":"rgba(87, 212, 86)","static-celery-600":"rgba(48, 193, 61)","static-celery-700":"rgba(15, 172, 38)","static-celery-800":"rgba(0, 150, 20)","static-celery-900":"rgba(0, 128, 15)","static-celery-1000":"rgba(0, 107, 15)","static-celery-1100":"rgba(0, 87, 13)","static-celery-1200":"rgba(0, 69, 11)","static-celery-1300":"rgba(0, 53, 8)","static-celery-1400":"rgba(0, 40, 6)","static-green-100":"rgba(228, 251, 236)","static-green-200":"rgba(195, 247, 218)","static-green-300":"rgba(156, 240, 198)","static-green-400":"rgba(113, 227, 174)","static-green-500":"rgba(80, 209, 153)","static-green-600":"rgba(54, 189, 133)","static-green-700":"rgba(29, 169, 115)","static-green-800":"rgba(0, 148, 97)","static-green-900":"rgba(0, 126, 80)","static-green-1000":"rgba(0, 105, 65)","static-green-1100":"rgba(0, 86, 53)","static-green-1200":"rgba(4, 67, 41)","static-green-1300":"rgba(9, 51, 32)","static-green-1400":"rgba(10, 38, 24)","static-seafoam-100":"rgba(228, 250, 247)","static-seafoam-200":"rgba(191, 245, 239)","static-seafoam-300":"rgba(157, 238, 231)","static-seafoam-400":"rgba(114, 223, 216)","static-seafoam-500":"rgba(75, 206, 199)","static-seafoam-600":"rgba(32, 187, 180)","static-seafoam-700":"rgba(0, 166, 160)","static-seafoam-800":"rgba(0, 145, 139)","static-seafoam-900":"rgba(0, 124, 118)","static-seafoam-1000":"rgba(0, 103, 99)","static-seafoam-1100":"rgba(10, 83, 80)","static-seafoam-1200":"rgba(18, 65, 63)","static-seafoam-1300":"rgba(18, 49, 48)","static-seafoam-1400":"rgba(16, 37, 36)","static-cyan-100":"rgba(221, 251, 255)","static-cyan-200":"rgba(183, 245, 255)","static-cyan-300":"rgba(150, 236, 252)","static-cyan-400":"rgba(107, 221, 245)","static-cyan-500":"rgba(65, 203, 236)","static-cyan-600":"rgba(26, 182, 223)","static-cyan-700":"rgba(4, 161, 205)","static-cyan-800":"rgba(0, 139, 185)","static-cyan-900":"rgba(0, 118, 164)","static-cyan-1000":"rgba(0, 97, 142)","static-cyan-1100":"rgba(0, 78, 120)","static-cyan-1200":"rgba(0, 61, 98)","static-cyan-1300":"rgba(0, 47, 77)","static-cyan-1400":"rgba(0, 36, 59)","static-blue-100":"rgba(237, 248, 255)","static-blue-200":"rgba(214, 238, 255)","static-blue-300":"rgba(193, 228, 255)","static-blue-400":"rgba(161, 212, 253)","static-blue-500":"rgba(130, 193, 251)","static-blue-600":"rgba(98, 173, 247)","static-blue-700":"rgba(66, 151, 244)","static-blue-800":"rgba(27, 127, 245)","static-blue-900":"rgba(4, 105, 227)","static-blue-1000":"rgba(0, 87, 190)","static-blue-1100":"rgba(0, 72, 153)","static-blue-1200":"rgba(0, 57, 120)","static-blue-1300":"rgba(0, 43, 92)","static-blue-1400":"rgba(0, 33, 71)","static-indigo-100":"rgba(245, 245, 254)","static-indigo-200":"rgba(232, 233, 255)","static-indigo-300":"rgba(219, 221, 255)","static-indigo-400":"rgba(200, 202, 255)","static-indigo-500":"rgba(178, 181, 255)","static-indigo-600":"rgba(155, 159, 255)","static-indigo-700":"rgba(132, 137, 253)","static-indigo-800":"rgba(109, 115, 246)","static-indigo-900":"rgba(87, 93, 232)","static-indigo-1000":"rgba(68, 74, 208)","static-indigo-1100":"rgba(53, 58, 176)","static-indigo-1200":"rgba(40, 45, 142)","static-indigo-1300":"rgba(30, 34, 110)","static-indigo-1400":"rgba(23, 26, 85)","static-pruple-100":"rgba(251, 243, 255)","static-pruple-200":"rgba(243, 230, 255)","static-pruple-300":"rgba(235, 216, 255)","static-pruple-400":"rgba(223, 194, 254)","static-pruple-500":"rgba(209, 171, 253)","static-pruple-600":"rgba(194, 146, 252)","static-pruple-700":"rgba(178, 121, 250)","static-pruple-800":"rgba(161, 93, 246)","static-pruple-900":"rgba(142, 67, 234)","static-pruple-1000":"rgba(120, 43, 216)","static-pruple-1100":"rgba(98, 23, 190)","static-pruple-1200":"rgba(77, 13, 157)","static-pruple-1300":"rgba(57, 15, 120)","static-pruple-1400":"rgba(42, 16, 88)","static-fuchsia-100":"rgba(255, 242, 253)","static-fuchsia-200":"rgba(255, 227, 251)","static-fuchsia-300":"rgba(255, 208, 249)","static-fuchsia-400":"rgba(252, 184, 247)","static-fuchsia-500":"rgba(247, 155, 244)","static-fuchsia-600":"rgba(240, 123, 239)","static-fuchsia-700":"rgba(228, 93, 230)","static-fuchsia-800":"rgba(211, 63, 212)","static-fuchsia-900":"rgba(188, 39, 187)","static-fuchsia-1000":"rgba(163, 10, 163)","static-fuchsia-1100":"rgba(135, 0, 136)","static-fuchsia-1200":"rgba(107, 3, 107)","static-fuchsia-1300":"rgba(80, 13, 79)","static-fuchsia-1400":"rgba(60, 14, 58)","static-magenta-100":"rgba(255, 243, 247)","static-magenta-200":"rgba(255, 229, 238)","static-magenta-300":"rgba(255, 211, 227)","static-magenta-400":"rgba(255, 188, 212)","static-magenta-500":"rgba(255, 159, 194)","static-magenta-600":"rgba(253, 127, 175)","static-magenta-700":"rgba(242, 98, 157)","static-magenta-800":"rgba(226, 68, 135)","static-magenta-900":"rgba(205, 40, 111)","static-magenta-1000":"rgba(179, 15, 89)","static-magenta-1100":"rgba(149, 0, 72)","static-magenta-1200":"rgba(119, 0, 58)","static-magenta-1300":"rgba(93, 1, 46)","static-magenta-1400":"rgba(71, 5, 35)",informative:"rgb(20, 122, 243)",negative:"rgb(234, 56, 41)",notice:"rgb(228, 111, 0)",positive:"rgb(21, 164, 110)","divergent-orange-yellow-seafoam-100":"rgb(88, 0, 0)","divergent-orange-yellow-seafoam-200":"rgb(121, 38, 11)","divergent-orange-yellow-seafoam-300":"rgb(156, 69, 17)","divergent-orange-yellow-seafoam-400":"rgb(189, 101, 26)","divergent-orange-yellow-seafoam-500":"rgb(221, 134, 41)","divergent-orange-yellow-seafoam-600":"rgb(245, 173, 82)","divergent-orange-yellow-seafoam-700":"rgb(254, 214, 147)","divergent-orange-yellow-seafoam-800":"rgb(255, 255, 224)","divergent-orange-yellow-seafoam-900":"rgb(187, 228, 209)","divergent-orange-yellow-seafoam-1000":"rgb(118, 199, 190)","divergent-orange-yellow-seafoam-1100":"rgb(62, 168, 166)","divergent-orange-yellow-seafoam-1200":"rgb(32, 130, 136)","divergent-orange-yellow-seafoam-1300":"rgb(7, 103, 105)","divergent-orange-yellow-seafoam-1400":"rgb(0, 73, 75)","divergent-orange-yellow-seafoam-1500":"rgb(0, 44, 45)","divergent-red-yellow-blue-100":"rgb(73, 2, 30)","divergent-red-yellow-blue-200":"rgb(116, 20, 51)","divergent-red-yellow-blue-300":"rgb(163, 41, 72)","divergent-red-yellow-blue-400":"rgb(196, 82, 87)","divergent-red-yellow-blue-500":"rgb(226, 122, 101)","divergent-red-yellow-blue-600":"rgb(239, 168, 133)","divergent-red-yellow-blue-700":"rgb(249, 212, 175)","divergent-red-yellow-blue-800":"rgb(255, 255, 225)","divergent-red-yellow-blue-900":"rgb(189, 226, 208)","divergent-red-yellow-blue-1000":"rgb(139, 192, 196)","divergent-red-yellow-blue-1100":"rgb(90, 159, 184)","divergent-red-yellow-blue-1200":"rgb(60, 123, 166)","divergent-red-yellow-blue-1300":"rgb(32, 89, 148)","divergent-red-yellow-blue-1400":"rgb(24, 57, 112)","divergent-red-yellow-blue-1500":"rgb(17, 27, 76)","divergent-red-blue-100":"rgb(73, 2, 30)","divergent-red-blue-200":"rgb(114, 21, 50)","divergent-red-blue-300":"rgb(158, 43, 70)","divergent-red-blue-400":"rgb(202, 67, 92)","divergent-red-blue-500":"rgb(222, 111, 134)","divergent-red-blue-600":"rgb(236, 155, 176)","divergent-red-blue-700":"rgb(247, 196, 217)","divergent-red-blue-800":"rgb(250, 240, 255)","divergent-red-blue-900":"rgb(199, 209, 241)","divergent-red-blue-1000":"rgb(147, 179, 221)","divergent-red-blue-1100":"rgb(96, 149, 201)","divergent-red-blue-1200":"rgb(51, 118, 177)","divergent-red-blue-1300":"rgb(41, 83, 143)","divergent-red-blue-1400":"rgb(24, 56, 111)","divergent-red-blue-1500":"rgb(12, 27, 75)","sequential-viridis-100":"rgb(253, 231, 37)","sequential-viridis-200":"rgb(210, 226, 27)","sequential-viridis-300":"rgb(165, 219, 54)","sequential-viridis-400":"rgb(122, 209, 81)","sequential-viridis-500":"rgb(84, 197, 104)","sequential-viridis-600":"rgb(53, 183, 121)","sequential-viridis-700":"rgb(34, 168, 132)","sequential-viridis-800":"rgb(31, 152, 139)","sequential-viridis-900":"rgb(35, 136, 142)","sequential-viridis-1000":"rgb(42, 120, 142)","sequential-viridis-1100":"rgb(49, 104, 142)","sequential-viridis-1200":"rgb(57, 86, 140)","sequential-viridis-1300":"rgb(65, 68, 135)","sequential-viridis-1400":"rgb(71, 47, 125)","sequential-viridis-1500":"rgb(72, 26, 108)","sequential-viridis-1600":"rgb(68, 1, 84)","sequential-magma-100":"rgb(252, 253, 191)","sequential-magma-200":"rgb(253, 222, 160)","sequential-magma-300":"rgb(254, 191, 132)","sequential-magma-400":"rgb(254, 159, 109)","sequential-magma-500":"rgb(250, 127, 94)","sequential-magma-600":"rgb(241, 96, 93)","sequential-magma-700":"rgb(222, 73, 104)","sequential-magma-800":"rgb(196, 60, 117)","sequential-magma-900":"rgb(168, 50, 125)","sequential-magma-1000":"rgb(140, 41, 129)","sequential-magma-1100":"rgb(114, 31, 129)","sequential-magma-1200":"rgb(87, 21, 126)","sequential-magma-1300":"rgb(59, 15, 112)","sequential-magma-1400":"rgb(32, 17, 75)","sequential-magma-1500":"rgb(11, 9, 36)","sequential-magma-1600":"rgb(0, 0, 4)","sequential-rose-100":"rgb(255, 244, 222)","sequential-rose-200":"rgb(255, 221, 216)","sequential-rose-300":"rgb(255, 198, 210)","sequential-rose-400":"rgb(252, 175, 203)","sequential-rose-500":"rgb(248, 152, 196)","sequential-rose-600":"rgb(243, 128, 188)","sequential-rose-700":"rgb(137, 103, 180)","sequential-rose-800":"rgb(230, 75, 172)","sequential-rose-900":"rgb(208, 62, 160)","sequential-rose-1000":"rgb(185, 52, 149)","sequential-rose-1100":"rgb(161, 42, 139)","sequential-rose-1200":"rgb(137, 34, 130)","sequential-rose-1300":"rgb(112, 28, 122)","sequential-rose-1400":"rgb(85, 22, 114)","sequential-rose-1500":"rgb(55, 18, 108)","sequential-rose-1600":"rgb(0, 16, 102)","sequential-cerulean-100":"rgb(234, 255, 241)","sequential-cerulean-200":"rgb(201, 241, 228)","sequential-cerulean-300":"rgb(167, 227, 215)","sequential-cerulean-400":"rgb(113, 213, 202)","sequential-cerulean-500":"rgb(108, 197, 192)","sequential-cerulean-600":"rgb(88, 180, 185)","sequential-cerulean-700":"rgb(68, 162, 177)","sequential-cerulean-800":"rgb(48, 145, 170)","sequential-cerulean-900":"rgb(40, 128, 160)","sequential-cerulean-1000":"rgb(36, 110, 150)","sequential-cerulean-1100":"rgb(33, 93, 139)","sequential-cerulean-1200":"rgb(29, 76, 129)","sequential-cerulean-1300":"rgb(28, 59, 119)","sequential-cerulean-1400":"rgb(27, 41, 109)","sequential-cerulean-1500":"rgb(26, 22, 98)","sequential-cerulean-1600":"rgb(24, 0, 85)","sequential-forest-100":"rgb(255, 255, 224)","sequential-forest-200":"rgb(226, 245, 189)","sequential-forest-300":"rgb(197, 234, 153)","sequential-forest-400":"rgb(166, 223, 115)","sequential-forest-500":"rgb(143, 209, 108)","sequential-forest-600":"rgb(121, 195, 101)","sequential-forest-700":"rgb(98, 181, 94)","sequential-forest-800":"rgb(76, 166, 88)","sequential-forest-900":"rgb(59, 151, 82)","sequential-forest-1000":"rgb(49, 136, 79)","sequential-forest-1100":"rgb(40, 121, 76)","sequential-forest-1200":"rgb(30, 106, 72)","sequential-forest-1300":"rgb(21, 91, 69)","sequential-forest-1400":"rgb(14, 77, 65)","sequential-forest-1500":"rgb(7, 63, 62)","sequential-forest-1600":"rgb(0, 49, 58)","categorical-100":"rgb(15, 181, 174)","categorical-200":"rgb(64, 70, 202)","categorical-300":"rgb(246, 133, 17)","categorical-400":"rgb(222, 61, 130)","categorical-500":"rgb(126, 132, 250)","categorical-600":"rgb(114, 224, 106)","categorical-700":"rgb(20, 122, 243)","categorical-800":"rgb(115, 38, 211)","categorical-900":"rgb(232, 198, 0)","categorical-1000":"rgb(203, 93, 0)","categorical-1100":"rgb(0, 143, 93)","categorical-1200":"rgb(188, 233, 49)","categorical-1300":"rgb(90, 169, 250)","categorical-1400":"rgb(192, 56, 204)","categorical-1500":"rgb(245, 107, 183)","categorical-1600":"rgb(255, 226, 46)"},dark:{"gray-50":"rgb(0, 0, 0)","gray-75":"rgb(14, 14, 14)","gray-100":"rgb(29, 29, 29)","gray-200":"rgb(48, 48, 48)","gray-300":"rgb(75, 75, 75)","gray-400":"rgb(106, 106, 106)","gray-500":"rgb(141, 141, 141)","gray-600":"rgb(176, 176, 176)","gray-700":"rgb(208, 208, 208)","gray-800":"rgb(235, 235, 235)","gray-900":"rgb(255, 255, 255)","blue-100":"rgb(0, 38, 81)","blue-200":"rgb(0, 50, 106)","blue-300":"rgb(0, 64, 135)","blue-400":"rgb(0, 78, 166)","blue-500":"rgb(0, 92, 200)","blue-600":"rgb(6, 108, 231)","blue-700":"rgb(29, 128, 245)","blue-800":"rgb(64, 150, 243)","blue-900":"rgb(94, 170, 247)","blue-1000":"rgb(124, 189, 250)","blue-1100":"rgb(152, 206, 253)","blue-1200":"rgb(179, 222, 254)","blue-1300":"rgb(206, 234, 255)","green-100":"rgb(10, 44, 28)","green-200":"rgb(7, 59, 36)","green-300":"rgb(0, 76, 46)","green-400":"rgb(0, 93, 57)","green-500":"rgb(0, 111, 69)","green-600":"rgb(0, 130, 82)","green-700":"rgb(0, 149, 98)","green-800":"rgb(28, 168, 114)","green-900":"rgb(52, 187, 132)","green-1000":"rgb(75, 205, 149)","green-1100":"rgb(103, 222, 168)","green-1200":"rgb(137, 236, 188)","green-1300":"rgb(177, 244, 209)","orange-100":"rgb(72, 24, 1)","orange-200":"rgb(92, 32, 0)","orange-300":"rgb(115, 43, 0)","orange-400":"rgb(138, 55, 0)","orange-500":"rgb(162, 68, 0)","orange-600":"rgb(186, 82, 0)","orange-700":"rgb(210, 98, 0)","orange-800":"rgb(232, 116, 0)","orange-900":"rgb(249, 137, 23)","orange-1000":"rgb(255, 162, 59)","orange-1100":"rgb(255, 188, 102)","orange-1200":"rgb(253, 210, 145)","orange-1300":"rgb(255, 226, 181)","red-100":"rgb(87, 0, 0)","red-200":"rgb(110, 0, 0)","red-300":"rgb(138, 0, 0)","red-400":"rgb(167, 0, 0)","red-500":"rgb(196, 7, 6)","red-600":"rgb(221, 33, 24)","red-700":"rgb(238, 67, 49)","red-800":"rgb(249, 99, 76)","red-900":"rgb(255, 129, 107)","red-1000":"rgb(255, 158, 140)","red-1100":"rgb(255, 183, 169)","red-1200":"rgb(255, 205, 195)","red-1300":"rgb(255, 223, 217)","celery-100":"rgb(0, 47, 7)","celery-200":"rgb(0, 61, 9)","celery-300":"rgb(0, 77, 12)","celery-400":"rgb(0, 95, 15)","celery-500":"rgb(0, 113, 15)","celery-600":"rgb(0, 132, 15)","celery-700":"rgb(0, 151, 20)","celery-800":"rgb(13, 171, 37)","celery-900":"rgb(45, 191, 58)","celery-1000":"rgb(80, 208, 82)","celery-1100":"rgb(115, 224, 107)","celery-1200":"rgb(147, 237, 131)","celery-1300":"rgb(180, 247, 162)","chartreuse-100":"rgb(32, 43, 0)","chartreuse-200":"rgb(42, 56, 0)","chartreuse-300":"rgb(54, 72, 0)","chartreuse-400":"rgb(66, 88, 0)","chartreuse-500":"rgb(79, 105, 0)","chartreuse-600":"rgb(93, 123, 0)","chartreuse-700":"rgb(107, 142, 0)","chartreuse-800":"rgb(122, 161, 0)","chartreuse-900":"rgb(138, 180, 3)","chartreuse-1000":"rgb(154, 198, 11)","chartreuse-1100":"rgb(170, 216, 22)","chartreuse-1200":"rgb(187, 232, 41)","chartreuse-1300":"rgb(205, 246, 72)","cyan-100":"rgb(0, 41, 68)","cyan-200":"rgb(0, 54, 88)","cyan-300":"rgb(0, 69, 108)","cyan-400":"rgb(0, 86, 128)","cyan-500":"rgb(0, 103, 147)","cyan-600":"rgb(0, 121, 167)","cyan-700":"rgb(0, 140, 186)","cyan-800":"rgb(4, 160, 205)","cyan-900":"rgb(23, 180, 221)","cyan-1000":"rgb(57, 199, 234)","cyan-1100":"rgb(96, 216, 243)","cyan-1200":"rgb(134, 230, 250)","cyan-1300":"rgb(170, 242, 255)","fuchsia-100":"rgb(70, 14, 68)","fuchsia-200":"rgb(93, 9, 92)","fuchsia-300":"rgb(120, 0, 120)","fuchsia-400":"rgb(146, 0, 147)","fuchsia-500":"rgb(169, 19, 170)","fuchsia-600":"rgb(191, 43, 191)","fuchsia-700":"rgb(211, 65, 213)","fuchsia-800":"rgb(228, 91, 229)","fuchsia-900":"rgb(239, 120, 238)","fuchsia-1000":"rgb(246, 149, 243)","fuchsia-1100":"rgb(251, 175, 246)","fuchsia-1200":"rgb(254, 199, 248)","fuchsia-1300":"rgb(255, 220, 250)","indigo-100":"rgb(26, 29, 97)","indigo-200":"rgb(35, 39, 125)","indigo-300":"rgb(46, 50, 158)","indigo-400":"rgb(58, 63, 189)","indigo-500":"rgb(73, 78, 216)","indigo-600":"rgb(90, 96, 235)","indigo-700":"rgb(110, 115, 246)","indigo-800":"rgb(132, 136, 253)","indigo-900":"rgb(153, 157, 255)","indigo-1000":"rgb(174, 177, 255)","indigo-1100":"rgb(194, 196, 255)","indigo-1200":"rgb(212, 213, 255)","indigo-1300":"rgb(227, 228, 255)","magenta-100":"rgb(83, 3, 41)","magenta-200":"rgb(106, 0, 52)","magenta-300":"rgb(133, 0, 65)","magenta-400":"rgb(161, 0, 78)","magenta-500":"rgb(186, 22, 93)","magenta-600":"rgb(209, 43, 114)","magenta-700":"rgb(227, 69, 137)","magenta-800":"rgb(241, 97, 156)","magenta-900":"rgb(252, 124, 173)","magenta-1000":"rgb(255, 152, 191)","magenta-1100":"rgb(255, 179, 207)","magenta-1200":"rgb(255, 202, 221)","magenta-1300":"rgb(255, 221, 233)","purple-100":"rgb(50, 16, 104)","purple-200":"rgb(67, 13, 140)","purple-300":"rgb(86, 16, 173)","purple-400":"rgb(106, 29, 200)","purple-500":"rgb(126, 49, 222)","purple-600":"rgb(145, 70, 236)","purple-700":"rgb(162, 94, 246)","purple-800":"rgb(178, 119, 250)","purple-900":"rgb(192, 143, 252)","purple-1000":"rgb(206, 166, 253)","purple-1100":"rgb(219, 188, 254)","purple-1200":"rgb(230, 207, 255)","purple-1300":"rgb(240, 224, 255)","seafoam-100":"rgb(18, 43, 42)","seafoam-200":"rgb(19, 57, 55)","seafoam-300":"rgb(16, 73, 70)","seafoam-400":"rgb(3, 91, 88)","seafoam-500":"rgb(0, 108, 104)","seafoam-600":"rgb(0, 127, 121)","seafoam-700":"rgb(0, 146, 140)","seafoam-800":"rgb(0, 165, 159)","seafoam-900":"rgb(26, 185, 178)","seafoam-1000":"rgb(66, 202, 195)","seafoam-1100":"rgb(102, 218, 211)","seafoam-1200":"rgb(139, 232, 225)","seafoam-1300":"rgb(179, 242, 237)","yellow-100":"rgb(53, 36, 0)","yellow-200":"rgb(68, 47, 0)","yellow-300":"rgb(86, 62, 0)","yellow-400":"rgb(103, 77, 0)","yellow-500":"rgb(122, 92, 0)","yellow-600":"rgb(141, 108, 0)","yellow-700":"rgb(161, 126, 0)","yellow-800":"rgb(180, 144, 0)","yellow-900":"rgb(199, 162, 0)","yellow-1000":"rgb(216, 181, 0)","yellow-1100":"rgb(233, 199, 0)","yellow-1200":"rgb(247, 216, 4)","yellow-1300":"rgb(249, 233, 97)","static-white":"rgba(255, 255, 255)","static-black":"rgba(0, 0, 0)","static-blue":"rgb(20, 115, 230)","static-gray-50":"rgba(254, 254, 254)","static-gray-75":"rgba(254, 254, 254)","static-gray-100":"rgba(254, 254, 254)","static-gray-200":"rgba(235, 235, 235)","static-gray-300":"rgba(217, 217, 217)","static-gray-400":"rgba(179, 179, 179)","static-gray-500":"rgba(146, 146, 146)","static-gray-600":"rgba(110, 110, 110)","static-gray-700":"rgba(71, 71, 71)","static-gray-800":"rgba(34, 34, 34)","static-gray-900":"rgba(0, 0, 0)","static-red-100":"rgba(255, 242, 240)","static-red-200":"rgba(255, 230, 225)","static-red-300":"rgba(255, 214, 206)","static-red-400":"rgba(255, 191, 178)","static-red-500":"rgba(255, 164, 147)","static-red-600":"rgba(255, 133, 111)","static-red-700":"rgba(250, 100, 78)","static-red-800":"rgba(237, 64, 48)","static-red-900":"rgba(217, 28, 21)","static-red-1000":"rgba(187, 2, 2)","static-red-1100":"rgba(154, 0, 0)","static-red-1200":"rgba(124, 0, 0)","static-red-1300":"rgba(97, 0, 0)","static-red-1400":"rgba(77, 0, 0)","static-orange-100":"rgba(255, 245, 227)","static-orange-200":"rgba(255, 233, 197)","static-orange-300":"rgba(254, 218, 162)","static-orange-400":"rgba(255, 195, 114)","static-orange-500":"rgba(255, 168, 68)","static-orange-600":"rgba(250, 139, 26)","static-orange-700":"rgba(233, 117, 0)","static-orange-800":"rgba(209, 97, 0)","static-orange-900":"rgba(182, 80, 0)","static-orange-1000":"rgba(155, 64, 0)","static-orange-1100":"rgba(128, 50, 0)","static-orange-1200":"rgba(103, 38, 0)","static-orange-1300":"rgba(80, 28, 0)","static-orange-1400":"rgba(62, 21, 1)","static-yellow-100":"rgba(253, 247, 196)","static-yellow-200":"rgba(250, 237, 123)","static-yellow-300":"rgba(250, 224, 23)","static-yellow-400":"rgba(238, 205, 0)","static-yellow-500":"rgba(221, 185, 0)","static-yellow-600":"rgba(201, 164, 0)","static-yellow-700":"rgba(181, 144, 0)","static-yellow-800":"rgba(160, 125, 0)","static-yellow-900":"rgba(138, 106, 0)","static-yellow-1000":"rgba(116, 87, 0)","static-yellow-1100":"rgba(96, 70, 0)","static-yellow-1200":"rgba(77, 54, 0)","static-yellow-1300":"rgba(60, 41, 0)","static-yellow-1400":"rgba(47, 30, 0)","static-chartreuse-100":"rgba(235, 255, 170)","static-chartreuse-200":"rgba(211, 249, 88)","static-chartreuse-300":"rgba(195, 239, 54)","static-chartreuse-400":"rgba(176, 222, 27)","static-chartreuse-500":"rgba(157, 203, 13)","static-chartreuse-600":"rgba(139, 182, 4)","static-chartreuse-700":"rgba(122, 162, 0)","static-chartreuse-800":"rgba(106, 141, 0)","static-chartreuse-900":"rgba(90, 120, 0)","static-chartreuse-1000":"rgba(75, 100, 0)","static-chartreuse-1100":"rgba(61, 81, 0)","static-chartreuse-1200":"rgba(48, 64, 0)","static-chartreuse-1300":"rgba(36, 49, 0)","static-chartreuse-1400":"rgba(28, 37, 0)","static-celery-100":"rgba(226, 253, 218)","static-celery-200":"rgba(192, 250, 176)","static-celery-300":"rgba(164, 243, 146)","static-celery-400":"rgba(126, 229, 114)","static-celery-500":"rgba(87, 212, 86)","static-celery-600":"rgba(48, 193, 61)","static-celery-700":"rgba(15, 172, 38)","static-celery-800":"rgba(0, 150, 20)","static-celery-900":"rgba(0, 128, 15)","static-celery-1000":"rgba(0, 107, 15)","static-celery-1100":"rgba(0, 87, 13)","static-celery-1200":"rgba(0, 69, 11)","static-celery-1300":"rgba(0, 53, 8)","static-celery-1400":"rgba(0, 40, 6)","static-green-100":"rgba(228, 251, 236)","static-green-200":"rgba(195, 247, 218)","static-green-300":"rgba(156, 240, 198)","static-green-400":"rgba(113, 227, 174)","static-green-500":"rgba(80, 209, 153)","static-green-600":"rgba(54, 189, 133)","static-green-700":"rgba(29, 169, 115)","static-green-800":"rgba(0, 148, 97)","static-green-900":"rgba(0, 126, 80)","static-green-1000":"rgba(0, 105, 65)","static-green-1100":"rgba(0, 86, 53)","static-green-1200":"rgba(4, 67, 41)","static-green-1300":"rgba(9, 51, 32)","static-green-1400":"rgba(10, 38, 24)","static-seafoam-100":"rgba(228, 250, 247)","static-seafoam-200":"rgba(191, 245, 239)","static-seafoam-300":"rgba(157, 238, 231)","static-seafoam-400":"rgba(114, 223, 216)","static-seafoam-500":"rgba(75, 206, 199)","static-seafoam-600":"rgba(32, 187, 180)","static-seafoam-700":"rgba(0, 166, 160)","static-seafoam-800":"rgba(0, 145, 139)","static-seafoam-900":"rgba(0, 124, 118)","static-seafoam-1000":"rgba(0, 103, 99)","static-seafoam-1100":"rgba(10, 83, 80)","static-seafoam-1200":"rgba(18, 65, 63)","static-seafoam-1300":"rgba(18, 49, 48)","static-seafoam-1400":"rgba(16, 37, 36)","static-cyan-100":"rgba(221, 251, 255)","static-cyan-200":"rgba(183, 245, 255)","static-cyan-300":"rgba(150, 236, 252)","static-cyan-400":"rgba(107, 221, 245)","static-cyan-500":"rgba(65, 203, 236)","static-cyan-600":"rgba(26, 182, 223)","static-cyan-700":"rgba(4, 161, 205)","static-cyan-800":"rgba(0, 139, 185)","static-cyan-900":"rgba(0, 118, 164)","static-cyan-1000":"rgba(0, 97, 142)","static-cyan-1100":"rgba(0, 78, 120)","static-cyan-1200":"rgba(0, 61, 98)","static-cyan-1300":"rgba(0, 47, 77)","static-cyan-1400":"rgba(0, 36, 59)","static-blue-100":"rgba(237, 248, 255)","static-blue-200":"rgba(214, 238, 255)","static-blue-300":"rgba(193, 228, 255)","static-blue-400":"rgba(161, 212, 253)","static-blue-500":"rgba(130, 193, 251)","static-blue-600":"rgba(98, 173, 247)","static-blue-700":"rgba(66, 151, 244)","static-blue-800":"rgba(27, 127, 245)","static-blue-900":"rgba(4, 105, 227)","static-blue-1000":"rgba(0, 87, 190)","static-blue-1100":"rgba(0, 72, 153)","static-blue-1200":"rgba(0, 57, 120)","static-blue-1300":"rgba(0, 43, 92)","static-blue-1400":"rgba(0, 33, 71)","static-indigo-100":"rgba(245, 245, 254)","static-indigo-200":"rgba(232, 233, 255)","static-indigo-300":"rgba(219, 221, 255)","static-indigo-400":"rgba(200, 202, 255)","static-indigo-500":"rgba(178, 181, 255)","static-indigo-600":"rgba(155, 159, 255)","static-indigo-700":"rgba(132, 137, 253)","static-indigo-800":"rgba(109, 115, 246)","static-indigo-900":"rgba(87, 93, 232)","static-indigo-1000":"rgba(68, 74, 208)","static-indigo-1100":"rgba(53, 58, 176)","static-indigo-1200":"rgba(40, 45, 142)","static-indigo-1300":"rgba(30, 34, 110)","static-indigo-1400":"rgba(23, 26, 85)","static-pruple-100":"rgba(251, 243, 255)","static-pruple-200":"rgba(243, 230, 255)","static-pruple-300":"rgba(235, 216, 255)","static-pruple-400":"rgba(223, 194, 254)","static-pruple-500":"rgba(209, 171, 253)","static-pruple-600":"rgba(194, 146, 252)","static-pruple-700":"rgba(178, 121, 250)","static-pruple-800":"rgba(161, 93, 246)","static-pruple-900":"rgba(142, 67, 234)","static-pruple-1000":"rgba(120, 43, 216)","static-pruple-1100":"rgba(98, 23, 190)","static-pruple-1200":"rgba(77, 13, 157)","static-pruple-1300":"rgba(57, 15, 120)","static-pruple-1400":"rgba(42, 16, 88)","static-fuchsia-100":"rgba(255, 242, 253)","static-fuchsia-200":"rgba(255, 227, 251)","static-fuchsia-300":"rgba(255, 208, 249)","static-fuchsia-400":"rgba(252, 184, 247)","static-fuchsia-500":"rgba(247, 155, 244)","static-fuchsia-600":"rgba(240, 123, 239)","static-fuchsia-700":"rgba(228, 93, 230)","static-fuchsia-800":"rgba(211, 63, 212)","static-fuchsia-900":"rgba(188, 39, 187)","static-fuchsia-1000":"rgba(163, 10, 163)","static-fuchsia-1100":"rgba(135, 0, 136)","static-fuchsia-1200":"rgba(107, 3, 107)","static-fuchsia-1300":"rgba(80, 13, 79)","static-fuchsia-1400":"rgba(60, 14, 58)","static-magenta-100":"rgba(255, 243, 247)","static-magenta-200":"rgba(255, 229, 238)","static-magenta-300":"rgba(255, 211, 227)","static-magenta-400":"rgba(255, 188, 212)","static-magenta-500":"rgba(255, 159, 194)","static-magenta-600":"rgba(253, 127, 175)","static-magenta-700":"rgba(242, 98, 157)","static-magenta-800":"rgba(226, 68, 135)","static-magenta-900":"rgba(205, 40, 111)","static-magenta-1000":"rgba(179, 15, 89)","static-magenta-1100":"rgba(149, 0, 72)","static-magenta-1200":"rgba(119, 0, 58)","static-magenta-1300":"rgba(93, 1, 46)","static-magenta-1400":"rgba(71, 5, 35)",informative:"rgb(114, 183, 249)",negative:"rgb(246, 88, 67)",notice:"rgb(254, 154, 46)",positive:"rgb(43, 180, 125)","divergent-orange-yellow-seafoam-100":"rgb(88, 0, 0)","divergent-orange-yellow-seafoam-200":"rgb(121, 38, 11)","divergent-orange-yellow-seafoam-300":"rgb(156, 69, 17)","divergent-orange-yellow-seafoam-400":"rgb(189, 101, 26)","divergent-orange-yellow-seafoam-500":"rgb(221, 134, 41)","divergent-orange-yellow-seafoam-600":"rgb(245, 173, 82)","divergent-orange-yellow-seafoam-700":"rgb(254, 214, 147)","divergent-orange-yellow-seafoam-800":"rgb(255, 255, 224)","divergent-orange-yellow-seafoam-900":"rgb(187, 228, 209)","divergent-orange-yellow-seafoam-1000":"rgb(118, 199, 190)","divergent-orange-yellow-seafoam-1100":"rgb(62, 168, 166)","divergent-orange-yellow-seafoam-1200":"rgb(32, 130, 136)","divergent-orange-yellow-seafoam-1300":"rgb(7, 103, 105)","divergent-orange-yellow-seafoam-1400":"rgb(0, 73, 75)","divergent-orange-yellow-seafoam-1500":"rgb(0, 44, 45)","divergent-red-yellow-blue-100":"rgb(73, 2, 30)","divergent-red-yellow-blue-200":"rgb(116, 20, 51)","divergent-red-yellow-blue-300":"rgb(163, 41, 72)","divergent-red-yellow-blue-400":"rgb(196, 82, 87)","divergent-red-yellow-blue-500":"rgb(226, 122, 101)","divergent-red-yellow-blue-600":"rgb(239, 168, 133)","divergent-red-yellow-blue-700":"rgb(249, 212, 175)","divergent-red-yellow-blue-800":"rgb(255, 255, 225)","divergent-red-yellow-blue-900":"rgb(189, 226, 208)","divergent-red-yellow-blue-1000":"rgb(139, 192, 196)","divergent-red-yellow-blue-1100":"rgb(90, 159, 184)","divergent-red-yellow-blue-1200":"rgb(60, 123, 166)","divergent-red-yellow-blue-1300":"rgb(32, 89, 148)","divergent-red-yellow-blue-1400":"rgb(24, 57, 112)","divergent-red-yellow-blue-1500":"rgb(17, 27, 76)","divergent-red-blue-100":"rgb(73, 2, 30)","divergent-red-blue-200":"rgb(114, 21, 50)","divergent-red-blue-300":"rgb(158, 43, 70)","divergent-red-blue-400":"rgb(202, 67, 92)","divergent-red-blue-500":"rgb(222, 111, 134)","divergent-red-blue-600":"rgb(236, 155, 176)","divergent-red-blue-700":"rgb(247, 196, 217)","divergent-red-blue-800":"rgb(250, 240, 255)","divergent-red-blue-900":"rgb(199, 209, 241)","divergent-red-blue-1000":"rgb(147, 179, 221)","divergent-red-blue-1100":"rgb(96, 149, 201)","divergent-red-blue-1200":"rgb(51, 118, 177)","divergent-red-blue-1300":"rgb(41, 83, 143)","divergent-red-blue-1400":"rgb(24, 56, 111)","divergent-red-blue-1500":"rgb(12, 27, 75)","sequential-viridis-100":"rgb(253, 231, 37)","sequential-viridis-200":"rgb(210, 226, 27)","sequential-viridis-300":"rgb(165, 219, 54)","sequential-viridis-400":"rgb(122, 209, 81)","sequential-viridis-500":"rgb(84, 197, 104)","sequential-viridis-600":"rgb(53, 183, 121)","sequential-viridis-700":"rgb(34, 168, 132)","sequential-viridis-800":"rgb(31, 152, 139)","sequential-viridis-900":"rgb(35, 136, 142)","sequential-viridis-1000":"rgb(42, 120, 142)","sequential-viridis-1100":"rgb(49, 104, 142)","sequential-viridis-1200":"rgb(57, 86, 140)","sequential-viridis-1300":"rgb(65, 68, 135)","sequential-viridis-1400":"rgb(71, 47, 125)","sequential-viridis-1500":"rgb(72, 26, 108)","sequential-viridis-1600":"rgb(68, 1, 84)","sequential-magma-100":"rgb(252, 253, 191)","sequential-magma-200":"rgb(253, 222, 160)","sequential-magma-300":"rgb(254, 191, 132)","sequential-magma-400":"rgb(254, 159, 109)","sequential-magma-500":"rgb(250, 127, 94)","sequential-magma-600":"rgb(241, 96, 93)","sequential-magma-700":"rgb(222, 73, 104)","sequential-magma-800":"rgb(196, 60, 117)","sequential-magma-900":"rgb(168, 50, 125)","sequential-magma-1000":"rgb(140, 41, 129)","sequential-magma-1100":"rgb(114, 31, 129)","sequential-magma-1200":"rgb(87, 21, 126)","sequential-magma-1300":"rgb(59, 15, 112)","sequential-magma-1400":"rgb(32, 17, 75)","sequential-magma-1500":"rgb(11, 9, 36)","sequential-magma-1600":"rgb(0, 0, 4)","sequential-rose-100":"rgb(255, 244, 222)","sequential-rose-200":"rgb(255, 221, 216)","sequential-rose-300":"rgb(255, 198, 210)","sequential-rose-400":"rgb(252, 175, 203)","sequential-rose-500":"rgb(248, 152, 196)","sequential-rose-600":"rgb(243, 128, 188)","sequential-rose-700":"rgb(137, 103, 180)","sequential-rose-800":"rgb(230, 75, 172)","sequential-rose-900":"rgb(208, 62, 160)","sequential-rose-1000":"rgb(185, 52, 149)","sequential-rose-1100":"rgb(161, 42, 139)","sequential-rose-1200":"rgb(137, 34, 130)","sequential-rose-1300":"rgb(112, 28, 122)","sequential-rose-1400":"rgb(85, 22, 114)","sequential-rose-1500":"rgb(55, 18, 108)","sequential-rose-1600":"rgb(0, 16, 102)","sequential-cerulean-100":"rgb(234, 255, 241)","sequential-cerulean-200":"rgb(201, 241, 228)","sequential-cerulean-300":"rgb(167, 227, 215)","sequential-cerulean-400":"rgb(113, 213, 202)","sequential-cerulean-500":"rgb(108, 197, 192)","sequential-cerulean-600":"rgb(88, 180, 185)","sequential-cerulean-700":"rgb(68, 162, 177)","sequential-cerulean-800":"rgb(48, 145, 170)","sequential-cerulean-900":"rgb(40, 128, 160)","sequential-cerulean-1000":"rgb(36, 110, 150)","sequential-cerulean-1100":"rgb(33, 93, 139)","sequential-cerulean-1200":"rgb(29, 76, 129)","sequential-cerulean-1300":"rgb(28, 59, 119)","sequential-cerulean-1400":"rgb(27, 41, 109)","sequential-cerulean-1500":"rgb(26, 22, 98)","sequential-cerulean-1600":"rgb(24, 0, 85)","sequential-forest-100":"rgb(255, 255, 224)","sequential-forest-200":"rgb(226, 245, 189)","sequential-forest-300":"rgb(197, 234, 153)","sequential-forest-400":"rgb(166, 223, 115)","sequential-forest-500":"rgb(143, 209, 108)","sequential-forest-600":"rgb(121, 195, 101)","sequential-forest-700":"rgb(98, 181, 94)","sequential-forest-800":"rgb(76, 166, 88)","sequential-forest-900":"rgb(59, 151, 82)","sequential-forest-1000":"rgb(49, 136, 79)","sequential-forest-1100":"rgb(40, 121, 76)","sequential-forest-1200":"rgb(30, 106, 72)","sequential-forest-1300":"rgb(21, 91, 69)","sequential-forest-1400":"rgb(14, 77, 65)","sequential-forest-1500":"rgb(7, 63, 62)","sequential-forest-1600":"rgb(0, 49, 58)","categorical-100":"rgb(15, 181, 174)","categorical-200":"rgb(64, 70, 202)","categorical-300":"rgb(246, 133, 17)","categorical-400":"rgb(222, 61, 130)","categorical-500":"rgb(126, 132, 250)","categorical-600":"rgb(114, 224, 106)","categorical-700":"rgb(20, 122, 243)","categorical-800":"rgb(115, 38, 211)","categorical-900":"rgb(232, 198, 0)","categorical-1000":"rgb(203, 93, 0)","categorical-1100":"rgb(0, 143, 93)","categorical-1200":"rgb(188, 233, 49)","categorical-1300":"rgb(90, 169, 250)","categorical-1400":"rgb(192, 56, 204)","categorical-1500":"rgb(245, 107, 183)","categorical-1600":"rgb(255, 226, 46)"}},colors=spectrumColors.light,categorical6=[colors["categorical-100"],colors["categorical-200"],colors["categorical-300"],colors["categorical-400"],colors["categorical-500"],colors["categorical-600"]],categorical12=[...categorical6,colors["categorical-700"],colors["categorical-800"],colors["categorical-900"],colors["categorical-1000"],colors["categorical-1100"],colors["categorical-1200"]],categorical16=[...categorical12,colors["categorical-1300"],colors["categorical-1400"],colors["categorical-1500"],colors["categorical-1600"]],divergingColorPalette_colors=spectrumColors.light,divergentOrangeYellowSeafoam15=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-200"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-400"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-600"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-700"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-900"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1000"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1200"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1400"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentOrangeYellowSeafoam9=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-700"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-900"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1300"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentOrangeYellowSeafoam5=[divergingColorPalette_colors["divergent-orange-yellow-seafoam-100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-500"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-800"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1100"],divergingColorPalette_colors["divergent-orange-yellow-seafoam-1500"]],divergentRedYellowBlue15=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-200"],divergingColorPalette_colors["divergent-red-yellow-blue-300"],divergingColorPalette_colors["divergent-red-yellow-blue-400"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-600"],divergingColorPalette_colors["divergent-red-yellow-blue-700"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-900"],divergingColorPalette_colors["divergent-red-yellow-blue-1000"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1200"],divergingColorPalette_colors["divergent-red-yellow-blue-1300"],divergingColorPalette_colors["divergent-red-yellow-blue-1400"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedYellowBlue9=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-300"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-700"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-900"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1300"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedYellowBlue5=[divergingColorPalette_colors["divergent-red-yellow-blue-100"],divergingColorPalette_colors["divergent-red-yellow-blue-500"],divergingColorPalette_colors["divergent-red-yellow-blue-800"],divergingColorPalette_colors["divergent-red-yellow-blue-1100"],divergingColorPalette_colors["divergent-red-yellow-blue-1500"]],divergentRedBlue15=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-200"],divergingColorPalette_colors["divergent-red-blue-300"],divergingColorPalette_colors["divergent-red-blue-400"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-600"],divergingColorPalette_colors["divergent-red-blue-700"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-900"],divergingColorPalette_colors["divergent-red-blue-1000"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1200"],divergingColorPalette_colors["divergent-red-blue-1300"],divergingColorPalette_colors["divergent-red-blue-1400"],divergingColorPalette_colors["divergent-red-blue-1500"]],divergentRedBlue9=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-300"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-700"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-900"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1300"],divergingColorPalette_colors["divergent-red-blue-1500"]],divergentRedBlue5=[divergingColorPalette_colors["divergent-red-blue-100"],divergingColorPalette_colors["divergent-red-blue-500"],divergingColorPalette_colors["divergent-red-blue-800"],divergingColorPalette_colors["divergent-red-blue-1100"],divergingColorPalette_colors["divergent-red-blue-1500"]],sequentialColorPalette_colors=spectrumColors.light,sequentialViridis16=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-200"],sequentialColorPalette_colors["sequential-viridis-300"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-500"],sequentialColorPalette_colors["sequential-viridis-600"],sequentialColorPalette_colors["sequential-viridis-700"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-900"],sequentialColorPalette_colors["sequential-viridis-1000"],sequentialColorPalette_colors["sequential-viridis-1100"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1300"],sequentialColorPalette_colors["sequential-viridis-1400"],sequentialColorPalette_colors["sequential-viridis-1500"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialViridis9=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-200"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-600"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-1000"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1400"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialViridis5=[sequentialColorPalette_colors["sequential-viridis-100"],sequentialColorPalette_colors["sequential-viridis-400"],sequentialColorPalette_colors["sequential-viridis-800"],sequentialColorPalette_colors["sequential-viridis-1200"],sequentialColorPalette_colors["sequential-viridis-1600"]],sequentialMagma16=[sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-200"],sequentialColorPalette_colors["sequential-magma-300"],sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-500"],sequentialColorPalette_colors["sequential-magma-600"],sequentialColorPalette_colors["sequential-magma-700"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-900"],sequentialColorPalette_colors["sequential-magma-1000"],sequentialColorPalette_colors["sequential-magma-1100"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1300"],sequentialColorPalette_colors["sequential-magma-1400"],sequentialColorPalette_colors["sequential-magma-1500"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialMagma9=[sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-200"],sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-600"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-1000"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1400"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialMagma5=[sequentialColorPalette_colors["sequential-magma-400"],sequentialColorPalette_colors["sequential-magma-100"],sequentialColorPalette_colors["sequential-magma-800"],sequentialColorPalette_colors["sequential-magma-1200"],sequentialColorPalette_colors["sequential-magma-1600"]],sequentialRose16=[sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-200"],sequentialColorPalette_colors["sequential-rose-300"],sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-500"],sequentialColorPalette_colors["sequential-rose-600"],sequentialColorPalette_colors["sequential-rose-700"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-900"],sequentialColorPalette_colors["sequential-rose-1000"],sequentialColorPalette_colors["sequential-rose-1100"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1300"],sequentialColorPalette_colors["sequential-rose-1400"],sequentialColorPalette_colors["sequential-rose-1500"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialRose9=[sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-200"],sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-600"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-1000"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1400"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialRose5=[sequentialColorPalette_colors["sequential-rose-400"],sequentialColorPalette_colors["sequential-rose-100"],sequentialColorPalette_colors["sequential-rose-800"],sequentialColorPalette_colors["sequential-rose-1200"],sequentialColorPalette_colors["sequential-rose-1600"]],sequentialCerulean16=[sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-200"],sequentialColorPalette_colors["sequential-cerulean-300"],sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-500"],sequentialColorPalette_colors["sequential-cerulean-600"],sequentialColorPalette_colors["sequential-cerulean-700"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-900"],sequentialColorPalette_colors["sequential-cerulean-1000"],sequentialColorPalette_colors["sequential-cerulean-1100"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1300"],sequentialColorPalette_colors["sequential-cerulean-1400"],sequentialColorPalette_colors["sequential-cerulean-1500"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialCerulean9=[sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-200"],sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-600"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-1000"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1400"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialCerulean5=[sequentialColorPalette_colors["sequential-cerulean-400"],sequentialColorPalette_colors["sequential-cerulean-100"],sequentialColorPalette_colors["sequential-cerulean-800"],sequentialColorPalette_colors["sequential-cerulean-1200"],sequentialColorPalette_colors["sequential-cerulean-1600"]],sequentialForest16=[sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-200"],sequentialColorPalette_colors["sequential-forest-300"],sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-500"],sequentialColorPalette_colors["sequential-forest-600"],sequentialColorPalette_colors["sequential-forest-700"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-900"],sequentialColorPalette_colors["sequential-forest-1000"],sequentialColorPalette_colors["sequential-forest-1100"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1300"],sequentialColorPalette_colors["sequential-forest-1400"],sequentialColorPalette_colors["sequential-forest-1500"],sequentialColorPalette_colors["sequential-forest-1600"]],sequentialForest9=[sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-200"],sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-600"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-1000"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1400"],sequentialColorPalette_colors["sequential-forest-1600"]],sequentialForest5=[sequentialColorPalette_colors["sequential-forest-400"],sequentialColorPalette_colors["sequential-forest-100"],sequentialColorPalette_colors["sequential-forest-800"],sequentialColorPalette_colors["sequential-forest-1200"],sequentialColorPalette_colors["sequential-forest-1600"]],colorSchemes={categorical6,categorical12,categorical16,divergentOrangeYellowSeafoam5,divergentOrangeYellowSeafoam9,divergentOrangeYellowSeafoam15,divergentRedBlue5,divergentRedBlue9,divergentRedBlue15,divergentRedYellowBlue5,divergentRedYellowBlue9,divergentRedYellowBlue15,sequentialViridis5,sequentialViridis9,sequentialViridis16,sequentialMagma5,sequentialMagma9,sequentialMagma16,sequentialRose5,sequentialRose9,sequentialRose16,sequentialCerulean5,sequentialCerulean9,sequentialCerulean16,sequentialForest5,sequentialForest9,sequentialForest16};var constants=__webpack_require__("./packages/constants/index.ts");const getColorValue=(color,colorScheme)=>spectrumColors[colorScheme][color]||color,ADOBE_CLEAN_FONT="adobe-clean, 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Trebuchet MS', 'Lucida Grande', sans-serif";function getSpectrumVegaConfig(colorScheme){const FONT_COLOR=getColorValue(constants.Kb,colorScheme),{"blue-400":blue400,"gray-200":gray200,"gray-300":gray300,"gray-700":gray700,"gray-900":gray900}=spectrumColors[colorScheme],horizontalLegendLayout={anchor:"middle",direction:"horizontal",center:!0,offset:24,bounds:"full",margin:48},verticalLegendLayout={anchor:"middle",direction:"vertical",center:!1,offset:24,bounds:"full",margin:24},defaultColor=spectrumColors[colorScheme]["categorical-100"];return{axis:{bandPosition:.5,domain:!1,domainWidth:2,domainColor:gray900,gridColor:gray200,labelFont:ADOBE_CLEAN_FONT,labelFontSize:constants.gI,labelFontWeight:"normal",labelPadding:8,labelOverlap:!0,labelColor:FONT_COLOR,ticks:!1,tickColor:gray300,tickRound:!0,tickSize:8,tickCap:"round",tickWidth:1,titleAnchor:"middle",titleColor:FONT_COLOR,titleFont:ADOBE_CLEAN_FONT,titleFontSize:constants.gI,titleFontWeight:"bold",titlePadding:16},range:{category:categorical16,diverging:divergentOrangeYellowSeafoam15,ordinal:categorical16,ramp:sequentialViridis16},background:constants.z6,legend:{columnPadding:20,labelColor:FONT_COLOR,labelFont:ADOBE_CLEAN_FONT,labelFontSize:constants.gI,labelFontWeight:"normal",labelLimit:184,layout:{bottom:horizontalLegendLayout,top:horizontalLegendLayout,left:verticalLegendLayout,right:verticalLegendLayout},rowPadding:8,symbolSize:250,symbolType:constants.UU,symbolStrokeColor:gray700,titleColor:FONT_COLOR,titleFont:ADOBE_CLEAN_FONT,titleFontSize:constants.gI,titlePadding:8},arc:{fill:defaultColor},area:{fill:defaultColor,opacity:.8},line:{strokeWidth:2,stroke:defaultColor},path:{stroke:defaultColor},rect:{strokeWidth:0,stroke:blue400,fill:defaultColor},rule:{stroke:gray900,strokeWidth:2},shape:{stroke:defaultColor},symbol:{strokeWidth:constants.Zx,size:constants.Nq,fill:defaultColor},text:{fill:FONT_COLOR,font:ADOBE_CLEAN_FONT,fontSize:constants.gI},title:{offset:10,font:ADOBE_CLEAN_FONT,fontSize:18,color:FONT_COLOR}}}},"./packages/utils/src/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>toCamelCase,q:()=>combineNames});const combineNames=(parentName,childName)=>[parentName,childName&&parentName?childName.charAt(0).toUpperCase()+childName.slice(1):childName].filter(Boolean).join("");function toCamelCase(str){const words=str.match(/[A-Z]{2,}(?=[A-Z][a-z]+\d*|\b)|[A-Z]?[a-z]+\d*|[A-Z]|\d+/g);return words?words.map(((word,i)=>0===i?word.toLowerCase():word.charAt(0).toUpperCase()+word.slice(1).toLowerCase())).join(""):str}},"./packages/vega-spec-builder/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cv:()=>baseData,m:()=>buildSpec,NJ:()=>getChartConfig,He:()=>getVegaEmbedOptions,JH:()=>mergeValuesIntoData});var immer=__webpack_require__("./node_modules/immer/dist/immer.mjs"),constants=__webpack_require__("./packages/constants/index.ts"),themes=__webpack_require__("./packages/themes/index.ts"),utils=__webpack_require__("./packages/utils/src/utils.ts");const addTimeTransform=(0,immer.jM)(((transforms,dimension)=>{-1===transforms.findIndex((transform=>"timeunit"===transform.type))&&(transforms.push({type:"formula",expr:`toDate(datum["${dimension}"])`,as:dimension}),transforms.push({type:"timeunit",field:dimension,units:["year","month","date","hours","minutes","seconds"],as:[constants.v6,`${constants.Lr}1`]}))})),getTransformSort=order=>{if(order)return{field:order}},getTableData=data=>data.find((d=>d.name===constants.Bt)),getFilteredTableData=data=>data.find((d=>d.name===constants.H5)),getSeriesIdTransform=facets=>{if(0===facets.length)return[];const expr=facets.map((facet=>`datum.${facet}`)).join(' + " | " + ');return[{type:"formula",as:constants.y4,expr}]},getFilteredTooltipData=chartTooltips=>{const excludeDataKeys=chartTooltips[0]?.excludeDataKeys,transform=excludeDataKeys?.map((excludeDataKey=>({type:"filter",expr:`!datum.${excludeDataKey}`})));return{name:`${constants.H5}ForTooltip`,source:constants.H5,transform}};var vega_module=__webpack_require__("./packages/vega-spec-builder/node_modules/vega/build/vega.module.js");const getFacetsFromOptions=({color,lineType,opacity,size})=>{let facets=[color,lineType,opacity,size].map((facet=>Array.isArray(facet)?facet[0]:facet)).filter((facet=>"string"==typeof facet));facets=[...new Set(facets)];let secondaryFacets=[color,lineType,opacity].map((facet=>Array.isArray(facet)?facet[1]:void 0)).filter((facet=>"string"==typeof facet));return secondaryFacets=[...new Set(secondaryFacets)],{facets,secondaryFacets}},getFacetsFromScales=(scales=[])=>{const facets=[constants.Tj,constants.Ze,constants.$M,"secondaryColor","secondaryLineType","secondaryOpacity"].reduce(((acc,cur)=>{const scale=scales.find((scale=>scale.name===cur));return scale?.domain&&"fields"in scale.domain&&scale.domain.fields.length?[...acc,scale.domain.fields[0].toString()]:acc}),[]);return[...new Set(facets)]},getStrokeDashFromLineType=lineType=>{if(Array.isArray(lineType))return lineType;switch(lineType){case"dashed":return[7,4];case"dotted":return[2,3];case"dotDash":return[2,3,7,4];case"shortDash":return[3,4];case"longDash":return[11,4];case"twoDash":return[5,2,11,2];default:return[]}},getLineWidthPixelsFromLineWidth=lineWidth=>{if("number"==typeof lineWidth)return lineWidth;switch(lineWidth){case"XS":return 1;case"S":return 1.5;case"L":return 3;case"XL":return 4;default:return 2}},getPathFromSymbolShape=symbolShape=>"rounded-square"===symbolShape?constants.UU:symbolShape,getPathFromIcon=icon=>({date:constants.DX,sentimentNegative:constants.Kj,sentimentNeutral:constants.G_,sentimentPositive:constants.c}[icon]||icon),getVegaSymbolSizeFromRscSymbolSize=symbolSize=>Math.pow(getSymbolWidthFromRscSymbolSize(symbolSize),2),getSymbolWidthFromRscSymbolSize=symbolSize=>{if("number"==typeof symbolSize)return symbolSize;switch(symbolSize){case"XS":return 6;case"S":return 8;case"L":return 12;case"XL":return 16;default:return 10}},baseData=[{name:constants.Bt,values:[],transform:[{type:"identifier",as:constants.i4}]},{name:constants.H5,source:constants.Bt}],initializeSpec=(spec={},chartOptions={})=>{const{backgroundColor,colorScheme="light",description,title}=chartOptions;return{...{usermeta:{},title:title||void 0,description,autosize:{type:"fit",contains:"padding",resize:!0},data:baseData,background:backgroundColor?(0,themes.FH)(backgroundColor,colorScheme):void 0},...spec||{}}},mergeValuesIntoData=(data,values)=>data.map((dataset=>{const datasetValues=values[dataset.name];return datasetValues&&(dataset.values=datasetValues),dataset})),getDimensionField=(dimension,scaleType)=>"time"===scaleType?constants.v6:dimension;function getChartConfig(config,colorScheme){const defaultConfig=(0,themes.Xw)(colorScheme);return config?(0,vega_module.R2E)(defaultConfig,config):defaultConfig}const getScaleIndexByType=(scales,type,axis,scaleName,domainDataKey)=>{const name=scaleName||(0,utils.C)(`${axis} ${type}`);let index=scales.findIndex((scale=>scale.name===name));return-1===index&&(index=scales.length,scales.push(generateScale(type,axis,{name,...domainDataKey?{domain:{data:domainDataKey,fields:[]}}:{}}))),index},getScaleIndexByName=(scales,name,type)=>{let index=scales.findIndex((scale=>scale.name===name));return-1===index&&(index=scales.length,scales.push({name,type})),index},addDomainFields=(0,immer.jM)(((scale,values)=>(values.forEach((value=>{isScaleMultiFieldsRef(scale.domain)?scale.domain.fields.includes(value)||scale.domain.fields.push(value):scale.domain={data:constants.Bt,fields:[value]}})),scale))),addContinuousDimensionScale=(scales,{scaleType,dimension,padding})=>{const index=getScaleIndexByType(scales,scaleType,"x"),fields=[getDimensionField(dimension,scaleType)];scales[index]=addDomainFields(scales[index],fields),void 0!==padding&&(scales[index]=overridePadding(scales[index],padding))},overridePadding=(0,immer.jM)(((scale,padding)=>{"padding"in scale&&(scale.padding=padding),"paddingOuter"in scale&&(scale.paddingOuter=padding)})),addMetricScale=(scales,metricKeys,metricAxis="y",scaleName,domainDataKey)=>{const index=getScaleIndexByType(scales,"linear",metricAxis,scaleName,domainDataKey);scales[index]=addDomainFields(scales[index],metricKeys)},addFieldToFacetScaleDomain=(scales,facetType,facetValue)=>{if("string"==typeof facetValue||Array.isArray(facetValue)&&facetValue.length){const index=getScaleIndexByName(scales,facetType),facetField=Array.isArray(facetValue)?facetValue[0]:facetValue;scales[index]=addDomainFields(scales[index],[facetField])}},generateScale=(type,axis,options)=>({...getDefaultScale(type,axis),...options}),getDefaultScale=(scaleType,axis,chartOrientation="vertical")=>{const isDimensionAxis=axis==={vertical:"x",horizontal:"y"}[chartOrientation],scale={name:(0,utils.C)(`${axis} ${scaleType}`),type:scaleType,range:"x"===axis?"width":"height",domain:{data:constants.H5,fields:[]},...isDimensionAxis?getPadding(scaleType):{}};if("ordinal"===scale.type){const{name,type,domain}=scale;return{name,type,domain}}return"linear"!==scale.type||isDimensionAxis?scale:{...scale,nice:!0,zero:!0}},getPadding=type=>{switch(type){case"band":{const{paddingInner,paddingOuter}=getBandPadding(constants.WN);return{paddingInner,paddingOuter}}case"linear":case"time":return{padding:constants.uP};case"point":return{paddingOuter:constants.IZ};default:return{}}},getBandPadding=(paddingRatio,paddingOuter)=>{const paddingInner=paddingRatio;return{paddingInner,paddingOuter:void 0===paddingOuter?constants.IZ-(1-paddingInner)/2:paddingOuter}},getScaleName=(axis,type)=>(0,utils.C)(`${axis} ${type}`),getOrdinalScale=(name,range)=>({name,type:"ordinal",range,domain:{data:constants.Bt,fields:[]}}),isScaleMultiFieldsRef=domain=>Boolean(domain&&!Array.isArray(domain)&&"data"in domain&&"fields"in domain),getCursor=(chartPopovers,hasOnClick)=>{if(hasOnClick||chartPopovers.length)return{value:"pointer"}};function getTooltip(chartTooltips,name,nestedDatum){if(chartTooltips.length){const defaultTooltip={signal:`merge(datum${nestedDatum?".datum":""}, {'${constants.EA}': '${name}'})`},excludeDataKeys=chartTooltips[0].excludeDataKeys;return excludeDataKeys?.length?[...excludeDataKeys.map((excludeDataKey=>({test:`datum.${excludeDataKey}`,signal:"false"}))),defaultTooltip]:defaultTooltip}}const getBorderStrokeEncodings=(isStacked,isArea=!1)=>isStacked?{stroke:{signal:constants.b3},strokeWidth:{value:isArea?1.5:1},strokeJoin:{value:"round"}}:{},isInteractive=options=>{const hasOnClick="hasOnClick"in options&&options.hasOnClick,metricRanges="metricRanges"in options&&options.metricRanges||[],trendlines="trendlines"in options&&options.trendlines||[];return hasOnClick||hasPopover(options)||hasTooltip(options)||trendlines.some((trendline=>trendline.displayOnHover))||metricRanges.some((metricRange=>metricRange.displayOnHover))},hasPopover=options=>Boolean("chartPopovers"in options&&options.chartPopovers?.length),hasTooltip=options=>Boolean("chartTooltips"in options&&options.chartTooltips?.length),getColorProductionRule=(color,colorScheme,colorScaleType="ordinal")=>{const colorScaleName="linear"===colorScaleType?constants.VQ:constants.Tj;return Array.isArray(color)?{signal:`scale('colors', datum.${color[0]})[indexof(domain('secondaryColor'), datum.${color[1]})% length(scale('colors', datum.${color[0]}))]`}:"string"==typeof color?{scale:colorScaleName,field:color}:{value:(0,themes.FH)(color.value,colorScheme)}},getLineWidthProductionRule=lineWidth=>{if(lineWidth)return Array.isArray(lineWidth)?{signal:`scale('lineWidths', datum.${lineWidth[0]})[indexof(domain('secondaryLineWidth'), datum.${lineWidth[1]})% length(scale('lineWidths', datum.${lineWidth[0]}))]`}:"string"==typeof lineWidth?{scale:constants.Bg,field:lineWidth}:{value:getLineWidthPixelsFromLineWidth(lineWidth.value)}},getOpacityProductionRule=opacity=>Array.isArray(opacity)?{signal:`scale('opacities', datum.${opacity[0]})[indexof(domain('secondaryOpacity'), datum.${opacity[1]})% length(scale('opacities', datum.${opacity[0]}))]`}:"string"==typeof opacity?{signal:`scale('${constants.$M}', datum.${opacity})`}:{value:opacity.value},getSymbolSizeProductionRule=symbolSize=>"string"==typeof symbolSize?{scale:constants.Rl,field:symbolSize}:{value:getVegaSymbolSizeFromRscSymbolSize(symbolSize.value)},getStrokeDashProductionRule=lineType=>Array.isArray(lineType)?{signal:`scale('lineTypes', datum.${lineType[0]})[indexof(domain('secondaryLineType'), datum.${lineType[1]})% length(scale('lineTypes', datum.${lineType[0]}))]`}:"string"==typeof lineType?{scale:constants.Ze,field:lineType}:{value:getStrokeDashFromLineType(lineType.value)},getHighlightOpacityValue=(opacityValue=constants.ZH)=>"signal"in opacityValue?{signal:`${opacityValue.signal} / ${constants.ux}`}:{value:opacityValue.value/constants.ux},getXProductionRule=(scaleType,dimension)=>{const scale=getScaleName("x",scaleType);return"time"===scaleType?{scale,field:constants.v6}:{scale,field:dimension}},getYProductionRule=(metricAxis,metric)=>({scale:metricAxis||"yLinear",field:metric}),getPointsForVoronoi=(dataSource,dimension,metric,name,scaleType,metricAxis)=>({name:`${name}_pointsForVoronoi`,description:`${name}_pointsForVoronoi`,type:"symbol",from:{data:dataSource},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,metric),fill:{value:"transparent"},stroke:{value:"transparent"}},update:{x:getXProductionRule(scaleType,dimension)}}}),getVoronoiPath=(markOptions,dataSource)=>{const{chartPopovers,chartTooltips,name:markName}=markOptions,hasOnClick="hasOnClick"in markOptions&&markOptions.hasOnClick;return{name:`${markName}_voronoi`,description:`${markName}_voronoi`,type:"path",from:{data:dataSource},encode:{enter:{fill:{value:"transparent"},stroke:{value:"transparent"},isVoronoi:{value:!0},tooltip:getTooltip(chartTooltips??[],markName,!0)},update:{cursor:getCursor(chartPopovers??[],hasOnClick)}},transform:[{type:"voronoi",x:"datum.x",y:"datum.y",size:[{signal:"max(width, 1)"},{signal:"max(height, 1)"}]}]}},getItemHoverArea=(chartTooltips,dataSource,dimension,metric,name,scaleType,metricAxis)=>({name:`${name}_hoverGroup`,type:"group",marks:getHoverSizes().map(((size,i)=>({name:getHoverMarkName(name,i),type:"symbol",from:{data:dataSource},encode:{enter:{shape:{value:constants.F3},y:getYProductionRule(metricAxis,metric),fill:{value:"transparent"},stroke:{value:"transparent"},tooltip:getTooltip(chartTooltips,name,!1),size:getHoverSizeSignal(size)},update:{x:getXProductionRule(scaleType,dimension)}}})))}),getHoverMarkName=(name,index)=>`${name}_hover${index}`,getHoverSizes=()=>[...new Array(constants.VJ)].map(((_,i)=>constants.Rh/2**i)),getHoverMarkNames=markName=>[...new Array(constants.VJ)].map(((_,i)=>getHoverMarkName(markName,i))),getHoverSizeSignal=size=>({signal:`${size} * max(width, 1) / 1000`}),getMarkOpacity=options=>{const{highlightedItem,idKey,name:markName}=options,rules=[constants.ZH];return isInteractive(options)||void 0!==highlightedItem?(addHighlightMarkOpacityRules(rules,options),hasPopover(options)?[{test:`!isValid(${constants.U3}) && ${constants.sk} && ${constants.sk} !== datum.${idKey}`,value:1/constants.ux},{test:`isValid(${constants.sk}) && ${constants.sk} === datum.${idKey}`,...constants.ZH},{test:`isValid(${constants.U3}) && ${constants.U3} === datum.${markName}_selectedGroupId`,value:1},{test:`isValid(${constants.U3}) && ${constants.U3} !== datum.${markName}_selectedGroupId`,value:1/constants.ux},...rules]:rules):rules},getInteractiveMarkName=(options,name)=>isInteractive(options)||void 0!==options.highlightedItem?name:"trendlines"in options&&options.trendlines?.some((trendline=>isInteractive(trendline)))?`${name}Trendline`:void 0,getTooltips=markOptions=>markOptions.chartTooltips.map((chartTooltip=>applyTooltipPropDefaults(chartTooltip,markOptions.name))),applyTooltipPropDefaults=({highlightBy="item",...options},markName)=>({highlightBy,markName,...options}),addTooltipData=(data,markOptions,addHighlightedData=!0)=>{const tooltips=getTooltips(markOptions);for(const{highlightBy,markName}of tooltips){if("item"===highlightBy)return;const filteredTable=getFilteredTableData(data);filteredTable.transform||(filteredTable.transform=[]),"dimension"===highlightBy&&"donut"!==markOptions.markType?filteredTable.transform.push(getGroupIdTransform([markOptions.dimension],markName)):"series"===highlightBy?filteredTable.transform.push(getGroupIdTransform([constants.y4],markName)):Array.isArray(highlightBy)&&filteredTable.transform.push(getGroupIdTransform(highlightBy,markName)),addHighlightedData&&data.push(getMarkHighlightedData(markName))}},getGroupIdTransform=(highlightBy,markName)=>({type:"formula",as:`${markName}_highlightGroupId`,expr:highlightBy.map((facet=>`datum.${facet}`)).join(' + " | " + ')}),getMarkHighlightedData=markName=>({name:`${markName}_highlightedData`,source:constants.H5,transform:[{type:"filter",expr:`${constants.oK} === datum.${markName}_highlightGroupId`}]}),isHighlightedByGroup=markOptions=>getTooltips(markOptions).some((({highlightBy})=>highlightBy&&"item"!==highlightBy)),addTooltipSignals=(signals,markOptions)=>{if(isHighlightedByGroup(markOptions)){const highlightedGroupSignal=signals.find((signal=>signal.name===constants.oK));let markName=markOptions.name,update=`datum.${markName}_highlightGroupId`;"interactionMode"in markOptions&&markOptions.interactionMode===constants.BZ.ITEM&&getHoverMarkNames(markName).forEach((name=>{addMouseEvents(highlightedGroupSignal,name,update)})),["scatter","line"].includes(markOptions.markType)&&(update=`datum.${update}`,markName+="_voronoi"),addMouseEvents(highlightedGroupSignal,markName,update)}},addMouseEvents=(highlightedGroupSignal,markName,update)=>{void 0===highlightedGroupSignal.on&&(highlightedGroupSignal.on=[]),highlightedGroupSignal.on.push({events:`@${markName}:mouseover`,update},{events:`@${markName}:mouseout`,update:"null"})},addHighlightMarkOpacityRules=(opacityRules,markOptions)=>{if(opacityRules.unshift({test:`isArray(${constants.qE}) && length(${constants.qE}) > 0 && indexof(${constants.qE}, datum.${markOptions.idKey}) === -1`,value:1/constants.ux},{test:`!isArray(${constants.qE}) && isValid(${constants.qE}) && ${constants.qE} !== datum.${markOptions.idKey}`,value:1/constants.ux}),isHighlightedByGroup(markOptions)){const{name:markName}=markOptions;opacityRules.unshift({test:`${constants.oK} === datum.${markName}_highlightGroupId`,...constants.ZH})}},getHighlightSignalUpdateExpression=(legendName,includeHiddenSeries,keys)=>{const hoveredSeriesExpression=`domain("${legendName}Entries")[datum.index]`;return includeHiddenSeries?keys?.length?`indexof(pluck(data("${constants.H5}"),"${legendName}_highlightGroupId"), ${hoveredSeriesExpression}) !== -1 ? ${hoveredSeriesExpression} : null`:`indexof(hiddenSeries, ${hoveredSeriesExpression}) === -1 ? ${hoveredSeriesExpression} : null`:hoveredSeriesExpression},getGenericValueSignal=(name,value=null)=>({name,value}),addHighlightedItemSignalEvents=(signals,markName,idKey,datumOrder=1,excludeDataKeys)=>{const highlightedItemSignal=signals.find((signal=>signal.name===constants.qE));if(highlightedItemSignal){void 0===highlightedItemSignal.on&&(highlightedItemSignal.on=[]);const datum=new Array(datumOrder).fill("datum.").join(""),excludeDataKeysCondition=excludeDataKeys?.map((excludeDataKey=>`${datum}${excludeDataKey}`)).join(" || ");highlightedItemSignal.on.push({events:`@${markName}:mouseover`,update:excludeDataKeys?.length?`(${excludeDataKeysCondition}) ? null : ${datum}${idKey}`:`${datum}${idKey}`},{events:`@${markName}:mouseout`,update:"null"})}},addHighlightedSeriesSignalEvents=(signals,markName,datumOrder=1,excludeDataKeys)=>{const highlightedSeriesSignal=signals.find((signal=>signal.name===constants.gG));if(highlightedSeriesSignal){void 0===highlightedSeriesSignal.on&&(highlightedSeriesSignal.on=[]);const datum=new Array(datumOrder).fill("datum.").join(""),excludeDataKeysCondition=excludeDataKeys?.map((excludeDataKey=>`${datum}${excludeDataKey}`)).join(" || ");highlightedSeriesSignal.on.push({events:`@${markName}:mouseover`,update:excludeDataKeys?.length?`(${excludeDataKeysCondition}) ? null : ${datum}${constants.y4}`:`${datum}${constants.y4}`},{events:`@${markName}:mouseout`,update:"null"})}},getAreaMark=(areaOptions,dataSource=`${areaOptions.name}_facet`)=>{const{name,chartPopovers,chartTooltips,color,colorScheme,metricStart,metricEnd,isStacked,scaleType,dimension,opacity}=areaOptions;return{name,description:name,type:"area",from:{data:dataSource},interactive:isInteractive(areaOptions),encode:{enter:{y:{scale:"yLinear",field:metricStart},y2:{scale:"yLinear",field:metricEnd},fill:getColorProductionRule(color,colorScheme),tooltip:getTooltip(chartTooltips??[],name),...getBorderStrokeEncodings(isStacked,!0)},update:{x:getX(scaleType,dimension),cursor:getCursor(chartPopovers??[]),fillOpacity:{value:opacity},opacity:getAreaOpacity(areaOptions)}}}};function getAreaOpacity(areaOptions){const{chartPopovers,displayOnHover,isHighlightedByGroup,isMetricRange,highlightedItem,name}=areaOptions,fadedOpacity=1/constants.ux;if(isMetricRange&&displayOnHover)return[{test:`isValid(${constants.gG}) && ${constants.gG} === datum.${constants.y4}`,value:1},{test:`isValid(${constants.qE}) && indexof(pluck(data('${name}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) > -1`},{test:`isValid(${constants.uW}) && ${constants.uW} === datum.${constants.y4}`,value:1},{value:0}];if(!isInteractive(areaOptions)&&!highlightedItem)return[constants.ZH];const opacityRules=[];return isHighlightedByGroup&&opacityRules.push({test:`indexof(pluck(data('${name}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) !== -1`,value:1}),!isMetricRange&&chartPopovers?.length?[...opacityRules,{test:`!isValid(${constants.uW}) && isValid(${constants.gG}) && ${constants.gG} !== datum.${constants.y4}`,value:fadedOpacity},{test:`!isValid(${constants.uW}) && length(data('${name}_highlightedData')) > 0 && indexof(pluck(data('${name}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) === -1`,value:fadedOpacity},{test:`isValid(${constants.uW}) && ${constants.uW} !== datum.${constants.y4}`,value:fadedOpacity},constants.ZH]:[...opacityRules,{test:`isValid(${constants.gG}) && ${constants.gG} !== datum.${constants.y4}`,value:fadedOpacity},{test:`length(data('${name}_highlightedData')) > 0 && indexof(pluck(data('${name}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) === -1`,value:fadedOpacity},constants.ZH]}const getX=(scaleType,dimension)=>"time"===scaleType?{scale:"xTime",field:constants.v6}:"linear"===scaleType?{scale:"xLinear",field:dimension}:{scale:"xPoint",field:dimension},addArea=(0,immer.jM)(((spec,{chartPopovers=[],chartTooltips=[],color=constants.OT,colorScheme=constants.gb,dimension=constants.Lr,index=0,metric=constants.bA,metricStart,metricEnd,name,opacity=.8,scaleType="time",...options})=>{const areaOptions={chartPopovers,chartTooltips,color,colorScheme,dimension,index,metric,name:(0,utils.C)(name||`area${index}`),scaleType,opacity,metricStart,metricEnd,...options};return!metricStart&&!metricEnd||metricStart&&metricEnd||(console.error(`${metricEnd?"metricEnd":"metricStart"} is defined but ${metricEnd?"metricStart":"metricEnd"} is not. Both must be defined in order to use the "start and end" method. Defaulting back to 'metric = ${metric}'`),areaOptions.metricEnd=void 0,areaOptions.metricStart=void 0),spec.data=addData(spec.data??[],areaOptions),spec.signals=addSignals(spec.signals??[],areaOptions),spec.scales=setScales(spec.scales??[],areaOptions),spec.marks=addAreaMarks(spec.marks??[],areaOptions),spec})),addData=(0,immer.jM)(((data,areaOptions)=>{const{color,dimension,highlightedItem,metric,metricEnd,metricStart,name,order,scaleType}=areaOptions;if("time"===scaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}if(!metricEnd||!metricStart){const filteredTableData=getFilteredTableData(data);filteredTableData.transform=[...filteredTableData.transform??[],{type:"stack",groupby:[dimension],field:metric,sort:getTransformSort(order),as:[`${metric}0`,`${metric}1`]}]}if(isInteractive(areaOptions)||void 0!==highlightedItem){const areaHasPopover=hasPopover(areaOptions),areaHasTooltip=hasTooltip(areaOptions);data.push(getAreaHighlightedData(name,areaOptions.idKey,areaHasTooltip,areaHasPopover,isHighlightedByGroup(areaOptions))),areaHasPopover&&data.push({name:`${name}_selectedDataSeries`,source:constants.H5,transform:[{type:"filter",expr:`isValid(${constants.uW}) && ${constants.uW} === datum.${color}`}]})}addTooltipData(data,areaOptions,!1)})),getAreaHighlightedData=(name,idKey,hasTooltip,hasPopover,hasGroupId)=>{let expr="";return hasGroupId?expr+=`${name}_controlledHoveredGroup === datum.${name}_highlightGroupId`:(expr+=`isArray(${constants.qE}) && indexof(${constants.qE}, datum.${idKey}) > -1  || ${constants.qE} === datum.${idKey}`,hasTooltip&&(expr=`${name}_controlledHoveredId === datum.${idKey} || ${expr}`)),hasPopover&&(expr=`isValid(${constants.sk}) && ${constants.sk} === datum.${idKey} || !isValid(${constants.sk}) && ${expr}`),{name:`${name}_highlightedData`,source:constants.H5,transform:[{type:"filter",expr}]}},addSignals=(0,immer.jM)(((signals,areaOptions)=>{const{chartTooltips,name}=areaOptions;isInteractive(areaOptions)&&(addHighlightedSeriesSignalEvents(signals,name,1,chartTooltips[0]?.excludeDataKeys),areaOptions.highlightedItem&&addHighlightedItemEvents(signals,name),isHighlightedByGroup(areaOptions)?signals.push((name=>({name:`${name}_controlledHoveredGroup`,value:null,on:[{events:`@${name}:mouseout`,update:"null"}]}))(name)):signals.push((name=>({name:`${name}_controlledHoveredId`,value:null,on:[{events:`@${name}:mouseout`,update:"null"}]}))(name)),addTooltipSignals(signals,areaOptions))})),addHighlightedItemEvents=(signals,areaName)=>{const highlightedItemSignal=signals.find((signal=>signal.name===constants.qE));highlightedItemSignal&&(void 0===highlightedItemSignal.on&&(highlightedItemSignal.on=[]),highlightedItemSignal.on.push({events:`@${areaName}:mouseover`,update:"null"}))},setScales=(0,immer.jM)(((scales,{metric,metricEnd,metricStart,dimension,color,scaleType,padding})=>(addContinuousDimensionScale(scales,{scaleType,dimension,padding}),addFieldToFacetScaleDomain(scales,constants.Tj,color),metricEnd&&metricStart||(metricStart=`${metric}0`,metricEnd=`${metric}1`),addMetricScale(scales,[metricStart,metricEnd]),scales))),addAreaMarks=(0,immer.jM)(((marks,areaOptions)=>{const{chartPopovers,chartTooltips,color,colorScheme,dimension,highlightedItem,metric,name,opacity,scaleType}=areaOptions;let{metricStart,metricEnd}=areaOptions,isStacked=!1;return metricEnd&&metricStart||(isStacked=!0,metricStart=`${metric}0`,metricEnd=`${metric}1`),marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:color}},marks:[getAreaMark({chartPopovers,chartTooltips,color,colorScheme,dimension,isHighlightedByGroup:isHighlightedByGroup(areaOptions),isStacked,highlightedItem,metricStart,metricEnd,name,opacity,scaleType}),...getAnchorPointMark(areaOptions)]},...getSelectedAreaMarks({chartPopovers,name,scaleType,color,dimension,metricEnd,metricStart}),...getHoverMarks(areaOptions)),marks})),getAnchorPointMark=areaOptions=>{const{name,dimension,metric,scaleType}=areaOptions;return isInteractive(areaOptions)?[{name:`${name}_anchorPoint`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:`${metric}1`},stroke:{value:"transparent"},fill:{value:"transparent"}},update:{x:getX(scaleType,dimension)}}}]:[]},getHoverMarks=areaOptions=>{const{name,dimension,highlightedItem,metric,scaleType,color}=areaOptions;if(!isInteractive(areaOptions)&&void 0===highlightedItem)return[];const highlightMarks=[{name:`${name}_point`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:`${metric}1`},stroke:{scale:constants.Tj,field:color},fill:{signal:constants.b3}},update:{x:getX(scaleType,dimension)}}}];return(getTooltips(areaOptions).some((({highlightBy})=>"string"==typeof highlightBy&&["dimension","item"].includes(highlightBy)))||highlightedItem)&&highlightMarks.unshift({name:`${name}_rule`,type:"rule",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{value:0},y2:{signal:"height"},strokeWidth:{value:1}},update:{x:getX(scaleType,dimension)}}}),highlightMarks},getSelectedAreaMarks=({chartPopovers,name,scaleType,color,dimension,metricEnd,metricStart})=>chartPopovers.length?[{name:`${name}_selectBorder`,type:"area",from:{data:`${name}_selectedDataSeries`},interactive:!1,encode:{enter:{y:{scale:"yLinear",field:metricStart},y2:{scale:"yLinear",field:metricEnd},fill:{scale:constants.Tj,field:color},stroke:{value:themes.YA.light["static-blue"]},strokeWidth:{value:2},strokeJoin:{value:"round"}},update:{x:getX(scaleType,dimension)}}}]:[];var cjs=__webpack_require__("./node_modules/deepmerge/dist/cjs.js"),cjs_default=__webpack_require__.n(cjs);const getAxisAnnotationDetailData=(name,options,colorScheme)=>({name:`${name}_details`,values:options.map((option=>({...option,color:(0,themes.FH)(option.color,colorScheme)})))}),getAxisAnnotationAggregateData=(name,dataKey,color,colorScheme)=>({name:`${name}_aggregate`,source:constants.H5,transform:[{type:"filter",expr:`datum.${dataKey}`},{type:"flatten",fields:[dataKey],as:[`${name}_id`]},{type:"aggregate",groupby:[`${name}_id`],fields:["datetime","datetime"],ops:["min","max"]},{type:"formula",expr:"datum.max_datetime - datum.min_datetime",as:"width"},{type:"formula",expr:"datum.width / 2 + datum.min_datetime",as:"center"},{type:"aggregate",groupby:["center"],fields:["min_datetime","max_datetime","width",dataKey,dataKey],ops:["min","max","max","count","values"],as:["lower","upper","width","number","annotations"]},{type:"formula",expr:`datum.annotations[0].${name}_id`,as:"id"},{type:"lookup",from:`${name}_details`,key:"id",values:["color"],fields:["id"]},{type:"formula",expr:`datum.number > 1 || datum.color == null ? '${(0,themes.FH)(color,colorScheme)}' : datum.color`,as:"color"}]}),getAxisAnnotationSummaryData=(name,dataKey,color,colorScheme)=>({name:`${name}_summary`,source:constants.H5,transform:[{type:"filter",expr:`datum.${dataKey}`},{type:"flatten",fields:[dataKey],as:[`${name}_id`]},{type:"aggregate",groupby:[`${name}_id`]},{type:"aggregate",groupby:["center"],fields:[dataKey,dataKey],ops:["count","values"],as:["number","annotations"]},{type:"formula",expr:`datum.annotations[0].${name}_id`,as:"id"},{type:"lookup",from:`${name}_details`,key:"id",values:["color"],fields:["id"]},{type:"formula",expr:`datum.number > 1 || datum.color == null ? '${(0,themes.FH)(color,colorScheme)}' : datum.color`,as:"color"}]}),getAxisAnnotationRangeData=name=>({name:`${name}_range`,source:`${name}_aggregate`,transform:[{type:"filter",expr:`${name}_highlighted && datum.center == ${name}_highlighted.center && ${name}_highlighted.width > 0`}]}),getHighlightAxisAnnotationSignal=name=>({name:`${name}_highlighted`,value:null,on:[{events:`@${name}_icon:mouseover`,update:"datum"},{events:`@${name}_icon:mouseout`,update:`${name}_clicked`}]}),getClickAxisAnnotationSignal=name=>({name:`${name}_clicked`,value:{},on:[{events:{markname:`${name}_icon`,type:"mousedown",between:[{type:"mousedown"},{type:"mouseup"}]},update:"datum"},{events:"window:mouseup",update:"{}"}]}),getSelectAxisAnnotationSignal=name=>({name:`${name}_selected`,update:`${name}_clicked.center`}),getAxisAnnotationSummaryMarks=({chartPopovers,name,offset})=>({name:`${name}_group`,type:"group",from:{data:`${name}_summary`},marks:[{name:`${name}_icon`,type:"path",from:{data:`${name}_summary`},zindex:2,encode:{enter:{stroke:{value:"transparent"},strokeWidth:{value:2},cursor:getCursor(chartPopovers)},update:{path:{signal:`'${constants.gM}'`},fill:{field:"color"},xc:{signal:"width - 12"},yc:{signal:`height + ${offset}`}}}}]}),getAxisAnnotationSpanMarks=({chartPopovers,name,offset},scaleName)=>({name:`${name}_group`,type:"group",marks:[{name:`${name}_range`,type:"group",marks:[{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"lower",band:.5},y:{signal:`height + ${offset}`},width:{value:2},height:{value:-4},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}},{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"lower",band:.5},y:{signal:`height + ${offset}`},x2:{scale:scaleName,field:"upper",band:.5},height:{value:2},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}},{type:"rect",from:{data:`${name}_range`},encode:{update:{x:{scale:scaleName,field:"upper",band:.5},y:{signal:`height + ${offset} + 2`},width:{value:2},height:{value:-6},fill:{field:"color"},fillOpacity:{signal:`${name}_selected ? 1.0 : 0.2`}}}}]},{name:`${name}_icon`,type:"path",from:{data:`${name}_aggregate`},encode:{enter:{stroke:{value:"transparent"},strokeWidth:{value:2},cursor:getCursor(chartPopovers)},update:{path:{signal:`datum.width > 0 ? '${constants.jc}' : '${constants.gM}'`},fill:{field:"color"},xc:{scale:scaleName,field:"center",band:.5},yc:{signal:`height + ${offset}`},fillOpacity:{signal:`(${name}_selected && ${name}_selected != datum.center) ? 0.0 : 1.0`}}}}]}),getAxisAnnotationsFromChildren=({axisAnnotations,colorScheme,name:axisName,position,scaleType})=>"bottom"!==position?[]:axisAnnotations.map(((annotation,annotationIndex)=>applyDefaultAxisAnnotationOptions(annotation,annotationIndex,axisName,colorScheme,scaleType))),applyDefaultAxisAnnotationOptions=({chartPopovers=[],chartTooltips=[],name,format,offset=constants.yA,color=constants.K9,dataKey="annotations",options=[]},annotationIndex,axisName,colorScheme,scaleType)=>({chartPopovers,chartTooltips,color,colorScheme,dataKey,name:name??`${axisName}Annotation${annotationIndex}`,offset,options,axisName,format:format??("time"===scaleType?"span":"summary")});function getDualAxisScaleNames(baseScaleName){const primaryScaleName=`${baseScaleName}Primary`,secondaryScaleName=`${baseScaleName}Secondary`;return{primaryScale:primaryScaleName,secondaryScale:secondaryScaleName,primaryDomain:`${primaryScaleName}Domain`,secondaryDomain:`${secondaryScaleName}Domain`}}const getTextNumberFormat=(numberFormat,datumProperty="value",currencyLocale,currencyCode)=>{const test=`isNumber(datum['${datumProperty}'])`;if("shortNumber"===numberFormat)return[{test,signal:`formatShortNumber(datum['${datumProperty}'])`}];if("shortCurrency"===numberFormat)return[{test:`${test} && abs(datum['${datumProperty}']) >= 1000`,signal:`upper(replace(format(datum['${datumProperty}'], '$.3~s'), /(\\d+)G/, '$1B'))`},{test,signal:`format(datum['${datumProperty}'], '$')`}];if(currencyCode&&currencyLocale)return[{test,signal:`formatLocaleCurrency(datum, "${currencyLocale}", "${currencyCode}", "${numberFormat}")`}];const d3FormatSpecifier=(numberFormat=>{switch(numberFormat){case"currency":return"$,.2f";case"standardNumber":return",";default:return numberFormat}})(numberFormat);return[{test,signal:`format(datum['${datumProperty}'], '${d3FormatSpecifier}')`}]},getDefaultAxis=(axisOptions,scaleName)=>{const{grid,hideDefaultLabels,labelAlign,labelFontWeight,labelOrientation,tickCountLimit,position,scaleType,ticks,tickMinStep,title,vegaLabelAlign,vegaLabelBaseline,vegaLabelOffset,vegaLabelPadding}=axisOptions;return{scale:scaleName,orient:position,grid,ticks,tickCount:getTickCount(position,tickCountLimit,grid),tickMinStep:"linear"!==scaleType?void 0:tickMinStep,title,labelAngle:getLabelAngle(labelOrientation),labelFontWeight,labelOffset:getLabelOffset(labelAlign,scaleName,vegaLabelOffset),labelPadding:vegaLabelPadding,labels:!hideDefaultLabels,...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline),encode:{labels:{update:{text:getLabelFormat(axisOptions,scaleName)}}}}},getSecondaryTimeAxis=(scaleName,{granularity,grid,labelAlign,labelOrientation,position,ticks,title,vegaLabelAlign,vegaLabelBaseline})=>{const{tickCount}=getTimeLabelFormats(granularity);return{scale:scaleName,orient:position,grid,ticks,tickCount:scaleName.includes("Time")?tickCount:void 0,title,formatType:"time",labelAngle:getLabelAngle(labelOrientation),labelSeparation:12,...getSecondaryTimeAxisLabelFormatting(granularity,position),...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline)}},getSecondaryTimeAxisLabelFormatting=(granularity,position)=>{const{secondaryLabelFormat,primaryLabelFormat}=getTimeLabelFormats(granularity);return["left","right"].includes(position)?{format:`${primaryLabelFormat} ${secondaryLabelFormat}`,encode:{labels:{update:{text:{signal:"formatVerticalAxisTimeLabels(datum)"}}}}}:{format:secondaryLabelFormat}},getPrimaryTimeAxis=(scaleName,{granularity,labelAlign,labelOrientation,labelFontWeight,position,ticks,vegaLabelAlign,vegaLabelBaseline})=>{if(["left","right"].includes(position))return[];const{primaryLabelFormat,tickCount}=getTimeLabelFormats(granularity);return[{scale:scaleName,orient:position,format:primaryLabelFormat,tickCount:scaleName.includes("Time")?tickCount:void 0,formatType:"time",labelOverlap:"greedy",labelFontWeight,labelAngle:getLabelAngle(labelOrientation),...getLabelAnchorValues(position,labelOrientation,labelAlign,vegaLabelAlign,vegaLabelBaseline),encode:{labels:{enter:{dy:{value:(ticks?28:20)*("top"===position?-1:1)}},update:{text:{signal:"formatHorizontalTimeAxisLabels(datum)"}}}}}]},getScale=(scales,position)=>{const applicableScales=scales.filter((s=>"range"in s&&s.range===getRange(position)));let scale;return scale=applicableScales.length>1?scales.find((s=>s.name.includes("Trellis")))??applicableScales[0]:applicableScales[0],scale||(scale={name:getDefaultScaleNameFromPosition(position),type:"linear",range:getRange(position)},scales.push(scale),scale)},getRange=position=>"left"===position||"right"===position?"height":"width",getOpposingRange=position=>"left"===position||"right"===position?"width":"height",axisUtils_isVerticalAxis=position=>["left","right"].includes(position),getDefaultScaleNameFromPosition=position=>axisUtils_isVerticalAxis(position)?"yLinear":"xLinear",getDefaultOpposingScaleNameFromPosition=position=>axisUtils_isVerticalAxis(position)?"xLinear":"yLinear",getTickCount=(position,tickCountLimit,grid)=>{const range=["top","bottom"].includes(position)?"width":"height";return void 0!==tickCountLimit?{signal:`clamp(ceil(${range}/100), 2, ${tickCountLimit})`}:grid?{signal:`clamp(ceil(${range}/100), 2, 10)`}:void 0},hasSubLabels=({subLabels,labelOrientation})=>Boolean(subLabels.length&&"horizontal"===labelOrientation);const getTimeLabelFormats=granularity=>{switch(granularity){case"second":return{secondaryLabelFormat:":%S",primaryLabelFormat:"%-I:%M %p",tickCount:"second"};case"minute":return{secondaryLabelFormat:"%-I:%M %p",primaryLabelFormat:"%b %-d",tickCount:"minute"};case"hour":return{secondaryLabelFormat:"%-I %p",primaryLabelFormat:"%b %-d",tickCount:"hour"};case"day":default:return{secondaryLabelFormat:"%-d",primaryLabelFormat:"%b",tickCount:"day"};case"week":return{secondaryLabelFormat:"%-d",primaryLabelFormat:"%b",tickCount:"week"};case"month":return{secondaryLabelFormat:"%b",primaryLabelFormat:"%Y",tickCount:"month"};case"quarter":return{secondaryLabelFormat:"Q%q",primaryLabelFormat:"%Y",tickCount:{interval:"month",step:3}};case"year":return{secondaryLabelFormat:"%Y",primaryLabelFormat:"",tickCount:"year"}}},getControlledLabelAnchorValues=(position,labelOrientaion,labelAlign)=>labelAlign?getLabelAnchor(position,labelOrientaion,labelAlign):{align:void 0,baseline:void 0},getLabelAnchorValues=(position,labelOrientaion,labelAlign,vegaLabelAlign,vegaLabelBaseline)=>{const{align,baseline}=getLabelAnchor(position,labelOrientaion,labelAlign);return{labelAlign:vegaLabelAlign??align,labelBaseline:vegaLabelBaseline??baseline}},getLabelAnchor=(position,labelOrientaion,labelAlign)=>{let align,baseline;if(labelIsParallelToAxis(position,labelOrientaion)){align={start:"left",center:"center",end:"right"}[labelAlign],baseline=["top","left"].includes(position)?"bottom":"top"}else{baseline={start:"top",center:"middle",end:"bottom"}[labelAlign],align=["bottom","left"].includes(position)?"right":"left"}return{align,baseline}},labelIsParallelToAxis=(position,labelOrientaion)=>(["top","bottom"].includes(position)?"horizontal":"vertical")===labelOrientaion,getLabelAngle=labelOrientaion=>"horizontal"===labelOrientaion?0:270,getLabelOffset=(labelAlign,scaleName,vegaLabelOffset)=>{if(void 0!==vegaLabelOffset)return vegaLabelOffset;switch(labelAlign){case"start":return{signal:`bandwidth('${scaleName}') / -2`};case"end":return{signal:`bandwidth('${scaleName}') / 2`};default:return}},getLabelFormat=({labelFormat,labelOrientation,numberFormat,position,truncateLabels,currencyLocale,currencyCode},scaleName)=>"percentage"===labelFormat?[{test:"isNumber(datum.value)",signal:"format(datum.value, '~%')"},{signal:"datum.value"}]:"duration"===labelFormat?{signal:"formatTimeDurationLabels(datum)"}:[...getTextNumberFormat(numberFormat,void 0,currencyLocale,currencyCode),...truncateLabels&&scaleName.includes("Band")&&labelIsParallelToAxis(position,labelOrientation)?[{signal:'truncateText(datum.value, bandwidth("xBand")/(1- paddingInner), "normal", 14)'}]:[{signal:"datum.value"}]],getAxisLabelsEncoding=(labelAlign,labelFontWeight,labelKey,labelOrientation,position,signalName)=>({update:{text:[{test:`indexof(pluck(${signalName}, 'value'), datum.value) !== -1`,signal:`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].${labelKey}`},{signal:"datum.value"}],fontWeight:[{test:`indexof(pluck(${signalName}, 'value'), datum.value) !== -1 && ${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].fontWeight`,signal:`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)].fontWeight`},{value:labelFontWeight}],...getEncodedLabelAnchor(position,signalName,labelOrientation,labelAlign)}}),getEncodedLabelAnchor=(position,signalName,labelOrientation,defaultLabelAlign)=>{const baseTestString=`indexof(pluck(${signalName}, 'value'), datum.value) !== -1 && ${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)]`,baseSignalString=`${signalName}[indexof(pluck(${signalName}, 'value'), datum.value)]`,{align,baseline}=getLabelAnchor(position,labelOrientation,defaultLabelAlign);return{align:[{test:`${baseTestString}.align`,signal:`${baseSignalString}.align`},{value:align}],baseline:[{test:`${baseTestString}.baseline`,signal:`${baseSignalString}.baseline`},{value:baseline}]}},getReferenceLines=axisOptions=>axisOptions.referenceLines.map(((referenceLine,index)=>applyReferenceLineOptionDefaults(referenceLine,axisOptions,index))),applyReferenceLineOptionDefaults=(options,axisOptions,index)=>({...options,color:options.color||"gray-800",colorScheme:axisOptions.colorScheme,iconColor:options.iconColor||constants.Kb,labelColor:options.labelColor||constants.Kb,labelFontWeight:options.labelFontWeight??constants.m7,layer:options.layer??"front",name:`${axisOptions.name}ReferenceLine${index}`}),scaleTypeSupportsReferenceLines=scaleType=>Boolean(scaleType&&["band","linear","point","time","utc"].includes(scaleType)),getPositionEncoding=({scaleType},{value,position},scaleName)=>{const signalValue="string"==typeof value?`'${value}'`:value,halfInnerPaddingFormula=`paddingInner * bandwidth('${scaleName}') / (2 * (1 - paddingInner))`;return"band"===scaleType?"before"===position?{signal:`scale('${scaleName}', ${signalValue}) - ${halfInnerPaddingFormula}`}:"after"===position?{signal:`scale('${scaleName}', ${signalValue}) + bandwidth('${scaleName}') + ${halfInnerPaddingFormula}`}:{signal:`scale('${scaleName}', ${signalValue}) + bandwidth('${scaleName}') / 2`}:{scale:scaleName,value}},getReferenceLineRuleMark=({position,ticks},{color,colorScheme,name},positionEncoding)=>{const startOffset=ticks?9:0,positionOptions={top:{x:positionEncoding,y:{value:-startOffset},y2:{signal:"height"}},bottom:{x:positionEncoding,y:{value:0},y2:{signal:`height + ${startOffset}`}},left:{x:{value:-startOffset},x2:{signal:"width"},y:positionEncoding},right:{x:{value:0},x2:{signal:`width + ${startOffset}`},y:positionEncoding}};return{name,type:"rule",interactive:!1,encode:{enter:{stroke:{value:(0,themes.FH)(color,colorScheme)}},update:{...positionOptions[position]}}}},getAdditiveMarkPositionOptions=(offset,positionEncoding,horizontalOffset)=>({top:{x:positionEncoding,y:{value:-offset}},bottom:{x:positionEncoding,y:{signal:`height + ${offset}`}},left:{x:{value:-offset},y:{...positionEncoding,offset:horizontalOffset}},right:{x:{signal:`width + ${offset}`},y:{...positionEncoding,offset:horizontalOffset}}}),getReferenceLineSymbolMark=({colorScheme,position},{icon,iconColor,name},positionEncoding)=>{if(!icon)return[];const positionOptions=getAdditiveMarkPositionOptions(24,positionEncoding);return[{name:`${name}_symbol`,type:"symbol",encode:{enter:{shape:{value:getPathFromIcon(icon)},size:{value:324},fill:{value:(0,themes.FH)(iconColor,colorScheme)}},update:{...positionOptions[position]}}}]},getReferenceLineTextMark=(axisOptions,referenceLineOptions,positionEncoding)=>{const{label,name}=referenceLineOptions;return label?[{name:`${name}_label`,type:"text",encode:{...getReferenceLineLabelsEncoding(axisOptions,{...referenceLineOptions,label},positionEncoding)}}]:[]},getReferenceLineLabelsEncoding=({position},{colorScheme,icon,label,labelColor,labelFontWeight},positionEncoding)=>{const{verticalOffset,horizontalOffset}=((position,icon)=>{const isVertical=axisUtils_isVerticalAxis(position);let verticalOffset=isVertical?40:28,horizontalOffset=isVertical?4:5;return icon&&(verticalOffset+=isVertical?25:20,isVertical||(horizontalOffset+=25,verticalOffset+=2)),{verticalOffset,horizontalOffset}})(position,icon),positionOptions=getAdditiveMarkPositionOptions(verticalOffset,positionEncoding,horizontalOffset);return{update:{text:[{value:label}],fontWeight:[{value:labelFontWeight}],fill:{value:(0,themes.FH)(labelColor,colorScheme)},...getEncodedLabelBaselineAlign(position),...positionOptions[position]}}},getEncodedLabelBaselineAlign=position=>{switch(position){case"top":case"bottom":return{align:{value:"center"}};case"left":case"right":return{baseline:{value:"center"}}}},isTrellisedChart=spec=>/[xy]TrellisGroup/g.test(JSON.stringify(spec)),getTrellisAxisOptions=scaleName=>{let trellisAxisOptions={};if(scaleName.includes("TrellisBand")){const labelOffsetSignal=`bandwidth('${scaleName}') / -2`,axisType=scaleName.startsWith("x")?"x":"y";trellisAxisOptions={position:"x"===axisType?"top":"left",labelFontWeight:"bold",labelAlign:void 0,title:void 0,vegaLabelAlign:"left",vegaLabelBaseline:"bottom",vegaLabelOffset:"x"===axisType?{signal:labelOffsetSignal}:{signal:`${labelOffsetSignal} - 8`},vegaLabelPadding:"x"===axisType?8:0}}return trellisAxisOptions},getTrellisGroupProperties=groupMark=>{const trellisScaleName=`${(groupMark.name??"x")[0]}TrellisBand`,fromFacet=groupMark.from;return{facetGroupBy:fromFacet.facet.groupby,facetName:fromFacet.facet.name,trellisScaleName}},addAxis=(0,immer.jM)(((spec,{name,axisAnnotations=[],baseline=!1,baselineOffset=0,colorScheme=constants.gb,granularity=constants.HJ,grid=!1,hideDefaultLabels=!1,index=0,labelAlign=constants.hg,labelFontWeight=constants.m7,labelOrientation=constants.uv,labels=[],numberFormat="shortNumber",position,range,referenceLines=[],subLabels=[],ticks=!1,...options})=>{const scale=getScale(spec.scales??[],position),scaleName=name||scale.name,scaleType=scale.type,opposingScaleType=((scales,position)=>{let scale=scales.find((s=>"range"in s&&s.range===getOpposingRange(position)));return scale||(scale={name:getDefaultOpposingScaleNameFromPosition(position),type:"linear",range:getOpposingRange(position)},scales.push(scale)),scale.type})(spec.scales??[],position),axisOptions={axisAnnotations,baseline,baselineOffset,colorScheme,granularity,grid,hideDefaultLabels,index,labelAlign,labelFontWeight,labelOrientation,labels,name:`axis${index}`,numberFormat,position,range,referenceLines,subLabels,ticks,scaleType:scaleType??"linear",...options},dualMetricAxis=spec.signals?.some((signal=>"firstRscSeriesId"===signal.name));spec.data=addAxisData(spec.data??[],{...axisOptions,scaleType:scaleType??"linear"}),spec.signals=addAxisSignals(spec.signals??[],axisOptions),!range||"linear"!==scaleType&&"time"!==scaleType||(scale.domain=range);const usermeta=spec.usermeta;return spec.axes=addAxes(spec.axes??[],{...axisOptions,scaleName,opposingScaleType,usermeta,grid:axisOptions.grid&&!isTrellisedChart(spec),dualMetricAxis}),spec.marks=addAxesMarks(spec.marks??[],{...axisOptions,usermeta,scaleName,opposingScaleType,dualMetricAxis}),spec})),addAxisData=(0,immer.jM)(((data,options)=>{getAxisAnnotationsFromChildren(options).forEach((annotationOptions=>{((data,{name,dataKey,color,colorScheme,options,format})=>{data.push(getAxisAnnotationDetailData(name,options,colorScheme)),"summary"===format?data.push(getAxisAnnotationSummaryData(name,dataKey,color,colorScheme)):data.push(getAxisAnnotationAggregateData(name,dataKey,color,colorScheme),getAxisAnnotationRangeData(name))})(data,annotationOptions)}))})),addAxisSignals=(0,immer.jM)(((signals,options)=>{const{name,labels,position,subLabels,labelOrientation}=options;labels?.length&&signals.push(getGenericValueSignal(`${name}_labels`,getLabelSignalValue(labels,position,labelOrientation))),hasSubLabels(options)&&signals.push(getGenericValueSignal(`${name}_subLabels`,subLabels.map((label=>({...label,...getControlledLabelAnchorValues(position,labelOrientation,label.align)})))));getAxisAnnotationsFromChildren(options).forEach((annotationOptions=>{((signals,{name,format})=>{"span"===format&&signals.push(getHighlightAxisAnnotationSignal(name),getClickAxisAnnotationSignal(name),getSelectAxisAnnotationSignal(name))})(signals,annotationOptions)}))})),getLabelSignalValue=(labels,position,labelOrientation)=>labels.map((label=>{if("object"==typeof label)return{...label,...getControlledLabelAnchorValues(position,labelOrientation,label.align)}})).filter(Boolean);function addDualMetricAxisConfig(axis,isPrimaryMetricAxis,scaleName,colorScheme=constants.gb){const scaleNames=getDualAxisScaleNames(scaleName),{primaryScale,secondaryScale}=scaleNames;isPrimaryMetricAxis?(axis.scale=primaryScale,function applyPrimaryMetricAxisEncodings(axis,colorScheme=constants.gb){const defaultFontColor=themes.YA[colorScheme][constants.Kb],primaryAxisFillRules=[{test:`length(domain('${constants.Tj}')) -1 === 1`,signal:`scale('${constants.Tj}', ${constants.kw})`},{value:defaultFontColor}],primaryAxisFillOpacityRules=[{test:`${constants.xA} === ${constants.I2}`,value:1/constants.ux}],encodings={labels:{update:{fill:primaryAxisFillRules,fillOpacity:primaryAxisFillOpacityRules}},title:{update:{fill:primaryAxisFillRules,fillOpacity:primaryAxisFillOpacityRules}}};axis.encode?axis.encode=cjs_default()(axis.encode,encodings):axis.encode=encodings}(axis,colorScheme)):(axis.scale=secondaryScale,function applySecondaryMetricAxisEncodings(axis){const secondaryAxisFillRules=[{signal:`scale('${constants.Tj}', ${constants.I2})`}],secondaryAxisFillOpacityRules=[{test:`isValid(${constants.xA}) && ${constants.xA} !== ${constants.I2}`,value:1/constants.ux}],encodings={labels:{enter:{fill:secondaryAxisFillRules},update:{fillOpacity:secondaryAxisFillOpacityRules}},title:{enter:{fill:secondaryAxisFillRules},update:{fillOpacity:secondaryAxisFillOpacityRules}}};axis.encode?axis.encode=cjs_default()(axis.encode,encodings):axis.encode=encodings}(axis))}const addAxes=(0,immer.jM)(((axes,{scaleName,opposingScaleType,dualMetricAxis,...axisOptions})=>{const newAxes=[];axisOptions={...axisOptions,...getTrellisAxisOptions(scaleName)};const{baseline,colorScheme,usermeta,labelAlign,labelFontWeight,labelFormat,labelOrientation,name,position}=axisOptions;if("time"===labelFormat)newAxes.push(...((scaleName,axisOptions)=>[getSecondaryTimeAxis(scaleName,axisOptions),...getPrimaryTimeAxis(scaleName,axisOptions)])(scaleName,axisOptions));else{const axis=getDefaultAxis(axisOptions,scaleName);if(axisOptions.labels.length){const labels=axisOptions.labels,signalName=`${name}_labels`;axis.values=labels.map((label=>(label=>"object"==typeof label?label.value:label)(label))),axis.encode={labels:getAxisLabelsEncoding(labelAlign,labelFontWeight,"label",labelOrientation,position,signalName)}}if(hasSubLabels(axisOptions)){axis.titlePadding=24;const subLabelAxis=((axisOptions,scaleName)=>{const{labelAlign,labelFontWeight,labelOrientation,name,position,ticks}=axisOptions,signalName=`${name}_subLabels`,subLabelValues=axisOptions.subLabels.map((label=>label.value));let subLabelAxis=getDefaultAxis(axisOptions,scaleName);return subLabelAxis={...subLabelAxis,domain:!1,domainWidth:void 0,grid:!1,labelPadding:ticks?32:24,ticks:!1,title:void 0,values:subLabelValues.length?subLabelValues:void 0,encode:{labels:{...getAxisLabelsEncoding(labelAlign,labelFontWeight,"subLabel",labelOrientation,position,signalName)}}},subLabelAxis})(axisOptions,scaleName);handleDualMetricAxisConfig({dualMetricAxis,axis:subLabelAxis,usermeta,scaleName,colorScheme,position,incrementMetricAxisCount:!1}),newAxes.push(subLabelAxis)}handleDualMetricAxisConfig({dualMetricAxis,axis,usermeta,scaleName,colorScheme,position,incrementMetricAxisCount:!0}),newAxes.unshift(axis)}if("linear"!==opposingScaleType&&(newAxes[0]=function setAxisBaseline(axis,baseline=!1){return{...axis,domain:baseline,domainWidth:2}}(newAxes[0],baseline)),scaleTypeSupportsReferenceLines(axisOptions.scaleType)){getReferenceLines(axisOptions).forEach((referenceLineOptions=>{const{label:referenceLineLabel,icon,value,position:linePosition}=referenceLineOptions,text=newAxes[0].encode?.labels?.update?.text;!icon&&!referenceLineLabel||!text||!Array.isArray(text)||linePosition&&"center"!==linePosition||text.unshift({test:`abs(scale('${scaleName}', ${value}) - scale('${scaleName}', datum.value)) < 30`,value:""})}))}getAxisAnnotationsFromChildren(axisOptions).forEach((annotationOptions=>{((axes,{offset},scaleName)=>{axes.push({scale:scaleName,orient:"bottom",values:[],offset})})(newAxes,annotationOptions,scaleName)})),axes.push(...newAxes)})),handleDualMetricAxisConfig=({dualMetricAxis,axis,usermeta,scaleName,colorScheme,position,incrementMetricAxisCount})=>{dualMetricAxis&&function getIsMetricAxis(position,chartOrientation){return"vertical"===chartOrientation?axisUtils_isVerticalAxis(position):!axisUtils_isVerticalAxis(position)}(position,usermeta?.chartOrientation??"vertical")&&(usermeta.metricAxisCount||(usermeta.metricAxisCount=0),addDualMetricAxisConfig(axis,0===usermeta.metricAxisCount,scaleName,colorScheme),incrementMetricAxisCount&&usermeta.metricAxisCount++)},addAxesMarks=(0,immer.jM)(((marks,options)=>{const{baseline,baselineOffset,opposingScaleType,position,scaleName,scaleType,usermeta}=options;if(scaleTypeSupportsReferenceLines(scaleType)){const{back,front}=((axisOptions,scaleName)=>{const referenceLineMarks={back:[],front:[]},referenceLines=getReferenceLines(axisOptions);for(const referenceLine of referenceLines){const{layer}=referenceLine,positionEncoding=getPositionEncoding(axisOptions,referenceLine,scaleName);referenceLineMarks[layer].push(getReferenceLineRuleMark(axisOptions,referenceLine,positionEncoding),...getReferenceLineSymbolMark(axisOptions,referenceLine,positionEncoding),...getReferenceLineTextMark(axisOptions,referenceLine,positionEncoding))}return referenceLineMarks})(options,scaleName);marks.unshift(...back),marks.push(...front)}const trellisGroupMark=marks.find((mark=>mark.name?.includes("Trellis"))),isTrellised=Boolean(trellisGroupMark);baseline&&"linear"===opposingScaleType&&function addBaseline(marks,baselineOffset,position,trellisGroupMark){const baselineRule=((baselineOffset,position)=>{const orientation=axisUtils_isVerticalAxis(position)?"y":"x";return{name:`${orientation}Baseline`,description:`${orientation}Baseline`,type:"rule",interactive:!1,encode:{update:{...{x:{x:{value:0},x2:{signal:"width"},y:{scale:"yLinear",value:baselineOffset}},y:{x:{scale:"xLinear",value:baselineOffset},y:{value:0},y2:{signal:"height"}}}[orientation]}}}})(baselineOffset,position);trellisGroupMark&&"marks"in trellisGroupMark?0===baselineOffset?trellisGroupMark.marks?.push(baselineRule):trellisGroupMark.marks?.unshift(baselineRule):0===baselineOffset?marks.push(baselineRule):marks.unshift(baselineRule)}(marks,baselineOffset,position,trellisGroupMark),isTrellised&&function addAxesToTrellisGroup(options,trellisGroupMark,scaleName,usermeta){const trellisOrientation=trellisGroupMark.name?.startsWith("x")?"horizontal":"vertical",axisOrientation="bottom"===options.position||"top"===options.position?"horizontal":"vertical",hideDefaultLabels=options.hideDefaultLabels||trellisOrientation!==axisOrientation;let scaleType=options.scaleType;if(trellisOrientation===axisOrientation){const scale=getScale(trellisGroupMark.scales??[],options.position);scaleName=scale.name,scaleType=scale.type??"linear"}else options.title=void 0;let newAxes=addAxes([],{...options,hideDefaultLabels,scaleName,scaleType,dualMetricAxis:!1,usermeta});newAxes=((axes,trellisGroupMark)=>{const{facetName,facetGroupBy,trellisScaleName}=getTrellisGroupProperties(trellisGroupMark);return axes.map((axis=>axis.title?{...axis,encode:{...axis.encode,title:{update:{opacity:[{test:`info(domain('${trellisScaleName}')[0] === data('${facetName}')[0].${facetGroupBy})`,value:1},{value:0}]}}}}:axis))})(newAxes,trellisGroupMark),trellisGroupMark.axes=[...trellisGroupMark.axes??[],...newAxes]}(options,trellisGroupMark,scaleName,usermeta);getAxisAnnotationsFromChildren(options).forEach((annotationOptions=>{((marks,axisAnnotationOptions,scaleName)=>{const{format}=axisAnnotationOptions;"summary"===format?marks.push(getAxisAnnotationSummaryMarks(axisAnnotationOptions)):marks.push(getAxisAnnotationSpanMarks(axisAnnotationOptions,scaleName))})(marks,annotationOptions,scaleName)}))}));const getPopovers=(chartPopovers,markName)=>chartPopovers.map((chartPopover=>applyPopoverPropDefaults(chartPopover,markName))),applyPopoverPropDefaults=({UNSAFE_highlightBy="item",...options},markName)=>({UNSAFE_highlightBy,markName,...options}),addPopoverData=(data,markOptions,addHighlightedData=!0)=>{const popovers=getPopovers(markOptions.chartPopovers,markOptions.name);for(const{UNSAFE_highlightBy,markName}of popovers){const filteredTable=getFilteredTableData(data);filteredTable.transform||(filteredTable.transform=[]),"dimension"===UNSAFE_highlightBy&&"donut"!==markOptions.markType?filteredTable.transform.push(chartPopoverUtils_getGroupIdTransform([markOptions.dimension],markName)):"series"===UNSAFE_highlightBy?filteredTable.transform.push(chartPopoverUtils_getGroupIdTransform([constants.y4],markName)):Array.isArray(UNSAFE_highlightBy)?filteredTable.transform.push(chartPopoverUtils_getGroupIdTransform(UNSAFE_highlightBy,markName)):filteredTable.transform.push(chartPopoverUtils_getGroupIdTransform([markOptions.idKey],markName)),addHighlightedData&&data.push(getMarkSelectedData(markName))}},chartPopoverUtils_getGroupIdTransform=(highlightBy,markName)=>({type:"formula",as:`${markName}_selectedGroupId`,expr:highlightBy.map((facet=>`datum.${facet}`)).join(' + " | " + ')}),getMarkSelectedData=markName=>({name:`${markName}_selectedData`,source:constants.H5,transform:[{type:"filter",expr:`${constants.U3} === datum.${markName}_selectedGroupId`}]}),getTrendlines=markOptions=>markOptions.trendlines.map(((trendline,index)=>applyTrendlinePropDefaults(markOptions,trendline,index))),applyTrendlinePropDefaults=(markOptions,{chartTooltips=[],color,dimensionExtent,dimensionRange=[null,null],displayOnHover=!1,highlightRawPoint=!1,lineType="dashed",lineWidth="M",method="linear",opacity=1,orientation="horizontal",trendlineAnnotations=[],...opts},index)=>{const dimensionScaleType=getTrendlineScaleType(markOptions,orientation),isDimensionNormalized="time"===dimensionScaleType&&isRegressionMethod(method)&&"horizontal"===orientation,{trendlineDimension,trendlineMetric}=getTrendlineDimensionMetric(markOptions.dimension,markOptions.metric,orientation,isDimensionNormalized),trendlineColor=color?{value:color}:getTrendlineColorFromMarkOptions(markOptions.color);return{chartTooltips,colorScheme:markOptions.colorScheme,displayOnHover,dimensionExtent:dimensionExtent??dimensionRange,dimensionRange,dimensionScaleType,highlightRawPoint,isDimensionNormalized,lineType,lineWidth,method,metric:constants.AZ,name:`${markOptions.name}Trendline${index}`,opacity,orientation,trendlineAnnotations,trendlineColor,trendlineDimension,trendlineMetric,...opts}},getTrendlineColorFromMarkOptions=color=>Array.isArray(color)?color[0]:color,getTrendlineLineTypeFromMarkOptions=lineType=>Array.isArray(lineType)?lineType[0]:lineType,getTrendlineDimensionMetric=(dimension,metric,orientation,isDimensionNormalized)=>"horizontal"===orientation?{trendlineDimension:normalizeTrendlineDimensionName(dimension,isDimensionNormalized),trendlineMetric:metric}:{trendlineDimension:metric,trendlineMetric:dimension},normalizeTrendlineDimensionName=(dimension,isDimensionNormalized)=>isDimensionNormalized?`${dimension}Normalized`:dimension,isAggregateMethod=method=>["average","median"].includes(method),isRegressionMethod=method=>isPolynomialMethod(method)||["exponential","logarithmic","power"].includes(method),isWindowMethod=method=>method.startsWith("movingAverage-"),isPolynomialMethod=method=>method.startsWith("polynomial-")||["linear","quadratic"].includes(method),getPolynomialOrder=method=>{switch(method){case"linear":return 1;case"quadratic":return 2}const order=parseInt(method.split("-")[1]);if(order<1)throw new Error(`Invalid polynomial order: ${order}, order must be an interger greater than 0`);return order},getRegressionExtent=(dimensionExtent,name,isNormalized)=>{const extentName=`${name}_extent`;return{signal:`[${dimensionExtent.map(((value,i)=>{switch(value){case null:return`${extentName}[${i}]`;case"domain":return`${extentName}[${i}] ${0===i?"-":"+"} (${extentName}[1] - ${extentName}[0]) * 0.3`;default:return isNormalized?`(${value} - data('${constants.H5}')[0].datetimeMin + ${constants.ec}) / ${constants.ec}`:value}})).join(", ")}]`}},getTrendlineScaleType=(markOptions,trendlineOrientation)=>"vertical"===trendlineOrientation?"linear":"scaleType"in markOptions?markOptions.scaleType:markOptions.dimensionScaleType,getAggregateTransform=(markOptions,{method,trendlineDimension,trendlineMetric},isHighResolutionData)=>{const{color,lineType}=markOptions,{facets}=getFacetsFromOptions({color,lineType}),operations={average:"mean",median:"median"};return isHighResolutionData?{type:"aggregate",groupby:facets,ops:[operations[method],"min","max"],fields:[trendlineMetric,trendlineDimension,trendlineDimension],as:[constants.AZ,`${trendlineDimension}Min`,`${trendlineDimension}Max`]}:{type:"joinaggregate",groupby:facets,ops:[operations[method]],fields:[trendlineMetric],as:[constants.AZ]}},getRegressionTransform=(markOptions,trendlineOptions,isHighResolutionData)=>{const{color,lineType}=markOptions,{dimensionExtent,isDimensionNormalized,method,name,trendlineDimension,trendlineMetric}=trendlineOptions,{facets}=getFacetsFromOptions({color,lineType});let regressionMethod,order;switch(method){case"exponential":regressionMethod="exp";break;case"logarithmic":regressionMethod="log";break;case"power":regressionMethod="pow";break;default:order=getPolynomialOrder(method),regressionMethod="poly"}return{type:"regression",method:regressionMethod,order,groupby:facets,x:trendlineDimension,y:trendlineMetric,as:isHighResolutionData?[trendlineDimension,constants.AZ]:void 0,params:!isHighResolutionData,extent:isHighResolutionData?getRegressionExtent(dimensionExtent,name,isDimensionNormalized):void 0}},getWindowTransform=(markOptions,{method,trendlineMetric})=>{const frameWidth=parseInt(method.split("-")[1]),{color,lineType}=markOptions,{facets}=getFacetsFromOptions({color,lineType});if(isNaN(frameWidth)||frameWidth<1)throw new Error(`Invalid moving average frame width: ${frameWidth}, frame width must be an integer greater than 0`);return{type:"window",ops:["mean"],groupby:facets,fields:[trendlineMetric],as:[constants.AZ],frame:[frameWidth-1,0]}},getNormalizedDimensionTransform=dimension=>[{type:"joinaggregate",fields:[dimension],as:[`${dimension}Min`],ops:["min"]},{type:"formula",expr:`(datum.${dimension} - datum.${dimension}Min + ${constants.ec}) / ${constants.ec}`,as:`${dimension}Normalized`}],getRegressionExtentTransform=(dimension,name)=>({type:"extent",field:dimension,signal:`${name}_extent`}),getTrendlineDimensionRangeTransforms=(dimension,dimensionRange)=>{const filterExpressions=[];return null!==dimensionRange[0]&&filterExpressions.push(`datum.${dimension} >= ${dimensionRange[0]}`),null!==dimensionRange[1]&&filterExpressions.push(`datum.${dimension} <= ${dimensionRange[1]}`),filterExpressions.length?[{type:"filter",expr:filterExpressions.join(" && ")}]:[]},getTrendlineParamFormulaTransforms=(trendlineDimension,method)=>{let expr="";if(isPolynomialMethod(method)){const order=getPolynomialOrder(method);expr=["datum.coef[0]",...Array(order).fill(0).map(((_e,i)=>`datum.coef[${i+1}] * pow(datum.${trendlineDimension}, ${i+1})`))].join(" + ")}else"exponential"===method?expr=`datum.coef[0] + exp(datum.coef[1] * datum.${trendlineDimension})`:"logarithmic"===method?expr=`datum.coef[0] + datum.coef[1] * log(datum.${trendlineDimension})`:"power"===method&&(expr=`datum.coef[0] * pow(datum.${trendlineDimension}, datum.coef[1])`);return expr?[{type:"formula",expr,as:constants.AZ}]:[]},getTrendlineParamLookupTransform=({color,lineType},{name})=>{const{facets}=getFacetsFromOptions({color,lineType});return{type:"lookup",from:`${name}_params`,key:"keys",fields:facets,values:["coef"]}},addTrendlineData=(data,markOptions)=>{data.push(...getTrendlineData(markOptions));const tableData=getTableData(data);tableData.transform=addTableDataTransforms(tableData.transform??[],markOptions)},getTrendlineData=markOptions=>{const data=[],{color,idKey,lineType,name:markName}=markOptions,trendlines=getTrendlines(markOptions),concatenatedTrendlineData={name:`${markName}_allTrendlineData`,source:[]};for(const trendlineOptions of trendlines){const{displayOnHover,method,name}=trendlineOptions,{facets}=getFacetsFromOptions({color,lineType});isRegressionMethod(method)?data.push(...getRegressionTrendlineData(markOptions,trendlineOptions,facets)):isAggregateMethod(method)?data.push(...getAggregateTrendlineData(markOptions,trendlineOptions,facets)):isWindowMethod(method)&&data.push(getWindowTrendlineData(markOptions,trendlineOptions)),displayOnHover&&data.push(getTrendlineDisplayOnHoverData(name,method)),isInteractive(trendlineOptions)&&concatenatedTrendlineData.source.push(`${name}_data`)}return trendlines.some((trendline=>isInteractive(trendline)))&&(data.push(concatenatedTrendlineData),data.push(getHighlightTrendlineData(markName,idKey))),data},getAggregateTrendlineData=(markOptions,trendlineOptions,facets)=>{const data=[],{dimensionRange,name,trendlineDimension}=trendlineOptions,dimensionRangeTransforms=getTrendlineDimensionRangeTransforms(trendlineDimension,dimensionRange);return data.push({name:`${name}_highResolutionData`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineOptions.excludeDataKeys),...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markOptions,trendlineOptions,!0),...getSeriesIdTransform(facets)]}),isInteractive(trendlineOptions)&&data.push({name:`${name}_data`,source:constants.H5,transform:[...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markOptions,trendlineOptions,!1)]}),data},getRegressionTrendlineData=(markOptions,trendlineOptions,facets)=>{const data=[],{dimension,metric}=markOptions,{dimensionRange,method,name,orientation,trendlineDimension}=trendlineOptions,{trendlineDimension:standardTrendlineDimension}=getTrendlineDimensionMetric(dimension,metric,orientation,!1),dimensionRangeTransforms=getTrendlineDimensionRangeTransforms(standardTrendlineDimension,dimensionRange);return data.push({name:`${name}_highResolutionData`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineOptions.excludeDataKeys),...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markOptions,trendlineOptions,!0),...getSeriesIdTransform(facets)]}),isInteractive(trendlineOptions)&&data.push({name:`${name}_params`,source:constants.H5,transform:[...dimensionRangeTransforms,...getTrendlineStatisticalTransforms(markOptions,trendlineOptions,!1)]},{name:`${name}_data`,source:constants.H5,transform:[...dimensionRangeTransforms,getTrendlineParamLookupTransform(markOptions,trendlineOptions),...getTrendlineParamFormulaTransforms(trendlineDimension,method)]}),data},getWindowTrendlineData=(markOptions,trendlineOptions)=>({name:`${trendlineOptions.name}_data`,source:constants.H5,transform:[...getExcludeDataKeyTransforms(trendlineOptions.excludeDataKeys),...getTrendlineStatisticalTransforms(markOptions,trendlineOptions,!1),...getTrendlineDimensionRangeTransforms(markOptions.dimension,trendlineOptions.dimensionRange)]}),getHighlightTrendlineData=(markName,idKey)=>({name:`${markName}Trendline_highlightedData`,source:`${markName}_allTrendlineData`,transform:[{type:"filter",expr:`${constants.sk} === datum.${idKey} || !isValid(${constants.sk}) && (isArray(${constants.qE}) && indexof(${constants.qE}, datum.${idKey}) || ${constants.qE} === datum.${idKey})`}]}),getTrendlineStatisticalTransforms=(markOptions,trendlineOptions,isHighResolutionData)=>{const{method,trendlineDimension}=trendlineOptions;return isAggregateMethod(method)?[getAggregateTransform(markOptions,trendlineOptions,isHighResolutionData)]:isRegressionMethod(method)?[getRegressionTransform(markOptions,trendlineOptions,isHighResolutionData)]:isWindowMethod(method)?[(dimension=trendlineDimension,{type:"collect",sort:{field:dimension}}),getWindowTransform(markOptions,trendlineOptions)]:[];var dimension},addTableDataTransforms=(0,immer.jM)(((transforms,markOptions)=>{const{dimension,metric}=markOptions,trendlines=getTrendlines(markOptions);for(const{isDimensionNormalized,method,name,orientation,trendlineDimension}of trendlines)if(isRegressionMethod(method)){const{trendlineDimension:standardTrendlinDimension}=getTrendlineDimensionMetric(dimension,metric,orientation,!1);isDimensionNormalized&&(transforms.some((transform=>"as"in transform&&transform.as===`${standardTrendlinDimension}Normalized`))||transforms.push(...getNormalizedDimensionTransform(standardTrendlinDimension))),transforms.push(getRegressionExtentTransform(trendlineDimension,name))}})),getTrendlineDisplayOnHoverData=(trendlineName,method)=>({name:`${trendlineName}_highlightedData`,source:isWindowMethod(method)?`${trendlineName}_data`:`${trendlineName}_highResolutionData`,transform:[{type:"filter",expr:`datum.${constants.y4} === ${constants.gG} || datum.${constants.y4} === ${constants.uW}`}]}),getExcludeDataKeyTransforms=excludeDataKeys=>excludeDataKeys?.map((excludeDataKey=>({type:"filter",expr:`!datum.${excludeDataKey}`})))??[],staticPointTest=staticPoint=>`datum.${staticPoint} && datum.${staticPoint} === true`,getSelectedTest=(name,idKey)=>`(${constants.sk} && ${constants.sk} === datum.${idKey}) || (${constants.U3} && ${constants.U3} === datum.${name}_selectedGroupId)`,getHighlightBackgroundPoint=lineOptions=>{const{dimension,metric,metricAxis,name,scaleType}=lineOptions;return{name:`${name}_pointBackground`,description:`${name}_pointBackground`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,metric),fill:{signal:constants.b3},stroke:{signal:constants.b3}},update:{size:getHighlightPointSize(lineOptions),strokeWidth:getHighlightPointStrokeWidth(lineOptions),x:getXProductionRule(scaleType,dimension)}}}},getHighlightOrSelectionPoint=(lineOptions,useHighlightedData=!0)=>{const{color,colorScheme,dimension,metric,metricAxis,name,scaleType}=lineOptions;return{name:`${name}_point_${useHighlightedData?"highlight":"select"}`,type:"symbol",from:{data:`${name}${useHighlightedData?"_highlightedData":"_selectedData"}`},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,metric),stroke:getColorProductionRule(color,colorScheme)},update:{fill:getHighlightPointFill(lineOptions),size:getHighlightPointSize(lineOptions),stroke:getHighlightPointStroke(lineOptions),strokeOpacity:getHighlightPointStrokeOpacity(lineOptions),strokeWidth:getHighlightPointStrokeWidth(lineOptions),x:getXProductionRule(scaleType,dimension)}}}},getHighlightPoint=lineOptions=>getHighlightOrSelectionPoint(lineOptions,!0),getSelectionPoint=lineOptions=>getHighlightOrSelectionPoint(lineOptions,!1),getSecondaryHighlightPoint=(lineOptions,secondaryHighlightedMetric)=>{const{color,colorScheme,dimension,metricAxis,name,scaleType}=lineOptions;return{name:`${name}_secondaryPoint`,type:"symbol",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,secondaryHighlightedMetric),fill:{signal:constants.b3},stroke:getColorProductionRule(color,colorScheme)},update:{x:getXProductionRule(scaleType,dimension)}}}},getHighlightPointFill=markOptions=>{const{color,colorScheme,idKey,name,staticPoint}=markOptions,fillRules=[],selectedTest=getSelectedTest(name,idKey);return staticPoint&&fillRules.push({test:staticPointTest(staticPoint),...getColorProductionRule(color,colorScheme)}),hasPopover(markOptions)&&fillRules.push({test:selectedTest,...getColorProductionRule(color,colorScheme)}),[...fillRules,{signal:constants.b3}]},getHighlightPointStroke=markOptions=>{const{color,colorScheme,idKey,name,staticPoint}=markOptions,strokeRules=[],selectedTest=getSelectedTest(name,idKey);return staticPoint&&strokeRules.push({test:staticPointTest(staticPoint),...getColorProductionRule(color,colorScheme)}),hasPopover(markOptions)&&strokeRules.push({test:selectedTest,signal:constants.b3}),[...strokeRules,getColorProductionRule(color,colorScheme)]},getHighlightPointStrokeOpacity=({opacity,staticPoint})=>{const baseOpacityRule=getOpacityProductionRule(opacity),strokeOpacityRules=[];return staticPoint&&strokeOpacityRules.push({test:staticPointTest(staticPoint),...getHighlightOpacityValue(baseOpacityRule)}),[...strokeOpacityRules,baseOpacityRule]},getHighlightPointSize=({staticPoint})=>{const sizeRules=[];return staticPoint&&sizeRules.push({test:staticPointTest(staticPoint),value:64}),[...sizeRules,{value:constants.Nq}]},getHighlightPointStrokeWidth=({staticPoint})=>{const strokeWidthRules=[];return staticPoint&&strokeWidthRules.push({test:staticPointTest(staticPoint),value:6}),[...strokeWidthRules,{value:constants.Zx}]},getSelectRingPoint=lineOptions=>{const{colorScheme,dimension,idKey,metric,metricAxis,name,scaleType}=lineOptions,selectedTest=getSelectedTest(name,idKey);return{name:`${name}_pointSelectRing`,type:"symbol",from:{data:`${name}_selectedData`},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,metric),fill:{signal:constants.b3},stroke:{value:(0,themes.FH)("static-blue",colorScheme)}},update:{size:[{test:selectedTest,value:196},{value:0}],strokeWidth:[{test:selectedTest,value:constants.Zx},{value:0}],x:getXProductionRule(scaleType,dimension)}}}},getLineMark=(lineMarkOptions,dataSource)=>{const{chartPopovers,color,colorScheme,dimension,lineType,lineWidth,metric,metricAxis,name,opacity,scaleType}=lineMarkOptions,popoverWithDimensionHighlightExists=getPopovers(chartPopovers??[],name).some((({UNSAFE_highlightBy})=>"dimension"===UNSAFE_highlightBy));return{name,description:name,type:"line",from:{data:dataSource},interactive:!1,encode:{enter:{y:getYProductionRule(metricAxis,metric),stroke:getColorProductionRule(color,colorScheme),strokeDash:getStrokeDashProductionRule(lineType),strokeOpacity:getOpacityProductionRule(opacity),strokeWidth:getLineWidthProductionRule(lineWidth)},update:{x:getXProductionRule(scaleType,dimension),...popoverWithDimensionHighlightExists?{}:{opacity:getLineOpacity(lineMarkOptions)}}}}},getLineOpacity=({displayOnHover,interactiveMarkName,popoverMarkName,isHighlightedByGroup,highlightedItem})=>{if((!interactiveMarkName||displayOnHover)&&void 0===highlightedItem)return[constants.ZH];const strokeOpacityRules=[];return isHighlightedByGroup&&strokeOpacityRules.push({test:`indexof(pluck(data('${interactiveMarkName}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) !== -1`,value:1}),strokeOpacityRules.push({test:`isValid(${constants.gG}) && ${constants.gG} !== datum.${constants.y4}`,value:1/constants.ux},{test:`length(data('${interactiveMarkName}_highlightedData')) > 0 && indexof(pluck(data('${interactiveMarkName}_highlightedData'), '${constants.y4}'), datum.${constants.y4}) === -1`,value:1/constants.ux}),popoverMarkName&&strokeOpacityRules.push({test:`isValid(${constants.uW}) && ${constants.uW} !== datum.${constants.y4}`,value:1/constants.ux}),strokeOpacityRules.push(constants.ZH),strokeOpacityRules},getLineHoverMarks=(lineOptions,dataSource,secondaryHighlightedMetric)=>{const{dimension,name,scaleType}=lineOptions;return[getHoverRule(dimension,name,scaleType),getHighlightBackgroundPoint(lineOptions),...hasPopover(lineOptions)?[getSelectRingPoint(lineOptions),getSelectionPoint(lineOptions)]:[],getHighlightPoint(lineOptions),...secondaryHighlightedMetric?[getSecondaryHighlightPoint(lineOptions,secondaryHighlightedMetric)]:[],...getInteractiveMarks(dataSource,lineOptions)]},getHoverRule=(dimension,name,scaleType)=>({name:`${name}_hoverRule`,description:`${name}_hoverRule`,type:"rule",from:{data:`${name}_highlightedData`},interactive:!1,encode:{enter:{y:{value:0},y2:{signal:"height"},strokeWidth:{value:1}},update:{x:getXProductionRule(scaleType,dimension),opacity:{signal:`length(data('${name}_selectedData')) > 0 ? 0 : 1`}}}}),getInteractiveMarks=(dataSource,lineOptions)=>{const{interactionMode=constants.ho}=lineOptions;return{nearest:getVoronoiMarks,item:getItemHoverMarks}[interactionMode](lineOptions,dataSource)},getVoronoiMarks=(lineOptions,dataSource)=>{const{dimension,metric,metricAxis,name,scaleType}=lineOptions;return[getPointsForVoronoi(dataSource,dimension,metric,name,scaleType,metricAxis),getVoronoiPath(lineOptions,`${name}_pointsForVoronoi`)]},getItemHoverMarks=(lineOptions,dataSource)=>{const{chartTooltips=[],dimension,metric,metricAxis,name,scaleType}=lineOptions;return[getItemHoverArea(chartTooltips,dataSource,dimension,metric,name,scaleType,metricAxis)]},getTrendlineAnnotations=(trendlineOptions,markName)=>trendlineOptions.trendlineAnnotations.map(((annotationOptions,index)=>(({badge=!1,dimensionValue="end",numberFormat="",prefix=""},index,{colorScheme,dimensionExtent,dimensionScaleType,displayOnHover,lineWidth,orientation,trendlineColor,trendlineDimension,name:trendlineName},markName)=>({badge,colorScheme,dimensionValue,displayOnHover,markName,name:`${trendlineName}Annotation${index}`,numberFormat,prefix,trendlineColor,trendlineDimension,trendlineDimensionExtent:dimensionExtent,trendlineDimensionScaleType:dimensionScaleType,trendlineName,trendlineOrientation:orientation,trendlineWidth:getLineWidthPixelsFromLineWidth(lineWidth)}))(annotationOptions,index,trendlineOptions,markName))),getTrendlineAnnotationMarks=(trendlineOptions,markName)=>{const marks=[];return getTrendlineAnnotations(trendlineOptions,markName).forEach((annotation=>{marks.push({name:`${annotation.name}_group`,type:"group",interactive:!1,marks:[getTrendlineAnnotationPoints(annotation),getTrendlineAnnotationTextMark(annotation),...getTrendlineAnnotationBadgeMark(annotation)]})})),marks},getTrendlineAnnotationPoints=annotationOptions=>{const{name,trendlineName,trendlineWidth,displayOnHover}=annotationOptions;return{name:`${name}_points`,type:"symbol",from:{data:displayOnHover?`${trendlineName}_highlightedData`:`${trendlineName}_highResolutionData`},interactive:!1,encode:{enter:{opacity:{value:0},size:{value:Math.pow(trendlineWidth,2)},x:getTrendlineAnnotationPointX(annotationOptions),y:getTrendlineAnnotationPointY(annotationOptions)}}}},getTrendlineAnnotationPointX=({dimensionValue,trendlineDimension,trendlineDimensionExtent,trendlineDimensionScaleType,trendlineOrientation})=>{const scale=getScaleName("x",trendlineDimensionScaleType);if("vertical"===trendlineOrientation)return{scale,field:constants.AZ};switch(dimensionValue){case"start":return getStartDimensionExtentProductionRule(trendlineDimensionExtent[0],trendlineDimension,scale,"x");case"end":return getEndDimensionExtentProductionRule(trendlineDimensionExtent[1],trendlineDimension,scale,"x");default:return{scale,value:dimensionValue}}},getTrendlineAnnotationPointY=({dimensionValue,trendlineDimension,trendlineDimensionExtent,trendlineOrientation})=>{if("horizontal"===trendlineOrientation)return{scale:"yLinear",field:constants.AZ};switch(dimensionValue){case"start":return getStartDimensionExtentProductionRule(trendlineDimensionExtent[0],trendlineDimension,"yLinear","y");case"end":return getEndDimensionExtentProductionRule(trendlineDimensionExtent[1],trendlineDimension,"yLinear","y");default:return{scale:"yLinear",value:dimensionValue}}},getTrendlineAnnotationTextMark=annotation=>{const{name,numberFormat,prefix,trendlineName,markName}=annotation,textPrefix=prefix?`'${prefix} ' + `:"",fill=getTextFill({...annotation});return{name,type:"text",from:{data:`${name}_points`},zindex:1,interactive:!1,encode:{enter:{text:{signal:`${textPrefix}format(datum.datum.${constants.AZ}, '${numberFormat}')`},fill}},transform:[{type:"label",size:{signal:"[width, height]"},avoidMarks:[trendlineName,`${markName}_group`],offset:[6,6,6,6,8.49,8.49,8.49,8.49],anchor:["top","bottom","right","left","top-right","top-left","bottom-right","bottom-left"]}]}},getTextFill=({badge,colorScheme,trendlineColor})=>{if(!badge)return;const colorString=((color,colorScheme,colorScaleType="ordinal")=>{const colorRule=getColorProductionRule(color,colorScheme,colorScaleType);return"signal"in colorRule?colorRule.signal:"scale"in colorRule&&"field"in colorRule?`scale('${colorRule.scale}', datum.${colorRule.field})`:"value"in colorRule&&colorRule.value?`'${colorRule.value}'`:""})(getColorKey(trendlineColor),colorScheme),textColors=[(0,themes.FH)("gray-50",colorScheme),(0,themes.FH)("gray-900",colorScheme)];return[{test:`contrast(${colorString}, '${textColors[0]}') >= 4.5`,value:textColors[0]},{value:textColors[1]}]},getTrendlineAnnotationBadgeMark=({badge,colorScheme,name,trendlineColor})=>{if(!badge)return[];const color=getColorKey(trendlineColor,2);return[{name:`${name}_badge`,description:`${name}_badge`,type:"rect",from:{data:`${name}`},interactive:!1,encode:{enter:{cornerRadius:{value:2},fill:getColorProductionRule(color,colorScheme),opacity:{field:"opacity"},x:{signal:"datum.bounds.x1 - 3"},x2:{signal:"datum.bounds.x2 + 3"},y:{signal:"datum.bounds.y1 - 3"},y2:{signal:"datum.bounds.y2 + 3"}}}}]},getColorKey=(trendlineColor,datumOrder=1)=>"string"==typeof trendlineColor?`${new Array(datumOrder).fill("datum.").join("")}${trendlineColor}`:trendlineColor,getTrendlineMarks=markOptions=>{const{color,lineType}=markOptions,{facets}=getFacetsFromOptions({color,lineType}),marks=[],trendlines=getTrendlines(markOptions);for(const trendlineOptions of trendlines){const{displayOnHover,method,name}=trendlineOptions;if(isAggregateMethod(method))marks.push(getTrendlineRuleMark(markOptions,trendlineOptions));else{const data=getDataSourceName(name,method,displayOnHover);marks.push({name:`${name}_group`,type:"group",clip:!0,from:{facet:{name:`${name}_facet`,data,groupby:facets}},marks:[getTrendlineLineMark(markOptions,trendlineOptions)]})}marks.push(...getTrendlineAnnotationMarks(trendlineOptions,markOptions.name))}return trendlines.some((trendline=>hasTooltip(trendline)))&&marks.push(getTrendlineHoverMarks(markOptions,trendlines.some((trendlineOptions=>trendlineOptions.highlightRawPoint)))),marks},getDataSourceName=(trendlineName,method,displayOnHover)=>displayOnHover?`${trendlineName}_highlightedData`:isRegressionMethod(method)?`${trendlineName}_highResolutionData`:`${trendlineName}_data`,getTrendlineRuleMark=(markOptions,trendlineOptions)=>{const{colorScheme}=markOptions,{dimensionExtent,dimensionScaleType,displayOnHover,lineType,lineWidth,name,orientation,trendlineColor,trendlineDimension}=trendlineOptions;return{name,type:"rule",clip:!0,from:{data:displayOnHover?`${name}_highlightedData`:`${name}_highResolutionData`},interactive:!1,encode:{enter:{...getRuleYEncodings(dimensionExtent,trendlineDimension,orientation),stroke:getColorProductionRule(trendlineColor,colorScheme),strokeDash:getStrokeDashProductionRule({value:lineType}),strokeOpacity:getOpacityProductionRule({value:trendlineOptions.opacity}),strokeWidth:getLineWidthProductionRule({value:lineWidth})},update:{...getRuleXEncodings(dimensionExtent,trendlineDimension,dimensionScaleType,orientation),opacity:getLineOpacity(getLineMarkOptions(markOptions,trendlineOptions))}}}},getRuleYEncodings=(dimensionExtent,dimension,orientation)=>"horizontal"===orientation?{y:{scale:"yLinear",field:constants.AZ}}:{y:getStartDimensionExtentProductionRule(dimensionExtent[0],dimension,"yLinear","y"),y2:getEndDimensionExtentProductionRule(dimensionExtent[1],dimension,"yLinear","y")},getRuleXEncodings=(dimensionExtent,dimension,scaleType,orientation)=>{const scale=getScaleName("x",scaleType);return"vertical"===orientation?{x:{scale,field:constants.AZ}}:{x:getStartDimensionExtentProductionRule(dimensionExtent[0],dimension,scale,"x"),x2:getEndDimensionExtentProductionRule(dimensionExtent[1],dimension,scale,"x")}},getStartDimensionExtentProductionRule=(startDimensionExtent,dimension,scale,axis)=>{switch(startDimensionExtent){case null:return{scale,field:`${dimension}Min`};case"domain":return"x"===axis?{value:0}:{signal:"height"};default:return{scale,value:startDimensionExtent}}},getEndDimensionExtentProductionRule=(endDimensionExtent,dimension,scale,axis)=>{switch(endDimensionExtent){case null:return{scale,field:`${dimension}Max`};case"domain":return"x"===axis?{signal:"width"}:{value:0};default:return{scale,value:endDimensionExtent}}},getTrendlineLineMark=(markOptions,trendlineOptions)=>{const{colorScheme}=markOptions,{dimensionScaleType,isDimensionNormalized,lineType,lineWidth,name,orientation,trendlineColor,trendlineDimension}=trendlineOptions;return{name,type:"line",from:{data:`${name}_facet`},interactive:!1,encode:{enter:{y:getLineYProductionRule(trendlineDimension,orientation),stroke:getColorProductionRule(trendlineColor,colorScheme),strokeDash:getStrokeDashProductionRule({value:lineType}),strokeOpacity:getOpacityProductionRule({value:trendlineOptions.opacity}),strokeWidth:getLineWidthProductionRule({value:lineWidth})},update:{x:getLineXProductionRule(trendlineDimension,dimensionScaleType,orientation,isDimensionNormalized),opacity:getLineOpacity(getLineMarkOptions(markOptions,trendlineOptions))}}}},getLineYProductionRule=(trendlineDimension,orientation)=>"horizontal"===orientation?{scale:"yLinear",field:constants.AZ}:{scale:"yLinear",field:trendlineDimension},getLineXProductionRule=(trendlineDimension,scaleType,orientation,isDimensionNormalized)=>{const scale=getScaleName("x",scaleType);return"vertical"===orientation?{scale,field:constants.AZ}:isDimensionNormalized?{scale:"xTrendline",field:trendlineDimension}:{scale,field:trendlineDimension}},getTrendlineHoverMarks=(markOptions,highlightRawPoint)=>{const{metric,name}=markOptions,trendlines=getTrendlines(markOptions),trendlineHoverOptions=getLineMarkOptions(markOptions,trendlines[0],{name:`${name}Trendline`,chartTooltips:trendlines.map((trendline=>trendline.chartTooltips)).flat(),metric:constants.AZ});return{name:`${name}Trendline_hoverGroup`,type:"group",clip:!0,marks:getLineHoverMarks(trendlineHoverOptions,`${name}_allTrendlineData`,highlightRawPoint?metric:void 0)}},getLineMarkOptions=(markOptions,{dimensionScaleType,displayOnHover,lineWidth,metric,name,opacity},override)=>{const{color,lineType}=markOptions,popoverMarkName="popoverMarkName"in markOptions?markOptions.popoverMarkName:void 0,staticPoint="staticPoint"in markOptions?markOptions.staticPoint:void 0;return{...markOptions,color:getTrendlineColorFromMarkOptions(color),displayOnHover,lineType:getTrendlineLineTypeFromMarkOptions(lineType),lineWidth:{value:lineWidth},metric,name,opacity:{value:opacity},popoverMarkName,scaleType:dimensionScaleType,staticPoint,...override}},getTrendlineScales=options=>{const{dimension}=options;return getTrendlines(options).some((({dimensionScaleType,method})=>isRegressionMethod(method)&&"time"===dimensionScaleType))?[{name:"xTrendline",type:"linear",range:"width",domain:{data:constants.H5,fields:[`${dimension}Normalized`]},padding:constants.uP,zero:!1,nice:!1}]:[]},setTrendlineSignals=(signals,markOptions)=>{const{idKey,name:markName}=markOptions,trendlines=getTrendlines(markOptions);trendlines.some((trendline=>hasTooltip(trendline)))&&(addHighlightedItemSignalEvents(signals,`${markName}Trendline_voronoi`,idKey,2),addHighlightedSeriesSignalEvents(signals,`${markName}Trendline_voronoi`,2)),trendlines.some((trendline=>trendline.displayOnHover))&&addHighlightedSeriesSignalEvents(signals,`${markName}_voronoi`,2)},getTrellisProperties=({trellisOrientation,name,trellisPadding})=>{const axis="horizontal"===trellisOrientation?"x":"y";return{facetName:`${name}_trellis`,scaleName:`${axis}TrellisBand`,markName:`${axis}TrellisGroup`,rangeScale:"x"===axis?"width":"height",axis,paddingInner:trellisPadding}},isTrellised=options=>Boolean(options.trellis),barUtils_isDodgedAndStacked=({color,lineType,opacity})=>[color,lineType,opacity].some((facet=>Array.isArray(facet)&&2===facet.length)),isDualMetricAxis=options=>{const{dualMetricAxis,type}=options;return Boolean(dualMetricAxis&&!isTrellised(options)&&"dodged"===type&&!barUtils_isDodgedAndStacked(options))},getDodgedGroupMark=options=>{const{dimension,groupedPadding,orientation,name,paddingRatio}=options,{dimensionScaleKey,dimensionAxis,rangeScale}=getOrientationProperties(orientation);return{name:`${name}_group`,type:"group",from:{facet:{data:isTrellised(options)?getTrellisProperties(options).facetName:constants.H5,name:`${name}_facet`,groupby:dimension}},encode:{enter:{[dimensionAxis]:{scale:dimensionScaleKey,field:dimension}}},signals:[{name:rangeScale,update:`bandwidth("${dimensionScaleKey}")`}],scales:[{name:`${name}_position`,type:"band",range:rangeScale,domain:{data:constants.H5,field:`${name}_dodgeGroup`},paddingInner:groupedPadding??paddingRatio}]}},barUtils_getDodgedDimensionEncodings=options=>{const{dimensionAxis,rangeScale}=getOrientationProperties(options.orientation),scale=`${options.name}_position`;return{[dimensionAxis]:{scale,field:`${options.name}_dodgeGroup`},[rangeScale]:{scale,band:1}}},getMetricEncodings=options=>{const{metric,type}=options,{metricAxis:startKey,metricScaleKey:scaleKey}=getOrientationProperties(options.orientation,options.metricAxis),endKey=`${startKey}2`;return"stacked"===type||barUtils_isDodgedAndStacked(options)?getStackedMetricEncodings(options):isDualMetricAxis(options)?{[startKey]:[{test:`datum.${constants.y4} === ${constants.I2}`,scale:`${scaleKey}Secondary`,value:0},{scale:`${scaleKey}Primary`,value:0}],[endKey]:[{test:`datum.${constants.y4} === ${constants.I2}`,scale:`${scaleKey}Secondary`,field:metric},{scale:`${scaleKey}Primary`,field:metric}]}:{[startKey]:{scale:scaleKey,value:0},[endKey]:{scale:scaleKey,field:metric}}},getStackedMetricEncodings=options=>{const{metric,orientation}=options,{metricAxis:startKey,metricScaleKey:scaleKey}=getOrientationProperties(options.orientation,options.metricAxis),endKey=`${startKey}2`,startValue=`datum.${metric}0`,endValue=`datum.${metric}1`;return"vertical"===orientation?{[startKey]:[{test:`${startValue} === 0`,signal:`scale('${scaleKey}', ${startValue})`},{test:`${endValue} > 0`,signal:`max(scale('${scaleKey}', ${startValue}) - 1.5, scale('${scaleKey}', ${endValue}))`},{signal:`min(scale('${scaleKey}', ${startValue}) + 1.5, scale('${scaleKey}', ${endValue}))`}],[endKey]:{scale:scaleKey,field:`${metric}1`}}:{[startKey]:[{test:`${startValue} === 0`,signal:`scale('${scaleKey}', ${startValue})`},{test:`${endValue} > 0`,signal:`min(scale('${scaleKey}', ${startValue}) + 1.5, scale('${scaleKey}', ${endValue}))`},{signal:`max(scale('${scaleKey}', ${startValue}) - 1.5, scale('${scaleKey}', ${endValue}))`}],[endKey]:{scale:scaleKey,field:`${metric}1`}}},getCornerRadiusEncodings=options=>{const{type,lineWidth,metric,hasSquareCorners}=options,value=hasSquareCorners?0:Math.max(1,constants.zu-getLineWidthPixelsFromLineWidth(lineWidth)/2);let rectEncodeEntry;return rectEncodeEntry="dodged"!==type||barUtils_isDodgedAndStacked(options)?getStackedCornerRadiusEncodings(options):{cornerRadiusTopLeft:[{test:`datum.${metric} > 0`,value},{value:0}],cornerRadiusTopRight:[{test:`datum.${metric} > 0`,value},{value:0}],cornerRadiusBottomLeft:[{test:`datum.${metric} < 0`,value},{value:0}],cornerRadiusBottomRight:[{test:`datum.${metric} < 0`,value},{value:0}]},rotateRectClockwiseIfNeeded(rectEncodeEntry,options)},getStackedCornerRadiusEncodings=({name,metric,lineWidth,hasSquareCorners})=>{const topTestString=`datum.${metric}1 > 0 && data('${name}_stacks')[indexof(pluck(data('${name}_stacks'), '${constants.Xz}'), datum.${constants.Xz})].max_${metric}1 === datum.${metric}1`,bottomTestString=`datum.${metric}1 < 0 && data('${name}_stacks')[indexof(pluck(data('${name}_stacks'), '${constants.Xz}'), datum.${constants.Xz})].min_${metric}1 === datum.${metric}1`,value=hasSquareCorners?0:Math.max(1,constants.zu-getLineWidthPixelsFromLineWidth(lineWidth)/2);return{cornerRadiusTopLeft:[{test:topTestString,value},{value:0}],cornerRadiusTopRight:[{test:topTestString,value},{value:0}],cornerRadiusBottomLeft:[{test:bottomTestString,value},{value:0}],cornerRadiusBottomRight:[{test:bottomTestString,value},{value:0}]}},rotateRectClockwiseIfNeeded=(rectEncodeEntry,{orientation})=>"vertical"===orientation?rectEncodeEntry:{cornerRadiusTopLeft:rectEncodeEntry.cornerRadiusBottomLeft,cornerRadiusTopRight:rectEncodeEntry.cornerRadiusTopLeft,cornerRadiusBottomLeft:rectEncodeEntry.cornerRadiusBottomRight,cornerRadiusBottomRight:rectEncodeEntry.cornerRadiusTopRight},getBaseBarEnterEncodings=options=>({...getMetricEncodings(options),...getCornerRadiusEncodings(options)}),getBarEnterEncodings=({chartTooltips,color,colorScheme,name,opacity})=>({fill:getColorProductionRule(color,colorScheme),fillOpacity:getOpacityProductionRule(opacity),tooltip:getTooltip(chartTooltips,name)}),getBarUpdateEncodings=options=>({cursor:getCursor(options.chartPopovers,options.hasOnClick),opacity:getMarkOpacity(options),stroke:getStroke(options),strokeDash:getStrokeDash(options),strokeWidth:getStrokeWidth(options)}),getStroke=({name,chartPopovers,color,colorScheme,idKey})=>{const defaultProductionRule=getColorProductionRule(color,colorScheme);return hasPopover({chartPopovers})?[{test:`(${constants.sk} && ${constants.sk} === datum.${idKey}) || (${constants.U3} && ${constants.U3} === datum.${name}_selectedGroupId)`,value:(0,themes.FH)("static-blue",colorScheme)},defaultProductionRule]:[defaultProductionRule]},getStrokeDash=({chartPopovers,idKey,lineType})=>{const defaultProductionRule=getStrokeDashProductionRule(lineType);return hasPopover({chartPopovers})?[{test:`isValid(${constants.sk}) && ${constants.sk} === datum.${idKey}`,value:[]},defaultProductionRule]:[defaultProductionRule]},getStrokeWidth=({chartPopovers,idKey,lineWidth,name})=>{const lineWidthValue=getLineWidthPixelsFromLineWidth(lineWidth),defaultProductionRule={value:lineWidthValue},popovers=getPopovers(chartPopovers,name),popoverWithDimensionHighlightExists=popovers.some((({UNSAFE_highlightBy})=>"dimension"===UNSAFE_highlightBy));return 0===popovers.length||popoverWithDimensionHighlightExists?[defaultProductionRule]:[{test:`(isValid(${constants.sk}) && ${constants.sk} === datum.${idKey}) || (isValid(${constants.U3}) && ${constants.U3} === datum.${name}_selectedGroupId)`,value:Math.max(lineWidthValue,2)},defaultProductionRule]},getBarPadding=(paddingRatio,paddingOuter)=>getBandPadding(paddingRatio,paddingOuter),getScaleValues=options=>"stacked"===options.type||barUtils_isDodgedAndStacked(options)?[`${options.metric}1`]:[options.metric],getOrientationProperties=(orientation,scaleName)=>"vertical"===orientation?{metricAxis:"y",dimensionAxis:"x",metricScaleKey:scaleName||"yLinear",dimensionScaleKey:"xBand",rangeScale:"width"}:{metricAxis:"x",dimensionAxis:"y",metricScaleKey:scaleName||"xLinear",dimensionScaleKey:"yBand",rangeScale:"height"},getBaseScaleName=options=>{const{metricAxis,orientation}=options,{metricScaleKey}=getOrientationProperties(orientation);return metricAxis||metricScaleKey},applyAnnotationPropDefaults=({textKey,...options},barOptions,dataName,dimensionScaleName,dimensionField)=>({barOptions,textKey:textKey||barOptions.metric,dataName,dimensionScaleName,dimensionField,...options}),getAnnotationMarks=(barOptions,dataName,dimensionScaleName,dimensionName)=>{const annotationOptions=((options,dataName,dimensionScaleName,dimensionField)=>{const annotation=options.barAnnotations[0];if(annotation)return applyAnnotationPropDefaults(annotation,options,dataName,dimensionScaleName,dimensionField)})(barOptions,dataName,dimensionScaleName,dimensionName);return annotationOptions?[{type:"group",name:`${barOptions.name}_annotationGroup`,marks:[getAnnotationTextMark(annotationOptions),getAnnotationBackgroundMark(annotationOptions)]}]:[]},getAnnotationTextMark=({barOptions,dataName,dimensionField,dimensionScaleName,textKey,style})=>{const{metricAxis,dimensionAxis}=getOrientationProperties(barOptions.orientation),annotationWidth=getAnnotationWidth(textKey,style),annotationPosition=getAnnotationMetricAxisPosition(barOptions,annotationWidth);return{name:`${barOptions.name}_annotationText`,type:"text",from:{data:dataName},interactive:!1,zindex:1,encode:{enter:{[dimensionAxis]:{scale:dimensionScaleName,field:dimensionField,band:.5},[metricAxis]:annotationPosition,text:[{test:`bandwidth('${dimensionScaleName}') > ${getMinBandwidth(barOptions.orientation)}`,field:textKey}],fontSize:{value:constants.eK},fontWeight:{value:constants.P3},baseline:{value:"middle"},align:{value:"center"}}}}},getAnnotationBackgroundMark=({barOptions,dimensionScaleName,textKey,style})=>({name:`${barOptions.name}_annotationBackground`,description:`${barOptions.name}_annotationBackground`,type:"rect",from:{data:`${barOptions.name}_annotationText`},interactive:!1,encode:{enter:{...getAnnotationXEncode(style?.width),y:{signal:`datum.bounds.y1  - ${constants.ON}`},y2:{signal:`datum.bounds.y2  + ${constants.ON}`},cornerRadius:{value:4},fill:[{test:`datum.datum.${textKey} && bandwidth('${dimensionScaleName}') > ${getMinBandwidth(barOptions.orientation)}`,signal:constants.b3}]}}}),getMinBandwidth=orientation=>"vertical"===orientation?48:constants.eK+2*constants.ON,getAnnotationXEncode=width=>width?{xc:{signal:"(datum.bounds.x1 + datum.bounds.x2) / 2"},width:{value:width}}:{x:{signal:`datum.bounds.x1 - ${constants.ON}`},x2:{signal:`datum.bounds.x2 + ${constants.ON}`}},getAnnotationWidth=(textKey,style)=>style?.width?{value:style.width}:{signal:`getLabelWidth(datum.${textKey}, '${constants.P3}', ${constants.eK}) + ${2*constants.ON}`},getAnnotationMetricAxisPosition=(options,annotationWidth)=>{const{type,metric,orientation}=options,field="stacked"===type||barUtils_isDodgedAndStacked(options)?`${metric}1`:metric,{metricScaleKey:scaleKey}=getOrientationProperties(orientation),positionOffset=(({orientation},annotationWidth)=>"vertical"===orientation?""+((2*constants.ON+constants.eK)/2+2.5):"value"in annotationWidth?""+(annotationWidth.value/2+2.5):`((${annotationWidth.signal}) / 2 + 2.5)`)(options,annotationWidth);return"vertical"===orientation?[{test:`datum.${field} < 0`,signal:`max(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) + ${positionOffset})`},{signal:`min(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) - ${positionOffset})`}]:[{test:`datum.${field} < 0`,signal:`min(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) - ${positionOffset})`},{signal:`max(scale('${scaleKey}', datum.${field}), scale('${scaleKey}', 0) + ${positionOffset})`}]},getStackedBackgroundBar=options=>{const{name}=options;return{name:`${name}_background`,description:`${name}_background`,type:"rect",from:{data:barUtils_isDodgedAndStacked(options)?`${name}_facet`:getBaseDataSourceName(options)},interactive:!1,encode:{enter:{...getBaseBarEnterEncodings(options),fill:{signal:constants.b3}},update:{...getStackedDimensionEncodings(options)}}}},getStackedBar=options=>{const{name}=options;return{name,description:name,type:"rect",from:{data:barUtils_isDodgedAndStacked(options)?`${name}_facet`:getBaseDataSourceName(options)},interactive:isInteractive(options),encode:{enter:{...getBaseBarEnterEncodings(options),...getBarEnterEncodings(options)},update:{...getStackedDimensionEncodings(options),...getBarUpdateEncodings(options)}}}},getStackedDimensionEncodings=options=>{const{dimension,orientation}=options;if(barUtils_isDodgedAndStacked(options))return barUtils_getDodgedDimensionEncodings(options);const{dimensionAxis,rangeScale,dimensionScaleKey}=getOrientationProperties(orientation);return{[dimensionAxis]:{scale:dimensionScaleKey,field:dimension},[rangeScale]:{scale:dimensionScaleKey,band:1}}},getBaseDataSourceName=options=>isTrellised(options)?getTrellisProperties(options).facetName:constants.H5,addBar=(0,immer.jM)(((spec,{barAnnotations=[],chartPopovers=[],chartTooltips=[],color={value:"categorical-100"},colorScheme=constants.gb,dimension=constants.w4,dualMetricAxis=!1,hasOnClick=!1,hasSquareCorners=!1,index=0,lineType={value:"solid"},lineWidth=0,metric=constants.bA,metricAxis,name,opacity={value:1},orientation="vertical",paddingRatio=constants.WN,trellisOrientation="horizontal",trellisPadding=constants.Om,type="stacked",trendlines=[],...options})=>{const barName=(0,utils.C)(name||`bar${index}`),barOptions={barAnnotations,chartPopovers,chartTooltips,dimensionScaleType:"band",dualMetricAxis,orientation,color,colorScheme,dimension,hasOnClick,hasSquareCorners,index,interactiveMarkName:getInteractiveMarkName({chartPopovers,chartTooltips,hasOnClick,highlightedItem:options.highlightedItem,trendlines},barName),lineType,lineWidth,metric,metricAxis,name:barName,opacity,paddingRatio,trellisOrientation,trellisPadding,trendlines,type,...options};spec.usermeta={chartOrientation:barOptions.orientation},spec.data=barSpecBuilder_addData(spec.data??[],barOptions),spec.signals=barSpecBuilder_addSignals(spec.signals??[],barOptions),spec.scales=addScales(spec.scales??[],barOptions),spec.marks=addMarks(spec.marks??[],barOptions)})),barSpecBuilder_addSignals=(0,immer.jM)(((signals,options)=>{const{barAnnotations,chartTooltips,chartPopovers,idKey,name,paddingRatio,paddingOuter:barPaddingOuter,trendlines}=options,{paddingInner}=getBarPadding(paddingRatio,barPaddingOuter);var markName;signals.push(getGenericValueSignal("paddingInner",paddingInner)),isDualMetricAxis(options)&&signals.push({name:`${constants.kw}`,value:null,update:`length(domain("${constants.Tj}")) > 0 ? domain("${constants.Tj}")[0] : null`},{name:`${constants.I2}`,value:null,update:`length(domain("${constants.Tj}")) > 0 ? peek(domain("${constants.Tj}")) : null`},(markName=name,{name:`${constants.xA}`,value:null,on:[{events:`@${markName}:mouseover`,update:`datum.${constants.y4}`},{events:`@${markName}:mouseout`,update:"null"}]})),(barAnnotations.length||chartPopovers.length||chartTooltips.length||trendlines.length)&&(addHighlightedItemSignalEvents(signals,name,idKey,1,chartTooltips[0]?.excludeDataKeys),addTooltipSignals(signals,options),setTrendlineSignals(signals,options))})),barSpecBuilder_addData=(0,immer.jM)(((data,options)=>{const{dimension,dimensionDataType,metric,order,type}=options;if(dimensionDataType===constants.E9){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}const index=data.findIndex((d=>d.name===constants.H5));data[index].transform=data[index].transform??[],("stacked"===type||barUtils_isDodgedAndStacked(options))&&(data[index].transform?.push({type:"stack",groupby:getStackFields(options),field:metric,sort:getTransformSort(order),as:[`${metric}0`,`${metric}1`]}),data[index].transform?.push(getStackIdTransform(options)),data.push(getStackAggregateData(options))),("dodged"===type||barUtils_isDodgedAndStacked(options))&&data[index].transform?.push(getDodgeGroupTransform(options)),addDualMetricAxisData(data,options),addTrendlineData(data,options),addTooltipData(data,options),addPopoverData(data,options)})),getStackAggregateData=options=>{const{metric,name}=options;return{name:`${name}_stacks`,source:constants.H5,transform:[{type:"aggregate",groupby:getStackFields(options),fields:[`${metric}1`,`${metric}1`],ops:["min","max"]},getStackIdTransform(options)]}},getStackIdTransform=options=>({type:"formula",as:constants.Xz,expr:getStackFields(options).map((facet=>`datum.${facet}`)).join(' + "," + ')}),getStackFields=({trellis,color,dimension,lineType,opacity,type})=>{const{facets,secondaryFacets}=getFacetsFromOptions({color,lineType,opacity});return[...trellis?[trellis]:[],dimension,..."dodged"===type?facets:[],..."stacked"===type?secondaryFacets:[]]},getDodgeGroupTransform=({color,lineType,name,opacity,type})=>{const{facets,secondaryFacets}=getFacetsFromOptions({color,lineType,opacity});return{type:"formula",as:`${name}_dodgeGroup`,expr:("dodged"===type?facets:secondaryFacets).map((facet=>`datum.${facet}`)).join(' + "," + ')}},addDualMetricAxisData=(data,options)=>{if(isDualMetricAxis(options)){const scaleNames=getDualAxisScaleNames(getBaseScaleName(options));scaleNames.primaryDomain&&scaleNames.secondaryDomain&&(data.push({name:scaleNames.primaryDomain,source:constants.H5,transform:[{type:"filter",expr:`datum.${constants.y4} !== ${constants.I2}`}]}),data.push({name:scaleNames.secondaryDomain,source:constants.H5,transform:[{type:"filter",expr:`datum.${constants.y4} === ${constants.I2}`}]}))}},addScales=(0,immer.jM)(((scales,options)=>{const{color,lineType,opacity,metricAxis}=options,{metricAxis:axisType}=getOrientationProperties(options.orientation);if(addMetricScale(scales,getScaleValues(options),axisType),metricAxis&&addMetricScale(scales,getScaleValues(options),axisType,metricAxis),isDualMetricAxis(options)){const scaleNames=getDualAxisScaleNames(getBaseScaleName(options));addMetricScale(scales,getScaleValues(options),axisType,scaleNames.primaryScale,scaleNames.primaryDomain),addMetricScale(scales,getScaleValues(options),axisType,scaleNames.secondaryScale,scaleNames.secondaryDomain)}addDimensionScale(scales,options),((scales,options)=>{if(!options.trellis)return;const{scaleName,rangeScale,paddingInner}=getTrellisProperties(options),trellisScaleIndex=getScaleIndexByName(scales,scaleName,"band");scales[trellisScaleIndex]=addDomainFields(scales[trellisScaleIndex],[options.trellis]),scales[trellisScaleIndex]={...scales[trellisScaleIndex],range:rangeScale,paddingInner}})(scales,options),addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addSecondaryScales(scales,options)})),addDimensionScale=(scales,{dimension,paddingRatio,paddingOuter:barPaddingOuter,orientation})=>{const{dimensionAxis}=getOrientationProperties(orientation),index=getScaleIndexByType(scales,"band",dimensionAxis);scales[index]=addDomainFields(scales[index],[dimension]);const{paddingInner,paddingOuter}=getBarPadding(paddingRatio,barPaddingOuter);scales[index]={...scales[index],paddingInner,paddingOuter}},addSecondaryScales=(scales,options)=>{const{color,lineType,opacity}=options;barUtils_isDodgedAndStacked(options)&&[{value:color,scaleName:"colors",secondaryScaleName:"secondaryColor"},{value:lineType,scaleName:"lineTypes",secondaryScaleName:"secondaryLineType"},{value:opacity,scaleName:"opacities",secondaryScaleName:"secondaryOpacity"}].forEach((({value,scaleName,secondaryScaleName})=>{if(Array.isArray(value)&&2===value.length){const secondaryIndex=getScaleIndexByName(scales,secondaryScaleName,"ordinal");scales[secondaryIndex]=addDomainFields(scales[secondaryIndex],[value[1]]);const primaryIndex=getScaleIndexByName(scales,scaleName,"ordinal"),primaryScale=scales[primaryIndex];primaryScale.range={signal:scaleName},scales[primaryIndex]=addDomainFields(primaryScale,[value[0]])}}))},addMarks=(0,immer.jM)(((marks,options)=>{const{chartPopovers,name,type}=options,barMarks=[];barUtils_isDodgedAndStacked(options)?barMarks.push((options=>{const marks=[];return marks.push(getStackedBackgroundBar(options)),marks.push(getStackedBar(options)),marks.push(...getAnnotationMarks(options,`${options.name}_facet`,`${options.name}_position`,`${options.name}_dodgeGroup`)),{...getDodgedGroupMark(options),marks}})(options)):"stacked"===type?barMarks.push(...(options=>{const marks=[];return marks.push(getStackedBackgroundBar(options)),marks.push(getStackedBar(options)),marks.push(...getAnnotationMarks(options,getBaseDataSourceName(options),getOrientationProperties(options.orientation).dimensionScaleKey,options.dimension)),marks})(options)):barMarks.push((options=>{const{name}=options;return{...getDodgedGroupMark(options),marks:[{name:`${name}_background`,from:{data:`${name}_facet`},type:"rect",interactive:!1,encode:{enter:{...getBaseBarEnterEncodings(options),fill:{signal:constants.b3}},update:{...barUtils_getDodgedDimensionEncodings(options)}}},{name,from:{data:`${name}_facet`},type:"rect",interactive:isInteractive(options),encode:{enter:{...getBaseBarEnterEncodings(options),...getBarEnterEncodings(options)},update:{...barUtils_getDodgedDimensionEncodings(options),...getBarUpdateEncodings(options)}}},...getAnnotationMarks(options,`${name}_facet`,`${name}_position`,`${name}_dodgeGroup`)]}})(options));if(getPopovers(chartPopovers,name).some((popover=>"dimension"===popover.UNSAFE_highlightBy))&&barMarks.push((options=>{const{name,colorScheme,paddingRatio,orientation}=options,update="vertical"===orientation?{y:{value:0},y2:{signal:"height"},xc:{signal:`scale('xBand', datum.${name}_selectedGroupId) + bandwidth('xBand')/2`},width:{signal:`bandwidth('xBand')/(1 - ${paddingRatio} / 2)`}}:{x:{value:0},x2:{signal:"width"},yc:{signal:`scale('yBand', datum.${name}_selectedGroupId) + bandwidth('yBand')/2`},height:{signal:`bandwidth('yBand')/(1 - ${paddingRatio} / 2)`}};return{name:`${name}_selectionRing`,type:"rect",from:{data:`${name}_selectedData`},interactive:!1,encode:{enter:{fill:{value:"transparent"},strokeWidth:{value:2},stroke:{value:(0,themes.FH)("static-blue",colorScheme)},cornerRadius:{value:6}},update}}})(options)),isTrellised(options)){const repeatedScale=getRepeatedScale(options);marks.push(((options,marks,repeatedScale)=>{const{trellisOrientation}=options,trellis=options.trellis,{markName,facetName,scaleName,axis:trellisAxis,rangeScale:trellisRangeScale}=getTrellisProperties(options);return{name:markName,type:"group",from:{facet:{data:constants.H5,name:facetName,groupby:trellis}},signals:[{name:trellisRangeScale,update:`bandwidth('${scaleName}')`}],encode:{enter:{[trellisAxis]:{scale:scaleName,field:trellis},height:{signal:"vertical"===trellisOrientation?`bandwidth('${scaleName}')`:"height"},width:{signal:"horizontal"===trellisOrientation?`bandwidth('${scaleName}')`:"width"}}},scales:[repeatedScale],marks}})(options,barMarks,repeatedScale))}else marks.push(...barMarks);marks.push(...getTrendlineMarks(options))})),getRepeatedScale=options=>{const{orientation,trellisOrientation}=options;if(orientation===trellisOrientation){const{metricAxis}=getOrientationProperties(orientation);return((metricKeys,metricAxis,chartOrientation)=>{let scale=getDefaultScale("linear",metricAxis,chartOrientation);return scale=addDomainFields(scale,metricKeys),scale})(getScaleValues(options),metricAxis,orientation)}return getDimensionScale(options)},getDimensionScale=({dimension,orientation,paddingRatio,paddingOuter:barPaddingOuter})=>{const{dimensionAxis}=getOrientationProperties(orientation);let scale=getDefaultScale("band",dimensionAxis,orientation);scale=addDomainFields(scale,[dimension]);const{paddingInner,paddingOuter}=getBarPadding(paddingRatio,barPaddingOuter);return{...scale,paddingInner,paddingOuter}};function generateThresholdColorExpr(thresholds,metricField,defaultColor){if(!thresholds||0===thresholds.length)return`'${defaultColor}'`;const sorted=thresholds.slice().sort(((a,b)=>(void 0!==a.thresholdMin?a.thresholdMin:-1e12)-(void 0!==b.thresholdMin?b.thresholdMin:-1e12))),exprParts=[];exprParts.push(`(datum.${metricField} < ${void 0!==sorted[0].thresholdMin?sorted[0].thresholdMin:-1e12}) ? '${defaultColor}' : `);for(let i=0;i<sorted.length-1;i++){const nextLower=void 0!==sorted[i+1].thresholdMin?sorted[i+1].thresholdMin:-1e12;exprParts.push(`(datum.${metricField} < ${nextLower}) ? '${sorted[i].fill}' : `)}exprParts.push(`'${sorted[sorted.length-1].fill}'`);return exprParts.join("")}const bulletMarkUtils_addMarks=(0,immer.jM)(((marks,bulletOptions)=>{const markGroupEncodeUpdateDirection="column"===bulletOptions.direction?"y":"x",bulletGroupWidth="column"===bulletOptions.direction?"width":"bulletGroupWidth",bulletMark={name:"bulletGroup",type:"group",from:{facet:{data:"table",name:"bulletGroups",groupby:`${bulletOptions.dimension}`}},encode:{update:{[markGroupEncodeUpdateDirection]:{scale:"groupScale",field:`${bulletOptions.dimension}`},height:{signal:"bulletGroupHeight"},width:{signal:bulletGroupWidth}}},marks:[]},thresholds=bulletOptions.thresholds;Array.isArray(thresholds)&&thresholds.length>0?(bulletMark.data=[{name:"thresholds",values:thresholds,transform:[{type:"identifier",as:"id"}]}],bulletMark.marks?.push(function getBulletMarkThreshold(bulletOptions){const baseHeightSignal="bulletGroupHeight - 3 - bulletThresholdHeight",encodeUpdateYSignal=bulletOptions.showTarget&&bulletOptions.showTargetValue?`${baseHeightSignal} - targetValueLabelHeight`:baseHeightSignal,bulletMarkThreshold={name:`${bulletOptions.name}Threshold`,description:`${bulletOptions.name}Threshold`,type:"rect",from:{data:"thresholds"},clip:!0,encode:{enter:{cornerRadiusTopLeft:[{test:"!isDefined(datum.thresholdMin) && domain('xscale')[0] !== 0",value:3}],cornerRadiusBottomLeft:[{test:"!isDefined(datum.thresholdMin) && domain('xscale')[0] !== 0",value:3}],cornerRadiusTopRight:[{test:"!isDefined(datum.thresholdMax) && domain('xscale')[1] !== 0",value:3}],cornerRadiusBottomRight:[{test:"!isDefined(datum.thresholdMax) && domain('xscale')[1] !== 0",value:3}],fill:{field:"fill"},fillOpacity:{value:.2}},update:{x:{signal:"isDefined(datum.thresholdMin) ? scale('xscale', datum.thresholdMin) : 0"},x2:{signal:"isDefined(datum.thresholdMax) ? scale('xscale', datum.thresholdMax) : width"},height:{signal:"bulletThresholdHeight"},y:{signal:encodeUpdateYSignal}}}};return bulletMarkThreshold}(bulletOptions))):bulletOptions.track&&bulletMark.marks?.push(function getBulletTrack(bulletOptions){const trackColor=(0,themes.FH)("gray-200",bulletOptions.colorScheme),trackWidth="column"===bulletOptions.direction?"width":"bulletGroupWidth",trackY=bulletOptions.showTarget&&bulletOptions.showTargetValue?"bulletGroupHeight - 3 - 2 * bulletHeight - 20":"bulletGroupHeight - 3 - 2 * bulletHeight",bulletTrack={name:`${bulletOptions.name}Track`,description:`${bulletOptions.name}Track`,type:"rect",from:{data:"bulletGroups"},encode:{enter:{fill:{value:trackColor},cornerRadiusTopRight:[{test:"domain('xscale')[1] !== 0",value:3}],cornerRadiusBottomRight:[{test:"domain('xscale')[1] !== 0",value:3}],cornerRadiusTopLeft:[{test:"domain('xscale')[0] !== 0",value:3}],cornerRadiusBottomLeft:[{test:"domain('xscale')[0] !== 0",value:3}]},update:{x:{value:0},width:{signal:trackWidth},height:{signal:"bulletHeight"},y:{signal:trackY}}}};return bulletTrack}(bulletOptions)),bulletMark.marks?.push(function getBulletMarkRect(bulletOptions){const bulletMarkRectEncodeUpdateYSignal=bulletOptions.showTarget&&bulletOptions.showTargetValue?"bulletGroupHeight - targetValueLabelHeight - 3 - 2 * bulletHeight":"bulletGroupHeight - 3 - 2 * bulletHeight",fillColor=bulletOptions.thresholdBarColor&&(bulletOptions.thresholds?.length??0)>0?[{field:"barColor"}]:[{value:bulletOptions.color}],bulletMarkRect={name:`${bulletOptions.name}Rect`,description:`${bulletOptions.name}Rect`,type:"rect",from:{data:"bulletGroups"},encode:{enter:{cornerRadiusTopLeft:[{test:`datum.${bulletOptions.metric} < 0`,value:3}],cornerRadiusBottomLeft:[{test:`datum.${bulletOptions.metric} < 0`,value:3}],cornerRadiusTopRight:[{test:`datum.${bulletOptions.metric} > 0`,value:3}],cornerRadiusBottomRight:[{test:`datum.${bulletOptions.metric} > 0`,value:3}],fill:fillColor},update:{x:{scale:"xscale",value:0},x2:{scale:"xscale",field:`${bulletOptions.metric}`},height:{signal:"bulletHeight"},y:{signal:bulletMarkRectEncodeUpdateYSignal}}}};return bulletMarkRect}(bulletOptions)),bulletOptions.target&&!1!==bulletOptions.showTarget&&(bulletMark.marks?.push(function getBulletMarkTarget(bulletOptions){const solidColor=(0,themes.FH)("gray-900",bulletOptions.colorScheme),bulletMarkTargetEncodeUpdateY=bulletOptions.showTarget&&bulletOptions.showTargetValue?"bulletGroupHeight - targetValueLabelHeight - targetHeight":"bulletGroupHeight - targetHeight",bulletMarkTargetEncodeUpdateY2=bulletOptions.showTarget&&bulletOptions.showTargetValue?"bulletGroupHeight - targetValueLabelHeight":"bulletGroupHeight",bulletMarkTarget={name:`${bulletOptions.name}Target`,description:`${bulletOptions.name}Target`,type:"rule",from:{data:"bulletGroups"},encode:{enter:{stroke:{value:`${solidColor}`},strokeWidth:{value:2}},update:{x:{scale:"xscale",field:`${bulletOptions.target}`},y:{signal:bulletMarkTargetEncodeUpdateY},y2:{signal:bulletMarkTargetEncodeUpdateY2}}}};return bulletMarkTarget}(bulletOptions)),bulletOptions.showTargetValue&&bulletMark.marks?.push(function getBulletMarkTargetValueLabel(bulletOptions){const solidColor=(0,themes.FH)("gray-900",bulletOptions.colorScheme),bulletMarkTargetValueLabel={name:`${bulletOptions.name}TargetValueLabel`,description:`${bulletOptions.name}TargetValueLabel`,type:"text",from:{data:"bulletGroups"},encode:{enter:{text:{signal:`datum.${bulletOptions.target} != null ? 'Target: ' + format(datum.${bulletOptions.target}, '$,.2f') : 'No Target'`},align:{value:"center"},baseline:{value:"top"},fill:{value:`${solidColor}`}},update:{x:{scale:"xscale",field:`${bulletOptions.target}`},y:{signal:"bulletGroupHeight - targetValueLabelHeight + 6"}}}};return bulletMarkTargetValueLabel}(bulletOptions))),"top"!==bulletOptions.labelPosition&&"row"!==bulletOptions.direction||(bulletMark.marks?.push(function getBulletMarkLabel(bulletOptions){const barLabelColor=(0,themes.FH)("gray-600",bulletOptions.colorScheme),bulletMarkLabel={name:`${bulletOptions.name}Label`,description:`${bulletOptions.name}Label`,type:"text",from:{data:"bulletGroups"},encode:{enter:{text:{signal:`datum.${bulletOptions.dimension}`},align:{value:"left"},baseline:{value:"top"},fill:{value:`${barLabelColor}`}},update:{x:{value:0},y:{value:0}}}};return bulletMarkLabel}(bulletOptions)),bulletMark.marks?.push(function getBulletMarkValueLabel(bulletOptions){const defaultColor=(0,themes.FH)(bulletOptions.color,bulletOptions.colorScheme),solidColor=(0,themes.FH)("gray-900",bulletOptions.colorScheme),encodeUpdateSignalWidth="column"===bulletOptions.direction?"width":"bulletGroupWidth",fillExpr=bulletOptions.thresholdBarColor&&(bulletOptions.thresholds?.length??0)>0?`datum.barColor === '${defaultColor}' ? '${solidColor}' : datum.barColor`:`'${solidColor}'`,bulletMarkValueLabel={name:`${bulletOptions.name}ValueLabel`,description:`${bulletOptions.name}ValueLabel`,type:"text",from:{data:"bulletGroups"},encode:{enter:{text:{signal:`datum.${bulletOptions.metric} != null ? format(datum.${bulletOptions.metric}, '${bulletOptions.numberFormat||""}') : ''`},align:{value:"right"},baseline:{value:"top"},fill:{signal:fillExpr}},update:{x:{signal:encodeUpdateSignalWidth},y:{value:0}}}};return bulletMarkValueLabel}(bulletOptions))),marks.push(bulletMark)}));const bulletMarkUtils_addAxes=(0,immer.jM)(((axes,bulletOptions)=>{if(bulletOptions.metricAxis&&"column"===bulletOptions.direction&&!bulletOptions.showTargetValue&&axes.push({labelOffset:2,scale:"xscale",orient:"bottom",ticks:!1,labelColor:"gray",domain:!1,tickCount:5,offset:{signal:"axisOffset"}}),"side"===bulletOptions.labelPosition&&"column"===bulletOptions.direction){const labelOffset=bulletOptions.showTargetValue&&bulletOptions.showTarget?-8:2;axes.push(function getBulletLabelAxesLeft(labelOffset){return{scale:"groupScale",orient:"left",tickSize:0,labelOffset,labelPadding:10,labelColor:"#797979",domain:!1}}(labelOffset)),axes.push(function getBulletLabelAxesRight(bulletOptions,labelOffset){return{scale:"groupScale",orient:"right",tickSize:0,labelOffset,labelPadding:10,domain:!1,encode:{labels:{update:{text:{signal:`info(data('table')[datum.index * (length(data('table')) - 1)].${bulletOptions.metric}) != null ? format(info(data('table')[datum.index * (length(data('table')) - 1)].${bulletOptions.metric}), '${bulletOptions.numberFormat||""}') : ''`}}}}}}(bulletOptions,labelOffset))}})),DEFAULT_COLOR=themes.YA.light["static-blue"],addBullet=(0,immer.jM)(((spec,{colorScheme=constants.gb,index=0,name,metric,dimension,target,color=DEFAULT_COLOR,direction=constants.xu,numberFormat,showTarget=!0,showTargetValue=!1,labelPosition=constants.VT,scaleType=constants._K,maxScaleValue=constants.Vi,thresholds=[],track=!1,thresholdBarColor=!1,metricAxis=!1,...options})=>{const bulletOptions={colorScheme,index,color:(0,themes.FH)(color,colorScheme),metric:metric??"currentAmount",dimension:dimension??"graphLabel",target:target??"target",name:(0,utils.C)(name??`bullet${index}`),direction,numberFormat:numberFormat??"",showTarget,showTargetValue,labelPosition,scaleType,maxScaleValue,track,thresholds,thresholdBarColor,metricAxis,...options};spec.data=bulletSpecBuilder_addData(spec.data??[],bulletOptions),spec.marks=bulletMarkUtils_addMarks(spec.marks??[],bulletOptions),spec.scales=bulletSpecBuilder_addScales(spec.scales??[],bulletOptions),spec.signals=bulletSpecBuilder_addSignals(spec.signals??[],bulletOptions),spec.axes=bulletMarkUtils_addAxes(spec.axes??[],bulletOptions)})),bulletSpecBuilder_addScales=(0,immer.jM)(((scales,options)=>{const groupScaleRangeSignal="column"===options.direction?"bulletChartHeight":"width",xRange="column"===options.direction?"width":[0,{signal:"bulletGroupWidth"}];let domainFields;domainFields="flexible"===options.scaleType&&options.maxScaleValue>0?{data:"table",fields:["xPaddingForTarget",options.metric,"flexibleScaleValue"]}:"fixed"===options.scaleType&&options.maxScaleValue>0?[0,`${options.maxScaleValue}`]:{data:"table",fields:["xPaddingForTarget",options.metric]},scales.push({name:"groupScale",type:"band",domain:{data:"table",field:options.dimension},range:[0,{signal:groupScaleRangeSignal}],paddingInner:{signal:"paddingRatio"}},{name:"xscale",type:"linear",domain:domainFields,range:xRange,round:!0,clamp:!0,zero:!0})})),bulletSpecBuilder_addSignals=(0,immer.jM)(((signals,options)=>{signals.push({name:"gap",value:12}),signals.push({name:"bulletHeight",value:8}),signals.push({name:"bulletThresholdHeight",update:"bulletHeight * 3"}),signals.push({name:"targetHeight",update:"bulletThresholdHeight + 6"}),options.showTargetValue&&options.showTarget&&signals.push({name:"targetValueLabelHeight",update:"20"}),signals.push({name:"bulletGroupHeight",update:getBulletGroupHeightExpression(options)}),"column"===options.direction?(signals.push({name:"paddingRatio",update:"gap / (gap + bulletGroupHeight)"}),options.metricAxis&&!options.showTargetValue?(signals.push({name:"bulletChartHeight",update:"length(data('table')) * bulletGroupHeight + (length(data('table')) - 1) * gap + 10"}),signals.push({name:"axisOffset",update:"bulletChartHeight - height - 10"})):signals.push({name:"bulletChartHeight",update:"length(data('table')) * bulletGroupHeight + (length(data('table')) - 1) * gap"})):(signals.push({name:"bulletGroupWidth",update:"(width / length(data('table'))) - gap"}),signals.push({name:"paddingRatio",update:"gap / (gap + bulletGroupWidth)"}),signals.push({name:"bulletChartHeight",update:"bulletGroupHeight"}))}));function getBulletGroupHeightExpression(options){return options.showTargetValue&&options.showTarget?"side"===options.labelPosition&&"column"===options.direction?"bulletThresholdHeight + targetValueLabelHeight + 10":"bulletThresholdHeight + targetValueLabelHeight + 24":"side"===options.labelPosition&&"column"===options.direction?"bulletThresholdHeight + 10":"bulletThresholdHeight + 24"}const bulletSpecBuilder_addData=(0,immer.jM)(((data,options)=>{const tableData=(data=>{let tableData=getTableData(data);return tableData||(tableData={name:constants.Bt,values:[],transform:[]},data.push(tableData)),tableData})(data);tableData.transform=(bulletOptions=>{const transforms=[{type:"formula",expr:`isValid(datum.${bulletOptions.target}) ? round(datum.${bulletOptions.target} * 1.05) : 0`,as:"xPaddingForTarget"}];return"flexible"===bulletOptions.scaleType&&transforms.push({type:"formula",expr:`${bulletOptions.maxScaleValue}`,as:"flexibleScaleValue"}),bulletOptions.thresholdBarColor&&(bulletOptions.thresholds?.length??0)>0&&transforms.push({type:"formula",expr:generateThresholdColorExpr(bulletOptions.thresholds??[],bulletOptions.metric,bulletOptions.color),as:"barColor"}),transforms})(options)})),getMetricRanges=markOptions=>markOptions.metricRanges.map(((metricRange,index)=>applyMetricRangeOptionDefaults(metricRange,markOptions.name,index))),applyMetricRangeOptionDefaults=({chartTooltips=[],lineType="dashed",lineWidth="S",rangeOpacity=.2,metric=constants.bA,displayOnHover=!1,...options},markName,index)=>({chartTooltips,lineType,lineWidth,name:`${markName}MetricRange${index}`,rangeOpacity,metric,displayOnHover,...options}),getMetricRangeMark=(lineMarkOptions,metricRangeOptions)=>{const areaOptions={name:`${metricRangeOptions.name}_area`,color:lineMarkOptions.color,colorScheme:lineMarkOptions.colorScheme,opacity:metricRangeOptions.rangeOpacity,metricStart:metricRangeOptions.metricStart,metricEnd:metricRangeOptions.metricEnd,isStacked:!1,scaleType:"time",dimension:lineMarkOptions.dimension,isMetricRange:!0,parentName:lineMarkOptions.name,displayOnHover:metricRangeOptions.displayOnHover},lineOptions={...lineMarkOptions,name:`${metricRangeOptions.name}_line`,color:metricRangeOptions.color?{value:metricRangeOptions.color}:lineMarkOptions.color,metric:metricRangeOptions.metric,lineType:{value:metricRangeOptions.lineType},lineWidth:{value:metricRangeOptions.lineWidth},displayOnHover:metricRangeOptions.displayOnHover},dataSource=`${metricRangeOptions.name}_facet`;return[getLineMark(lineOptions,dataSource),getAreaMark(areaOptions,dataSource)]},getPopoverMarkName=(chartPopovers,lineName)=>{if(chartPopovers.length)return lineName},addLine=(0,immer.jM)(((spec,{chartPopovers=[],chartTooltips=[],color={value:"categorical-100"},colorScheme=constants.gb,dimension=constants.Lr,hasOnClick=!1,index=0,lineType={value:"solid"},metric=constants.bA,metricAxis,metricRanges=[],name,opacity={value:1},scaleType="time",trendlines=[],...options})=>{const lineName=(0,utils.C)(name||`line${index}`),lineOptions={chartPopovers,chartTooltips,color,colorScheme,dimension,hasOnClick,index,interactiveMarkName:getInteractiveMarkName({chartPopovers,chartTooltips,hasOnClick,highlightedItem:options.highlightedItem,metricRanges,trendlines},lineName),lineType,metric,metricAxis,metricRanges,name:lineName,opacity,popoverMarkName:getPopoverMarkName(chartPopovers,lineName),scaleType,trendlines,...options};return lineOptions.isHighlightedByGroup=isHighlightedByGroup(lineOptions),spec.data=lineSpecBuilder_addData(spec.data??[],lineOptions),spec.signals=lineSpecBuilder_addSignals(spec.signals??[],lineOptions),spec.scales=lineSpecBuilder_setScales(spec.scales??[],lineOptions),spec.marks=addLineMarks(spec.marks??[],lineOptions),spec})),lineSpecBuilder_addData=(0,immer.jM)(((data,options)=>{const{chartTooltips,dimension,highlightedItem,isSparkline,isMethodLast,name,scaleType,staticPoint}=options;if("time"===scaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}(isInteractive(options)||void 0!==highlightedItem)&&(data.push(((name,idKey,source,hasPopover,hasGroupId)=>{const highlightedExpr=hasGroupId?`${constants.oK} === datum.${name}_highlightGroupId`:`isArray(${constants.qE}) && indexof(${constants.qE}, datum.${idKey}) > -1  || ${constants.qE} === datum.${idKey}`;return{name:`${name}_highlightedData`,source,transform:[{type:"filter",expr:hasPopover?`${constants.sk} && ${constants.sk} === datum.${idKey} || !${constants.sk} && ${highlightedExpr}`:highlightedExpr}]}})(name,options.idKey,constants.H5,hasPopover(options),isHighlightedByGroup(options))),data.push(getFilteredTooltipData(chartTooltips))),(staticPoint||isSparkline)&&data.push(((name,staticPoint,source,isSparkline,isMethodLast)=>({name:`${name}_staticPointData`,source,transform:[{type:"filter",expr:isSparkline&&isMethodLast?"datum === data('table')[data('table').length - 1]":`datum.${staticPoint} === true`}]}))(name,staticPoint,constants.H5,isSparkline,isMethodLast)),addTrendlineData(data,options),addTooltipData(data,options,!1),addPopoverData(data,options),data.push(...(markOptions=>{const data=[],metricRanges=getMetricRanges(markOptions);for(const metricRangeOptions of metricRanges){const{displayOnHover,name}=metricRangeOptions;displayOnHover&&data.push({name:`${name}_highlightedData`,source:constants.H5,transform:[{type:"filter",expr:`isValid(${constants.gG}) && ${constants.gG} === datum.${constants.y4} || isValid(${constants.uW}) && ${constants.uW} === datum.${constants.y4}`}]})}return data})(options))})),lineSpecBuilder_addSignals=(0,immer.jM)(((signals,options)=>{const{idKey,name}=options;setTrendlineSignals(signals,options),signals.push(...(markOptions=>{const signals=[],{name:markName}=markOptions;return getMetricRanges(markOptions).length&&addHighlightedSeriesSignalEvents(signals,`${markName}_voronoi`,2),signals})(options)),isInteractive(options)&&(addHighlightedItemSignalEvents(signals,`${name}_voronoi`,idKey,2),addHighlightedSeriesSignalEvents(signals,`${name}_voronoi`,2),addHoverSignals(signals,options),addTooltipSignals(signals,options))})),lineSpecBuilder_setScales=(0,immer.jM)(((scales,options)=>{const{metricAxis,dimension,color,lineType,opacity,padding,scaleType}=options;return addContinuousDimensionScale(scales,{scaleType,dimension,padding}),addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addMetricScale(scales,getMetricKeys(options)),metricAxis&&addMetricScale(scales,getMetricKeys(options),"y",metricAxis),scales.push(...getTrendlineScales(options)),scales})),addLineMarks=(0,immer.jM)(((marks,options)=>{const{color,highlightedItem,isSparkline,lineType,name,opacity,staticPoint}=options,{facets}=getFacetsFromOptions({color,lineType,opacity});marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:facets}},marks:[getLineMark(options,`${name}_facet`)]}),(staticPoint||isSparkline)&&marks.push((({name,metric,metricAxis,color,colorScheme,scaleType,dimension,isSparkline,pointSize=125})=>({name:`${name}_staticPoints`,description:`${name}_staticPoints`,type:"symbol",from:{data:`${name}_staticPointData`},interactive:!1,encode:{enter:{size:{value:pointSize},fill:isSparkline?{signal:constants.b3}:getColorProductionRule(color,colorScheme),stroke:isSparkline?getColorProductionRule(color,colorScheme):{signal:constants.b3},y:getYProductionRule(metricAxis,metric)},update:{x:getXProductionRule(scaleType,dimension)}}}))(options)),marks.push(...(lineMarkOptions=>{const{color,lineType}=lineMarkOptions,{facets}=getFacetsFromOptions({color,lineType}),marks=[],metricRanges=getMetricRanges(lineMarkOptions);for(const metricRangeOptions of metricRanges){const{displayOnHover,name}=metricRangeOptions,data=displayOnHover?`${name}_highlightedData`:constants.H5;marks.push({name:`${name}_group`,type:"group",clip:!0,from:{facet:{name:`${name}_facet`,data,groupby:facets}},marks:getMetricRangeMark(lineMarkOptions,metricRangeOptions)})}return marks})(options)),(isInteractive(options)||void 0!==highlightedItem)&&marks.push(...getLineHoverMarks(options,`${constants.H5}ForTooltip`)),marks.push(...getTrendlineMarks(options))})),getMetricKeys=lineOptions=>{const metricKeys=[lineOptions.metric];return getMetricRanges(lineOptions).forEach((metricRange=>{metricRange.scaleAxisToFit&&metricKeys.push(metricRange.metricStart,metricRange.metricEnd)})),metricKeys},addHoverSignals=(signals,options)=>{const{idKey,interactionMode,name}=options;interactionMode===constants.BZ.ITEM&&getHoverMarkNames(name).forEach((hoverMarkName=>{addHighlightedItemSignalEvents(signals,hoverMarkName,idKey,1),addHighlightedSeriesSignalEvents(signals,hoverMarkName,1)}))},addCombo=(0,immer.jM)(((spec,{colorScheme=constants.gb,highlightedItem,idKey,index=0,name,marks=[],dimension=constants.Lr})=>{let{barCount,lineCount}=initializeComponentCounts();const comboName=(0,utils.C)(name||`combo${index}`);return spec=[...marks].reduce(((acc,mark)=>"bar"===mark.markType?(barCount++,addBar(acc,{...mark,colorScheme,highlightedItem,idKey,index:barCount,name:getComboMarkName(mark,comboName,barCount),dimension:getDimension(mark,dimension)})):(lineCount++,addLine(acc,{...mark,colorScheme,highlightedItem,idKey,index:lineCount,name:getComboMarkName(mark,comboName,lineCount),dimension:getDimension(mark,dimension)}))),spec)})),initializeComponentCounts=()=>({barCount:-1,lineCount:-1}),getComboMarkName=(mark,comboName,index)=>{if(mark.name)return mark.name;const displayName=getDisplayName(mark.markType);return(0,utils.q)(comboName,`${displayName}${index}`)},getDisplayName=markType=>markType?markType.charAt(0).toUpperCase()+markType.slice(1):"",getDimension=(mark,dimension)=>mark.dimension??dimension,getDonutSummary=options=>{if(options.donutSummaries.length)return applyDonutSummaryPropDefaults(options.donutSummaries[0],options)},applyDonutSummaryPropDefaults=({numberFormat="shortNumber",...options},donutOptions)=>({donutOptions,numberFormat,...options}),getDonutSummaryGroupMark=options=>{const{donutOptions,label}=options,groupMark={type:"group",name:`${donutOptions.name}_summaryGroup`,marks:[{type:"text",name:`${donutOptions.name}_summaryValue`,from:{data:`${donutOptions.name}_summaryData`},encode:getSummaryValueEncode(options)}]};return label&&groupMark.marks?.push({type:"text",name:`${donutOptions.name}_summaryLabel`,from:{data:`${donutOptions.name}_summaryData`},encode:getSummaryLabelEncode({...options,label})}),groupMark},getBooleanDonutSummaryGroupMark=options=>{const{donutOptions,label}=options,groupMark={type:"group",name:`${donutOptions.name}_percentText`,marks:[{type:"text",name:`${donutOptions.name}_booleanSummaryValue`,from:{data:`${donutOptions.name}_booleanData`},encode:getSummaryValueEncode(options)}]};return label&&groupMark.marks?.push({type:"text",name:`${donutOptions.name}_booleanSummaryLabel`,from:{data:`${donutOptions.name}_booleanData`},encode:getSummaryLabelEncode({...options,label})}),groupMark},getSummaryValueEncode=options=>{const{donutOptions,label}=options;return{update:{x:{signal:"width / 2"},y:{signal:"height / 2"},text:getSummaryValueText(options),fontSize:[{test:`${constants.Ii} * ${donutOptions.holeRatio} < ${constants.iJ}`,value:0},{signal:`${donutOptions.name}_summaryFontSize`}],align:{value:"center"},baseline:getSummaryValueBaseline(label),limit:getSummaryValueLimit(options)}}},getSummaryValueText=({donutOptions,numberFormat})=>donutOptions.isBoolean?{signal:`format(datum['${donutOptions.metric}'], '.0%')`}:[...getTextNumberFormat(numberFormat,"sum"),{field:"sum"}],getSummaryValueBaseline=label=>label?{value:"alphabetic"}:{value:"middle"},getSummaryValueLimit=({donutOptions,label})=>{const{holeRatio,name}=donutOptions,fontHeight=label?`${name}_summaryFontSize`:`${name}_summaryFontSize * 0.5`;return{signal:`2 * sqrt(pow(${`${constants.Ii} * ${holeRatio}`}, 2) - pow(${fontHeight}, 2))`}},getSummaryLabelEncode=({donutOptions,label})=>({update:{x:{signal:"width / 2"},y:{signal:"height / 2"},dy:{signal:`ceil(${donutOptions.name}_summaryFontSize * 0.25)`},text:{value:label},fontSize:[{test:`${constants.Ii} * ${donutOptions.holeRatio} < ${constants.iJ}`,value:0},{signal:`ceil(${donutOptions.name}_summaryFontSize * 0.5)`}],align:{value:"center"},baseline:{value:"top"},limit:{signal:`2 * sqrt(pow(${constants.Ii} * ${donutOptions.holeRatio}, 2) - pow(${donutOptions.name}_summaryFontSize * 0.75, 2))`}}}),applySegmentLabelPropDefaults=({percent=!1,value=!1,valueFormat="standardNumber",...options},donutOptions)=>({donutOptions,percent,value,valueFormat,...options}),getSegmentLabelMarks=donutOptions=>{const{isBoolean,name}=donutOptions;if(isBoolean)return[];const segmentLabel=(options=>{if(options.segmentLabels.length)return applySegmentLabelPropDefaults(options.segmentLabels[0],options)})(donutOptions);return segmentLabel?[{name:`${name}_segmentLabelGroup`,type:"group",marks:[getSegmentLabelTextMark(segmentLabel),...getSegmentLabelValueTextMark(segmentLabel)]}]:[]},getSegmentLabelTextMark=({labelKey,value,percent,donutOptions})=>{const{name,color}=donutOptions;return{type:"text",name:`${name}_segmentLabel`,from:{data:constants.H5},encode:{enter:{...getBaseSegmentLabelEnterEncode(name),text:{field:labelKey??color},fontWeight:{value:"bold"},dy:value||percent?{signal:`datum['${name}_arcTheta'] <= 0.5 * PI || datum['${name}_arcTheta'] >= 1.5 * PI ? -16 : 0`}:void 0},update:positionEncodings}}},getSegmentLabelValueTextMark=options=>{if(!options.value&&!options.percent)return[];const{donutOptions}=options;return[{type:"text",name:`${donutOptions.name}_segmentLabelValue`,from:{data:constants.H5},encode:{enter:{...getBaseSegmentLabelEnterEncode(donutOptions.name),text:getSegmentLabelValueText(options),dy:{signal:`datum['${donutOptions.name}_arcTheta'] <= 0.5 * PI || datum['${donutOptions.name}_arcTheta'] >= 1.5 * PI ? 0 : 16`}},update:positionEncodings}}]},getBaseSegmentLabelEnterEncode=name=>({radius:{signal:`${constants.Ii} + 6`},theta:{field:`${name}_arcTheta`},fontSize:getSegmentLabelFontSize(name),align:{signal:`datum['${name}_arcTheta'] <= PI ? 'left' : 'right'`},baseline:{signal:`datum['${name}_arcTheta'] <= 0.5 * PI || datum['${name}_arcTheta'] >= 1.5 * PI ? 'bottom' : 'top'`}}),positionEncodings={x:{signal:"width / 2"},y:{signal:"height / 2"}},getSegmentLabelValueText=({donutOptions,percent,value,valueFormat})=>{const percentSignal=`format(datum['${donutOptions.name}_arcPercent'], '.0%')`;if(value){const rules=getTextNumberFormat(valueFormat,donutOptions.metric);return percent?rules.map((rule=>({...rule,signal:`${percentSignal} + "\\u00a0\\u00a0" + ${rule.signal}`}))):rules}if(percent)return{signal:percentSignal}},getSegmentLabelFontSize=name=>[{test:`datum['${name}_arcLength'] < ${constants.T6}`,value:0},{value:14}],addDonut=(0,immer.jM)(((spec,{chartPopovers=[],chartTooltips=[],color=constants.OT,colorScheme=constants.gb,donutSummaries=[],index=0,metric=constants.bA,name,startAngle=0,holeRatio=.85,isBoolean=!1,segmentLabels=[],...options})=>{const donutOptions={chartPopovers,chartTooltips,color,colorScheme,donutSummaries,holeRatio,index,isBoolean,metric,name:(0,utils.C)(name??`donut${index}`),segmentLabels,startAngle,...options};spec.data=donutSpecBuilder_addData(spec.data??[],donutOptions),spec.scales=donutSpecBuilder_addScales(spec.scales??[],donutOptions),spec.marks=donutSpecBuilder_addMarks(spec.marks??[],donutOptions),spec.signals=donutSpecBuilder_addSignals(spec.signals??[],donutOptions)})),donutSpecBuilder_addData=(0,immer.jM)(((data,options)=>{const{name,isBoolean}=options,filteredTableIndex=data.findIndex((d=>d.name===constants.H5));var donutOptions;data[filteredTableIndex].transform=data[filteredTableIndex].transform??[],data[filteredTableIndex].transform?.push(...getPieTransforms(options)),isBoolean&&data.push({name:`${name}_booleanData`,source:constants.H5,transform:[{type:"window",ops:["row_number"],as:[`${name}_rscRowIndex`]},{type:"filter",expr:`datum.${name}_rscRowIndex === 1`}]}),data.push(...(donutOptions=options,!getDonutSummary(donutOptions)||donutOptions.isBoolean?[]:[{name:`${donutOptions.name}_summaryData`,source:constants.H5,transform:[{type:"aggregate",fields:[donutOptions.metric],ops:["sum"],as:["sum"]}]}]))})),getPieTransforms=({startAngle,metric,name})=>[{type:"pie",field:metric,startAngle,endAngle:{signal:`${startAngle} + 2 * PI`},as:[`${name}_startAngle`,`${name}_endAngle`]},{type:"formula",as:`${name}_arcTheta`,expr:`(datum['${name}_startAngle'] + datum['${name}_endAngle']) / 2`},{type:"formula",as:`${name}_arcLength`,expr:`datum['${name}_endAngle'] - datum['${name}_startAngle']`},{type:"formula",as:`${name}_arcPercent`,expr:`datum['${name}_arcLength'] / (2 * PI)`}],donutSpecBuilder_addScales=(0,immer.jM)(((scales,options)=>{const{color}=options;var donutOptions;addFieldToFacetScaleDomain(scales,constants.Tj,color),scales.push(...(donutOptions=options,getDonutSummary(donutOptions)?[{name:`${donutOptions.name}_summaryFontSizeScale`,type:"threshold",domain:[32,36,40,45,50,60],range:[28,32,36,40,45,50,60]}]:[]))})),donutSpecBuilder_addMarks=(0,immer.jM)(((marks,options)=>{marks.push((options=>{const{chartPopovers,chartTooltips,color,colorScheme,holeRatio,idKey,name}=options;return{type:"arc",name,description:name,from:{data:constants.H5},encode:{enter:{fill:getColorProductionRule(color,colorScheme),x:{signal:"width / 2"},y:{signal:"height / 2"},tooltip:getTooltip(chartTooltips,name),stroke:{value:(0,themes.FH)("static-blue",colorScheme)}},update:{startAngle:{field:`${name}_startAngle`},endAngle:{field:`${name}_endAngle`},padAngle:{value:.01},innerRadius:{signal:`${holeRatio} * ${constants.Ii}`},outerRadius:{signal:constants.Ii},opacity:getMarkOpacity(options),cursor:getCursor(chartPopovers),strokeWidth:[{test:`${constants.sk} === datum.${idKey}`,value:2},{value:0}]}}}})(options)),marks.push(...(options=>{const donutSummary=getDonutSummary(options);if(!donutSummary)return[];const marks=[];return options.isBoolean?marks.push(getBooleanDonutSummaryGroupMark(donutSummary)):marks.push(getDonutSummaryGroupMark(donutSummary)),marks})(options)),marks.push(...getSegmentLabelMarks(options))})),donutSpecBuilder_addSignals=(0,immer.jM)(((signals,options)=>{const{chartTooltips,idKey,name}=options;signals.push(...(donutOptions=>{if(!getDonutSummary(donutOptions))return[];const{name:donutName,holeRatio}=donutOptions;return[{name:`${donutName}_summaryFontSize`,update:`scale('${donutName}_summaryFontSizeScale', ${constants.Ii} * ${holeRatio} * ${constants.We})`}]})(options)),isInteractive(options)&&addHighlightedItemSignalEvents(signals,name,idKey,1,chartTooltips[0]?.excludeDataKeys)})),setHoverOpacityForMarks=(marks,keys,name)=>{if(!marks.length)return;flattenMarks(marks).filter(markUsesSeriesColorScale).forEach((mark=>{mark.encode||(mark.encode={update:{}}),mark.encode.update||(mark.encode.update={});const{update}=mark.encode,{opacity}=update;if(void 0!==opacity){const highlightOpacityRule=getHighlightOpacityRule(keys,name);Array.isArray(update.opacity)||(update.opacity=[]);const opacityRuleInsertIndex=Math.max(update.opacity.length-1,0);update.opacity.splice(opacityRuleInsertIndex,0,highlightOpacityRule)}}))},getHighlightOpacityRule=(keys,name)=>{let test=`isValid(${constants.gG}) && ${constants.gG} !== datum.${constants.y4}`;return keys?.length&&(test=`isValid(${constants.oK}) && ${constants.oK} !== datum.${name}_highlightGroupId`),{test,value:1/constants.ux}},markUsesSeriesColorScale=mark=>{const enter=mark.encode?.enter;if(!enter)return!1;const{fill,stroke}=enter;return!(!fill||!("scale"in fill)||fill.scale!==constants.Tj)||(!!(fill&&"signal"in fill&&fill.signal.includes("scale('colors',"))||!(!stroke||!("scale"in stroke)||stroke.scale!==constants.Tj))},flattenMarks=marks=>{let result=marks;for(const mark of marks)isGroupMark(mark)&&mark.marks&&(result=[...result,...flattenMarks(mark.marks)]);return result},isGroupMark=mark=>"group"===mark.type,facetScaleNames=[constants.Tj,constants.Ze,constants.VQ,constants.$M,"secondaryColor","secondaryLineType","secondaryOpacity","secondarySymbolShape",constants.SJ,constants.Rl],scaleHasKey=(scale,keys)=>scale.domain.fields.some((field=>keys.includes(field.toString()))),isScaleWithMultiFields=scale=>Boolean("domain"in scale&&scale.domain&&"fields"in scale.domain),getColumns=position=>{if(!["left","right"].includes(position))return{signal:"floor(width / 220)"}},getHiddenEntriesFilter=(hiddenEntries,name)=>hiddenEntries.length?[{type:"filter",expr:`indexof(${JSON.stringify(hiddenEntries)}, datum.${name}Entries) === -1`}]:[],getEncodings=(facets,legendOptions)=>{const symbolEncodings=getSymbolEncodings(facets,legendOptions),hoverEncodings=getHoverEncodings(legendOptions),legendLabelsEncodings=getLegendLabelsEncodings(legendOptions.name,legendOptions.legendLabels),showHideEncodings=getShowHideEncodings(legendOptions),clickEncodings=getClickEncodings(legendOptions);return mergeLegendEncodings([symbolEncodings,legendLabelsEncodings,hoverEncodings,showHideEncodings,clickEncodings])},getLegendLabelsEncodings=(name,legendLabels)=>legendLabels?{labels:{update:{text:[{test:`indexof(pluck(${name}_labels, 'seriesName'), datum.value) > -1`,signal:`${name}_labels[indexof(pluck(${name}_labels, 'seriesName'), datum.value)].label`},{signal:"datum.value"}]}}}:{},getHoverEncodings=options=>{const{highlight,highlightedSeries,name,hasMouseInteraction,descriptions,chartPopovers}=options;return highlight||highlightedSeries||descriptions||chartPopovers?.length?{entries:{name:`${name}_legendEntry`,interactive:!0,enter:{tooltip:legendUtils_getTooltip(descriptions,name)},update:{fill:{value:"transparent"}}},labels:{update:{opacity:getOpacityEncoding(options)}},symbols:{update:{opacity:getOpacityEncoding(options)}}}:hasMouseInteraction?{entries:{name:`${name}_legendEntry`,interactive:!0,enter:{fill:{value:"transparent"}}}}:{}},legendUtils_getTooltip=(descriptions,name)=>{if(descriptions?.length)return{signal:`merge(datum, {'${constants.EA}': '${name}'})`}},getOpacityEncoding=({highlight,highlightedSeries,keys,chartPopovers})=>{const highlightSignalName=keys?.length?constants.oK:constants.gG,selectedSignalName=keys?.length?constants.U3:constants.uW;if(highlight||highlightedSeries||chartPopovers?.length)return[{test:`isValid(${highlightSignalName}) && datum.value !== ${highlightSignalName}`,value:1/constants.ux},{test:`isValid(${selectedSignalName}) && datum.value !== ${selectedSignalName}`,value:1/constants.ux},constants.ZH]},getSymbolEncodings=(facets,options)=>{const{color,lineType,lineWidth,name,opacity,symbolShape,colorScheme}=options,enter={fillOpacity:getSymbolFacetEncoding({facets,facetType:constants.$M,customValue:opacity,name}),shape:getSymbolFacetEncoding({facets,facetType:constants.SJ,customValue:symbolShape,name}),size:getSymbolFacetEncoding({facets,facetType:constants.Rl,name}),strokeDash:getSymbolFacetEncoding({facets,facetType:constants.Ze,customValue:lineType,name}),strokeWidth:getSymbolFacetEncoding({facets,facetType:constants.Bg,customValue:lineWidth,name})},update={fill:[...getHiddenSeriesColorRule(options,"gray-300"),getSymbolFacetEncoding({facets,facetType:constants.Tj,customValue:color,name})??{value:themes.YA[colorScheme]["categorical-100"]}],stroke:[...getHiddenSeriesColorRule(options,"gray-300"),getSymbolFacetEncoding({facets,facetType:constants.Tj,customValue:color,name})??{value:themes.YA[colorScheme]["categorical-100"]}]};return{entries:{name:`${name}_legendEntry`},symbols:JSON.parse(JSON.stringify({enter,update}))}},getSymbolFacetEncoding=({customValue,facets,facetType,name})=>{if(customValue)return"string"==typeof customValue?{signal:`scale('${facetType}', data('${name}Aggregate')[datum.index].${customValue})`}:{value:customValue.value};if(!facets)return;const secondaryFacetMapping={color:{scale:"secondaryColor",signal:"colors"},linearColor:{scale:"secondaryColor",signal:"colors"},lineType:{scale:"secondaryLineType",signal:"lineTypes"},lineWidth:{scale:"secondaryLineWidth",signal:"lineWidths"},opacity:{scale:"secondaryOpacity",signal:"opacities"},symbolShape:{scale:"secondarySymbolShape",signal:"symbolShapes"},symbolSize:{scale:"secondarySymbolSize",signal:"symbolSizes"},symbolPathWidth:{scale:"secondarySymbolPathWidth",signal:"symbolPathWidths"}},facet=facets.find((f=>f.facetType===facetType));if(!facet)return;const secondaryFacet=facets.find((f=>f.facetType===secondaryFacetMapping[facetType].scale));if(secondaryFacet){const{scale,signal}=secondaryFacetMapping[facetType];return{signal:`scale('${signal}', data('${name}Aggregate')[datum.index].${facet.field})[indexof(domain('${scale}'), data('${name}Aggregate')[datum.index].${secondaryFacet.field})% length(scale('${signal}', data('${name}Aggregate')[datum.index].${facet.field}))]`}}return{signal:`scale('${facetType}', data('${name}Aggregate')[datum.index].${facet.field})`}},getHiddenSeriesColorRule=({colorScheme,hiddenSeries,isToggleable,keys,name},colorValue)=>isToggleable||hiddenSeries.length?keys?.length?[{test:`indexof(pluck(data('${constants.H5}'), '${name}_highlightGroupId'), datum.value) === -1`,value:(0,themes.FH)(colorValue,colorScheme)}]:[{test:"indexof(hiddenSeries, datum.value) !== -1",value:(0,themes.FH)(colorValue,colorScheme)}]:[],getShowHideEncodings=options=>{const{colorScheme}=options;return{labels:{update:{fill:[...getHiddenSeriesColorRule(options,"gray-500"),{value:(0,themes.FH)("gray-700",colorScheme)}]}}}},getClickEncodings=options=>{const{isToggleable,keys,name,hasOnClick,chartPopovers}=options;let clickEncode={};return(isToggleable&&!keys||hasOnClick||chartPopovers?.length)&&(clickEncode={entries:{name:`${name}_legendEntry`,interactive:!0,enter:{fill:{value:"transparent"},cursor:{value:"pointer"}}}}),clickEncode},mergeLegendEncodings=encodings=>{let mergedEncodings={};for(const encoding of encodings)mergedEncodings=cjs_default()(mergedEncodings,encoding);return mergedEncodings},getSymbolType=symbolShape=>symbolShape&&"object"==typeof symbolShape&&"value"in symbolShape?getPathFromSymbolShape(symbolShape.value):"circle",addLegend=(0,immer.jM)(((spec,{color,hasMouseInteraction=!1,hasOnClick=!1,hiddenEntries=[],hiddenSeries=[],highlight=!1,highlightedSeries,index=0,isToggleable=!1,lineType,lineWidth,position="bottom",symbolShape,title,colorScheme=constants.gb,...options})=>{const{formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape}=formatFacetRefsWithPresets(color,lineType,lineWidth,symbolShape,colorScheme),name=`legend${index}`,legendOptions={color:formattedColor,hasMouseInteraction,hasOnClick,hiddenEntries,hiddenSeries,highlight,highlightedSeries,index,isToggleable,lineType:formattedLineType,lineWidth:formattedLineWidth,name,position,symbolShape:formattedSymbolShape,title,colorScheme,...options};spec.scales=legendSpecBuilder_addScales(spec.scales??[],legendOptions);const{ordinalFacets,continuousFacets}=options.keys?((keys,scales)=>{const ordinalFacets=[],continuousFacets=[];return scales.forEach((scale=>{isScaleWithMultiFields(scale)&&scaleHasKey(scale,keys)&&("ordinal"===scale.type||"point"===scale.type?ordinalFacets.push({facetType:scale.name,field:scale.domain.fields.find((field=>keys.includes(field.toString())))?.toString()}):continuousFacets.push({facetType:scale.name,field:scale.domain.fields.find((field=>keys.includes(field.toString())))?.toString()}))})),{ordinalFacets,continuousFacets}})(options.keys,spec.scales??[]):(scales=>{const ordinalFacets=[],continuousFacets=[];return scales.forEach((scale=>{facetScaleNames.includes(scale.name)&&isScaleWithMultiFields(scale)&&scale.domain.fields.length&&("ordinal"===scale.type||"point"===scale.type?ordinalFacets.push({facetType:scale.name,field:scale.domain.fields[0].toString()}):continuousFacets.push({facetType:scale.name,field:scale.domain.fields[0].toString()}))})),{ordinalFacets,continuousFacets}})(spec.scales??[]),legends=[];if(ordinalFacets.length){spec.scales.push({name:`${name}Entries`,type:"ordinal",domain:{data:`${name}Aggregate`,field:`${name}Entries`}});const uniqueFacetFields=[...new Set(ordinalFacets.map((facet=>facet.field)))];spec.data=legendSpecBuilder_addData(spec.data??[],{...legendOptions,facets:uniqueFacetFields}),spec.signals=legendSpecBuilder_addSignals(spec.signals??[],legendOptions),spec.marks=legendSpecBuilder_addMarks(spec.marks??[],legendOptions),legends.push(getCategoricalLegend(ordinalFacets,legendOptions))}continuousFacets.forEach((facet=>{legends.push(getContinuousLegend(facet,legendOptions))})),void 0===spec.legends&&(spec.legends=[]),spec.legends.push(...legends)})),formatFacetRefsWithPresets=(color,lineType,lineWidth,symbolShape,colorScheme)=>{let formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape;return formattedColor=color&&"object"==typeof color?{value:(0,themes.FH)(color.value,colorScheme)}:color,formattedLineType=lineType&&"object"==typeof lineType?{value:getStrokeDashFromLineType(lineType.value)}:lineType,formattedLineWidth=lineWidth&&"object"==typeof lineWidth?{value:getLineWidthPixelsFromLineWidth(lineWidth.value)}:lineWidth,formattedSymbolShape=symbolShape&&"object"==typeof symbolShape?{value:getPathFromSymbolShape(symbolShape.value)}:symbolShape,{formattedColor,formattedLineType,formattedLineWidth,formattedSymbolShape}},getCategoricalLegend=(facets,options)=>{const{name,position,title,labelLimit,titleLimit}=options,legend={fill:`${name}Entries`,direction:["top","bottom"].includes(position)?"horizontal":"vertical",orient:position,title,encode:getEncodings(facets,options),columns:getColumns(position),labelLimit};return void 0!==titleLimit&&(legend.titleLimit=titleLimit),legend},getContinuousLegend=(facet,options)=>{const{symbolShape}=options;return facet.facetType===constants.Rl?{size:constants.Rl,...getLegendLayout(options),symbolType:getSymbolType(symbolShape)}:{fill:constants.VQ,gradientThickness:10,...getLegendLayout(options)}},getLegendLayout=({position,title,titleLimit})=>{const layout={direction:["top","bottom"].includes(position)?"horizontal":"vertical",orient:position,title};return void 0!==titleLimit&&(layout.titleLimit=titleLimit),layout},legendSpecBuilder_addScales=(0,immer.jM)(((scales,{color,lineType,opacity,symbolShape})=>{addFieldToFacetScaleDomain(scales,constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addFieldToFacetScaleDomain(scales,constants.SJ,symbolShape)})),legendSpecBuilder_addMarks=(0,immer.jM)(((marks,{highlight,keys,name})=>{highlight&&setHoverOpacityForMarks(marks,keys,name)})),legendSpecBuilder_addData=(0,immer.jM)(((data,{facets,hiddenEntries,keys,name})=>{const expr=facets.map((facet=>`datum.${facet}`)).join(' + " | " + ');if(data.push({name:`${name}Aggregate`,source:"table",transform:[{type:"aggregate",groupby:facets},{type:"formula",as:`${name}Entries`,expr},...getHiddenEntriesFilter(hiddenEntries,name)]}),keys?.length){const tableData=getTableData(data);tableData.transform||(tableData.transform=[]),tableData.transform.push({type:"formula",as:`${name}_highlightGroupId`,expr:keys.map((key=>`datum.${key}`)).join(' + " | " + ')})}})),legendSpecBuilder_addSignals=(0,immer.jM)(((signals,{hiddenSeries,highlight,isToggleable,keys,legendLabels,name})=>{highlight&&((signals,legendName,includeHiddenSeries,keys)=>{const signalName=keys?.length?constants.oK:constants.gG,highlightedItemSignal=signals.find((signal=>signal.name===signalName));highlightedItemSignal&&(void 0===highlightedItemSignal.on&&(highlightedItemSignal.on=[]),highlightedItemSignal.on.push({events:`@${legendName}_legendEntry:mouseover`,update:getHighlightSignalUpdateExpression(legendName,includeHiddenSeries,keys)},{events:`@${legendName}_legendEntry:mouseout`,update:"null"}))})(signals,name,Boolean(isToggleable||hiddenSeries),keys),legendLabels&&signals.push(getGenericValueSignal(`${name}_labels`,legendLabels))})),getScatterPaths=scatterOptions=>scatterOptions.scatterPaths.map(((path,index)=>(({color="gray-500",groupBy,pathWidth={value:"M"},opacity=.5,...scatterPathOptions},index,{color:scatterColor,colorScheme,dimension,dimensionScaleType,lineType,metric,name:scatterName,opacity:scatterOpacity,size})=>{const{facets}=getFacetsFromOptions({color:scatterColor,lineType,size,opacity:scatterOpacity});return{color,colorScheme,dimension,dimensionScaleType,groupBy:groupBy??facets,metric,index,pathWidth,name:`${scatterName}Path${index}`,opacity,...scatterPathOptions}})(path,index,scatterOptions))),getScatterPathTrailMark=({color,colorScheme,dimension,dimensionScaleType,pathWidth,metric,name,opacity})=>({name,type:"trail",from:{data:`${name}_facet`},encode:{enter:{fill:{value:(0,themes.FH)(color,colorScheme)},fillOpacity:{value:opacity},size:getPathWidth(pathWidth)},update:{opacity:getOpacity(),x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}),getOpacity=()=>{const fadedValue=1/constants.ux;return[{test:`isValid(${constants.gG}) || isValid(${constants.qE}) || isValid(${constants.uW}) || isValid(${constants.sk})`,value:fadedValue},constants.ZH]},getPathWidth=pathWidth=>"string"==typeof pathWidth?{scale:constants.SR,field:pathWidth}:{value:getLineWidthPixelsFromLineWidth(pathWidth.value)},addScatterMarks=(0,immer.jM)(((marks,options)=>{const{name}=options,scatterGroup={name:`${name}_group`,type:"group",marks:[getScatterMark(options),...getScatterHoverMarks(options),...getScatterSelectMarks(options)]};marks.push(...(scatterOptions=>{const marks=[];return getScatterPaths(scatterOptions).forEach((path=>{const{groupBy,name}=path;marks.push({name:`${name}_group`,type:"group",from:{facet:{name:`${name}_facet`,data:constants.H5,groupby:groupBy}},marks:[getScatterPathTrailMark(path)]})})),marks})(options)),marks.push(scatterGroup),marks.push(...getTrendlineMarks(options))})),getScatterMark=options=>{const{color,colorScaleType,colorScheme,dimension,dimensionScaleType,lineType,lineWidth,metric,name,opacity,size}=options;return{name,description:name,type:"symbol",from:{data:constants.H5},encode:{enter:{blend:{value:"light"===colorScheme?"multiply":"screen"},fill:getColorProductionRule(color,colorScheme,colorScaleType),fillOpacity:getOpacityProductionRule(opacity),shape:{value:"circle"},size:getSymbolSizeProductionRule(size),strokeDash:getStrokeDashProductionRule(lineType),strokeWidth:getLineWidthProductionRule(lineWidth),stroke:getColorProductionRule(color,colorScheme,colorScaleType)},update:{opacity:scatterMarkUtils_getOpacity(options),x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}},scatterMarkUtils_getOpacity=scatterOptions=>{const{highlightedItem,idKey}=scatterOptions;if(!isInteractive(scatterOptions)&&void 0===highlightedItem)return[constants.ZH];const fadedValue=1/constants.ux,rules=[];return addHighlightMarkOpacityRules(rules,scatterOptions),hasPopover(scatterOptions)&&rules.push({test:`isValid(${constants.sk}) && ${constants.sk} !== datum.${idKey}`,value:fadedValue}),[...rules,constants.ZH]},getScatterHoverMarks=scatterOptions=>{const{dimension,dimensionScaleType,highlightedItem,metric,name}=scatterOptions;return isInteractive(scatterOptions)||void 0!==highlightedItem?[getPointsForVoronoi(`${constants.H5}ForTooltip`,dimension,metric,name,dimensionScaleType),getVoronoiPath(scatterOptions,`${name}_pointsForVoronoi`)]:[]},getScatterSelectMarks=scatterOptions=>{const{dimension,dimensionScaleType,metric,name,size}=scatterOptions;return hasPopover(scatterOptions)?[{name:`${name}_selectRing`,type:"symbol",from:{data:`${name}_selectedData`},encode:{enter:{fill:{value:"transparent"},shape:{value:"circle"},size:getSelectRingSize(size),strokeWidth:{value:2},stroke:{value:themes.YA.light["static-blue"]}},update:{x:getXProductionRule(dimensionScaleType,dimension),y:{scale:"yLinear",field:metric}}}}]:[]},getSelectRingSize=size=>{const baseSize=getSymbolSizeProductionRule(size);return"value"in baseSize&&"number"==typeof baseSize.value?{value:Math.pow(Math.sqrt(baseSize.value)+4,2)}:"scale"in baseSize&&"field"in baseSize?{signal:`pow(sqrt(scale('${baseSize.scale}', datum.${baseSize.field})) + 4, 2)`}:baseSize},addScatter=(0,immer.jM)(((spec,{chartPopovers=[],chartTooltips=[],color={value:"categorical-100"},colorScaleType="ordinal",colorScheme=constants.gb,dimension=constants.tc,dimensionScaleType=constants.hA,index=0,lineType={value:"solid"},lineWidth={value:0},metric=constants.bA,name,opacity={value:1},scatterPaths=[],size={value:"M"},trendlines=[],...options})=>{const scatterName=(0,utils.C)(name||`scatter${index}`),scatterOptions={chartPopovers,chartTooltips,color,colorScaleType,colorScheme,dimension,dimensionScaleType,index,interactiveMarkName:getInteractiveMarkName({chartPopovers,chartTooltips,highlightedItem:options.highlightedItem,trendlines},scatterName),lineType,lineWidth,metric,name:scatterName,opacity,scatterPaths,size,trendlines,...options};spec.data=scatterSpecBuilder_addData(spec.data??[],scatterOptions),spec.signals=scatterSpecBuilder_addSignals(spec.signals??[],scatterOptions),spec.scales=scatterSpecBuilder_setScales(spec.scales??[],scatterOptions),spec.marks=addScatterMarks(spec.marks??[],scatterOptions)})),scatterSpecBuilder_addData=(0,immer.jM)(((data,scatterOptions)=>{const{chartTooltips,dimension,dimensionScaleType,highlightedItem,idKey,name}=scatterOptions;if("time"===dimensionScaleType){const tableData=getTableData(data);tableData.transform=addTimeTransform(tableData.transform??[],dimension)}(isInteractive(scatterOptions)||void 0!==highlightedItem)&&data.push(getFilteredTooltipData(chartTooltips)),hasPopover(scatterOptions)&&data.push({name:`${name}_selectedData`,source:constants.H5,transform:[{type:"filter",expr:`${constants.sk} === datum.${idKey}`}]}),addTooltipData(data,scatterOptions),addTrendlineData(data,scatterOptions)})),scatterSpecBuilder_addSignals=(0,immer.jM)(((signals,scatterOptions)=>{const{idKey,name}=scatterOptions;setTrendlineSignals(signals,scatterOptions),isInteractive(scatterOptions)&&(addHighlightedItemSignalEvents(signals,`${name}_voronoi`,idKey,2),addTooltipSignals(signals,scatterOptions))})),scatterSpecBuilder_setScales=(0,immer.jM)(((scales,scatterOptions)=>{const{color,colorScaleType,dimension,dimensionScaleType,lineType,lineWidth,metric,opacity,size}=scatterOptions;addContinuousDimensionScale(scales,{scaleType:dimensionScaleType,dimension}),addMetricScale(scales,[metric]),addFieldToFacetScaleDomain(scales,"linear"===colorScaleType?constants.VQ:constants.Tj,color),addFieldToFacetScaleDomain(scales,constants.Ze,lineType),addFieldToFacetScaleDomain(scales,constants.Bg,lineWidth),addFieldToFacetScaleDomain(scales,constants.$M,opacity),addFieldToFacetScaleDomain(scales,constants.Rl,size),((scales,scatterOptions)=>{getScatterPaths(scatterOptions).forEach((path=>{addFieldToFacetScaleDomain(scales,constants.SR,path.pathWidth)}))})(scales,scatterOptions),scales.push(...getTrendlineScales(scatterOptions))})),addTitle=(0,immer.jM)(((spec,{text,fontWeight=constants.gO,position="middle",orient="top"})=>(spec.title={text,fontWeight,anchor:position,frame:"group",orient},spec)));function buildSpec({axes=[],backgroundColor=constants.z6,colors="categorical12",colorScheme=constants.gb,description,hiddenSeries=[],highlightedItem,highlightedSeries,idKey=constants.i4,legends=[],lineTypes=constants.R9,lineWidths=["M"],marks=[],opacities,symbolShapes=["rounded-square"],symbolSizes=["XS","XL"],title,titles=[]}){const options={axes,backgroundColor,colors,colorScheme,description,hiddenSeries,highlightedItem,highlightedSeries,idKey,legends,lineTypes,lineWidths,marks,opacities,symbolShapes,symbolSizes,title,titles};let spec=initializeSpec(null,{backgroundColor,colorScheme,description,title});spec.signals=getDefaultSignals(options),spec.scales=getDefaultScales(colors,colorScheme,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes);let{areaCount,barCount,bulletCount,comboCount,donutCount,lineCount,scatterCount}=chartSpecBuilder_initializeComponentCounts();const specOptions={colorScheme,idKey,highlightedItem};return spec=[...marks].reduce(((acc,mark)=>{switch(mark.markType){case"area":return areaCount++,addArea(acc,{...mark,...specOptions,index:areaCount});case"bar":return barCount++,addBar(acc,{...mark,...specOptions,index:barCount});case"bullet":return bulletCount++,addBullet(acc,{...mark,...specOptions,index:bulletCount});case"combo":return comboCount++,addCombo(acc,{...mark,...specOptions,index:comboCount});case"donut":return donutCount++,addDonut(acc,{...mark,...specOptions,index:donutCount});case"line":return lineCount++,addLine(acc,{...mark,...specOptions,index:lineCount});case"scatter":return scatterCount++,addScatter(acc,{...mark,...specOptions,index:scatterCount});case"bigNumber":return acc;default:return console.error(`Invalid component type: ${mark} is not a supported chart mark option child`),acc}}),spec),spec=[...legends].reduce(((acc,legend,index)=>addLegend(acc,{...legend,...specOptions,index,hiddenSeries,highlightedSeries})),spec),spec=[...axes].reduce(((acc,axis,index)=>addAxis(acc,{...axis,...specOptions,index})),spec),titles.length&&(spec=addTitle(spec,titles[0])),spec=JSON.parse(JSON.stringify(spec)),spec.data=chartSpecBuilder_addData(spec.data??[],{facets:getFacetsFromScales(spec.scales)}),highlightedSeries&&setHoverOpacityForMarks(spec.marks??[]),spec=removeUnusedScales(spec),safeClone(spec)}const removeUnusedScales=(0,immer.jM)((spec=>{spec.scales=spec.scales?.filter((scale=>!("domain"in scale&&scale.domain&&"fields"in scale.domain&&0===scale.domain.fields.length)))})),chartSpecBuilder_initializeComponentCounts=()=>({areaCount:-1,barCount:-1,comboCount:-1,donutCount:-1,bulletCount:-1,lineCount:-1,scatterCount:-1}),getDefaultSignals=({backgroundColor,colors,colorScheme,lineTypes,opacities,hiddenSeries,highlightedItem,highlightedSeries})=>{const signalBackgroundColor="transparent"===backgroundColor?"gray-50":backgroundColor;return[getGenericValueSignal(constants.b3,(0,themes.FH)(signalBackgroundColor,colorScheme)),getGenericValueSignal("colors",getTwoDimensionalColorScheme(colors,colorScheme)),getGenericValueSignal("lineTypes",getTwoDimensionalLineTypes(lineTypes)),getGenericValueSignal("opacities",getTwoDimensionalOpacities(opacities)),getGenericValueSignal("hiddenSeries",hiddenSeries??[]),getGenericValueSignal(constants.qE,highlightedItem),getGenericValueSignal(constants.oK),getGenericValueSignal(constants.gG,highlightedSeries),getGenericValueSignal(constants.sk),getGenericValueSignal(constants.uW),getGenericValueSignal(constants.U3)]},getTwoDimensionalColorScheme=(colors,colorScheme)=>isColors(colors)?getColors(colors,colorScheme).map((color=>[color])):colors.map((color=>getColors(color,colorScheme))),getTwoDimensionalLineTypes=lineTypes=>isLineTypeArray(lineTypes)?getStrokeDashesFromLineTypes(lineTypes).map((strokeDash=>[strokeDash])):lineTypes.map((lineTypeArray=>getStrokeDashesFromLineTypes(lineTypeArray))),getTwoDimensionalOpacities=opacities=>opacities?isNumberArray(opacities)?opacities.map((opacity=>[opacity])):opacities:[[1]],getDefaultScales=(colors,colorScheme,lineTypes,lineWidths,opacities,symbolShapes,symbolSizes)=>[getColorScale(colors,colorScheme),getLinearColorScale(colors,colorScheme),getLineTypeScale(lineTypes),getLineWidthScale(lineWidths),getOpacityScale(opacities),getSymbolShapeScale(symbolShapes),getSymbolSizeScale(symbolSizes),getSymbolPathWidthScale(symbolSizes)],getColorScale=(colors,colorScheme)=>{const range=isColors(colors)?getColors(colors,colorScheme):colors.map((c=>getColors(c,colorScheme)[0]));return getOrdinalScale("color",range)},getLinearColorScale=(colors,colorScheme)=>{const range=isColors(colors)?getColors(colors,colorScheme):colors.map((c=>getColors(c,colorScheme)[0]));return{name:constants.VQ,type:"linear",range,domain:{data:constants.Bt,fields:[]}}},getLineTypeScale=lineTypes=>{const range=isLineTypeArray(lineTypes)?getStrokeDashesFromLineTypes(lineTypes):lineTypes.map((lineTypesArray=>getStrokeDashFromLineType(lineTypesArray[0])));return getOrdinalScale(constants.Ze,range)},getSymbolShapeScale=symbolShapes=>{const range=isSymbolShapeArray(symbolShapes)?function getPathsFromSymbolShapes(symbolShapes){return symbolShapes.map((symbolShape=>getPathFromSymbolShape(symbolShape)))}(symbolShapes):symbolShapes.map((symbolShape=>getPathFromSymbolShape(symbolShape[0])));return getOrdinalScale(constants.SJ,range)},getSymbolSizeScale=symbolSizes=>({name:constants.Rl,type:"linear",zero:!1,range:symbolSizes.map((symbolSize=>getVegaSymbolSizeFromRscSymbolSize(symbolSize))),domain:{data:constants.Bt,fields:[]}}),getSymbolPathWidthScale=symbolSizes=>({name:constants.SR,type:"linear",zero:!1,range:symbolSizes.map((symbolSize=>getSymbolWidthFromRscSymbolSize(symbolSize))),domain:{data:constants.Bt,fields:[]}}),getLineWidthScale=lineWidths=>{const range=lineWidths.map((lineWidth=>getLineWidthPixelsFromLineWidth(lineWidth)));return getOrdinalScale(constants.Bg,range)},getOpacityScale=opacities=>{if(opacities?.length){const range=isNumberArray(opacities)?opacities:opacities.map((opacityArray=>opacityArray[0]));return getOrdinalScale(constants.$M,range)}return{name:constants.$M,type:"point",range:[1,0],padding:1,align:1,domain:{data:constants.Bt,fields:[]}}};function getColors(colors,colorScheme){return Array.isArray(colors)?colors.map((color=>(0,themes.FH)(color,colorScheme))):themes.yM[colors]}function getStrokeDashesFromLineTypes(lineTypes){return lineTypes.map((lineType=>getStrokeDashFromLineType(lineType)))}const chartSpecBuilder_addData=(0,immer.jM)(((data,{facets})=>{if(0===facets.length)return;data[0]?.transform?.push(...getSeriesIdTransform(facets));const index=data.findIndex((datum=>datum.name===constants.H5));-1!==index&&(data[index].transform=[{type:"filter",expr:`indexof(hiddenSeries, datum.${constants.y4}) === -1`},...data[index].transform??[]])})),isColorScale=colors=>Boolean(!Array.isArray(colors)&&colors in themes.yM),isColors=colors=>isColorScale(colors)||colors.some((color=>!isColorScale(color)&&"string"==typeof color)),isLineTypeArray=lineTypes=>lineTypes.some((lineType=>"string"==typeof lineType||isStrokeDashArray(lineType))),isStrokeDashArray=lineType=>Array.isArray(lineType)&&!lineType.some((value=>"number"!=typeof value)),isNumberArray=opacities=>!opacities.some((opacity=>Array.isArray(opacity))),isSymbolShapeArray=symbolShapes=>!symbolShapes.some((symbolShape=>Array.isArray(symbolShape))),safeClone=obj=>"function"==typeof structuredClone?structuredClone(obj):JSON.parse(JSON.stringify(obj));constants.i4,constants.y4,constants.AZ,constants.dm;var locale=__webpack_require__("./node_modules/d3-format/src/locale.js"),locales=__webpack_require__("./packages/locales/index.ts");const formatShortNumber=numberLocale=>{const locale="string"==typeof numberLocale?numberLocale:navigator.language,customDecimalSymbol="object"==typeof numberLocale?numberLocale.decimal:void 0;return value=>{const decimalSymbol=new Intl.NumberFormat(locale,{minimumFractionDigits:1,maximumFractionDigits:1}).format(1.1).replace(/\d/g,""),shortNumber=Intl.NumberFormat(locale,{notation:"compact"}).format(value);return customDecimalSymbol?shortNumber.replace(decimalSymbol,customDecimalSymbol):shortNumber}},formatLocaleCurrency=(numberLocale=locales.HW["en-US"])=>({value},currencyLocale,currencyCode,numberFormat)=>{if("string"==typeof value)return value;try{const formatOptions={style:"currency",currency:currencyCode,maximumFractionDigits:0},currencyTemplate=new Intl.NumberFormat(currencyLocale,formatOptions).format(0);let precision=2;"currency"!==numberFormat&&(precision=parseInt(numberFormat.split(".")[1].replace("f","")));const d3Formatter=(0,locale.A)(numberLocale);return currencyTemplate.replace("0",d3Formatter.format(`,.${precision}f`)(value))}catch(error){return console.error("Error formatting currency: ",error),(0,locale.A)(numberLocale).format("$,.2f")(value)}},formatHorizontalTimeAxisLabels=()=>{let prevLabel;return datum=>{const showLabel=0===datum.index||prevLabel!==datum.label;return prevLabel=datum.label,showLabel?datum.label:""}},formatVerticalAxisTimeLabels=()=>{let prevLabel;return datum=>{const labels=datum.label.split(" "),label=labels[0],showLabel=0===datum.index||prevLabel!==label;return prevLabel=label,showLabel?datum.label:labels[1]}},formatTimeDurationLabels=(numberLocale=locales.HW["en-US"])=>{const d3=(0,locale.A)(numberLocale),zeroPaddedFormat=d3.format("02,d"),format=d3.format(",d");return({value})=>{if("string"==typeof value)return value;const sign=value<0?"-":"",absoluteValue=Math.abs(value),seconds=zeroPaddedFormat(Math.floor(absoluteValue%60));if(absoluteValue<3600){return`${sign}${format(Math.floor(absoluteValue/60))}:${seconds}`}return`${sign}${format(Math.floor(absoluteValue/60/60))}:${zeroPaddedFormat(Math.floor(absoluteValue/60%60))}:${seconds}`}},consoleLog=value=>(console.log(value),value),getLabelWidth=(text,fontWeight="bold",fontSize=12)=>{const context=document.createElement("canvas").getContext("2d");return null===context?0:(context.font=`${fontWeight} ${fontSize}px ${themes.Yw}`,context.measureText(text).width)},truncateText=(text,maxWidth,fontWeight="normal",fontSize=12)=>{maxWidth-=4;const textWidth=getLabelWidth(text,fontWeight,fontSize),elipsisWidth=getLabelWidth("…",fontWeight,fontSize);if(textWidth<=maxWidth)return text;let truncatedText=text.slice(0,text.length-1).trim();for(let i=truncatedText.length;i>0&&(truncatedText=truncatedText.slice(0,truncatedText.length-1).trim(),!(getLabelWidth(truncatedText,fontWeight,fontSize)+elipsisWidth<=maxWidth));i--);return 0===truncatedText.length?text:truncatedText+"…"},getVegaEmbedOptions=(formatHorizontalTimeAxisLabels(),formatVerticalAxisTimeLabels(),({locale="en-US",height=400,width=600,padding=0,renderer="svg",config,colorScheme=constants.gb})=>{const expressionFunctions=((locale="en-US")=>{const{number:numberLocale}=(0,locales.JK)(locale),localeCode="string"==typeof locale?locale:locale?.number;return{formatTimeDurationLabels:formatTimeDurationLabels(numberLocale),formatLocaleCurrency:formatLocaleCurrency(numberLocale),formatShortNumber:formatShortNumber(localeCode),consoleLog,formatHorizontalTimeAxisLabels:formatHorizontalTimeAxisLabels(),formatVerticalAxisTimeLabels:formatVerticalAxisTimeLabels(),getLabelWidth,truncateText}})(locale),{number:numberLocale,time:timeLocale}=(0,locales.JK)(locale);return{actions:!1,ast:!0,expressionFunctions,formatLocale:numberLocale,height,width,padding,renderer,timeFormatLocale:timeLocale,config:config??getChartConfig(void 0,colorScheme)}})}}]);